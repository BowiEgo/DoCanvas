{"version":3,"file":"x-canvas.js","sources":["../../node_modules/tslib/tslib.es6.js","../../src/css/constant.ts","../../src/css/syntax/parser.ts","../../src/css/property-descriptors/background-clip.ts","../../src/css/property-descriptors/background-color.ts","../../src/css/property-descriptors/border-color.ts","../../src/css/property-descriptors/color.ts","../../src/css/property-descriptors/display.ts","../../src/css/property-descriptors/font-size.ts","../../src/css/property-descriptors/font-weight.ts","../../src/css/property-descriptors/height.ts","../../src/css/types/length-percentage.ts","../../src/css/property-descriptors/line-height.ts","../../src/css/property-descriptors/margin.ts","../../src/css/property-descriptors/opacity.ts","../../src/css/property-descriptors/padding.ts","../../src/css/property-descriptors/text-align.ts","../../src/css/property-descriptors/transform.ts","../../src/css/property-descriptors/visibility.ts","../../src/css/property-descriptors/width.ts","../../src/css/property-descriptors/z-index.ts","../../src/css/index.ts","../../src/tree-node/index.ts","../../src/utils/general.ts","../../src/utils/patchFlags.ts","../../src/render/canvas/vector.ts","../../src/render/canvas/boundCurves.ts","../../src/render/canvas/bezierCurve.ts","../../src/layout/index.ts","../../src/render/renderObject.ts","../../src/render/renderText.ts","../../src/render/renderInline.ts","../../src/render/renderBlock.ts","../../src/utils/treeSearch.ts","../../src/render/canvas/background.ts","../../src/render/index.ts","../../src/element/index.ts","../../src/index.ts","../../src/engine.ts"],"sourcesContent":["/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.push(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.push(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n","const BODY_STYLES = {\n  accentColor: 'rgb(94, 158, 255)',\n  additiveSymbols: '',\n  alignContent: 'normal',\n  alignItems: 'normal',\n  alignSelf: 'auto',\n  alignmentBaseline: 'auto',\n  all: '',\n  animation: 'none 0s ease 0s 1 normal none running',\n  animationComposition: 'replace',\n  animationDelay: '0s',\n  animationDirection: 'normal',\n  animationDuration: '0s',\n  animationFillMode: 'none',\n  animationIterationCount: '1',\n  animationName: 'none',\n  animationPlayState: 'running',\n  animationTimingFunction: 'ease',\n  appRegion: 'none',\n  appearance: 'none',\n  ascentOverride: '',\n  aspectRatio: 'auto',\n  backdropFilter: 'none',\n  backfaceVisibility: 'visible',\n  background:\n    'rgba(0, 0, 0, 0) none repeat scroll 0% 0% / auto padding-box border-box',\n  backgroundAttachment: 'scroll',\n  backgroundBlendMode: 'normal',\n  backgroundClip: 'border-box',\n  backgroundColor: 'rgba(0, 0, 0, 0)',\n  backgroundImage: 'none',\n  backgroundOrigin: 'padding-box',\n  backgroundPosition: '0% 0%',\n  backgroundPositionX: '0%',\n  backgroundPositionY: '0%',\n  backgroundRepeat: 'repeat',\n  backgroundRepeatX: 'repeat',\n  backgroundRepeatY: 'repeat',\n  backgroundSize: 'auto',\n  basePalette: '',\n  baselineShift: '0',\n  baselineSource: 'auto',\n  blockSize: '8066.71',\n  border: '0 none rgb(255, 255, 255)',\n  borderBlock: '0 none rgb(255, 255, 255)',\n  borderBlockColor: 'rgb(255, 255, 255)',\n  borderBlockEnd: '0 none rgb(255, 255, 255)',\n  borderBlockEndColor: 'rgb(255, 255, 255)',\n  borderBlockEndStyle: 'none',\n  borderBlockEndWidth: '0',\n  borderBlockStart: '0 none rgb(255, 255, 255)',\n  borderBlockStartColor: 'rgb(255, 255, 255)',\n  borderBlockStartStyle: 'none',\n  borderBlockStartWidth: '0',\n  borderBlockStyle: 'none',\n  borderBlockWidth: '0',\n  borderBottom: '0 none rgb(255, 255, 255)',\n  borderBottomColor: 'rgb(255, 255, 255)',\n  borderBottomLeftRadius: '0',\n  borderBottomRightRadius: '0',\n  borderBottomStyle: 'none',\n  borderBottomWidth: '0',\n  borderCollapse: 'separate',\n  borderColor: 'rgb(255, 255, 255)',\n  borderEndEndRadius: '0',\n  borderEndStartRadius: '0',\n  borderImage: 'none',\n  borderImageOutset: '0',\n  borderImageRepeat: 'stretch',\n  borderImageSlice: '100%',\n  borderImageSource: 'none',\n  borderImageWidth: '1',\n  borderInline: '0 none rgb(255, 255, 255)',\n  borderInlineColor: 'rgb(255, 255, 255)',\n  borderInlineEnd: '0 none rgb(255, 255, 255)',\n  borderInlineEndColor: 'rgb(255, 255, 255)',\n  borderInlineEndStyle: 'none',\n  borderInlineEndWidth: '0',\n  borderInlineStart: '0 none rgb(255, 255, 255)',\n  borderInlineStartColor: 'rgb(255, 255, 255)',\n  borderInlineStartStyle: 'none',\n  borderInlineStartWidth: '0',\n  borderInlineStyle: 'none',\n  borderInlineWidth: '0',\n  borderLeft: '0 none rgb(255, 255, 255)',\n  borderLeftColor: 'rgb(255, 255, 255)',\n  borderLeftStyle: 'none',\n  borderLeftWidth: '0',\n  borderRadius: '0',\n  borderRight: '0 none rgb(255, 255, 255)',\n  borderRightColor: 'rgb(255, 255, 255)',\n  borderRightStyle: 'none',\n  borderRightWidth: '0',\n  borderSpacing: '0 0',\n  borderStartEndRadius: '0',\n  borderStartStartRadius: '0',\n  borderStyle: 'none',\n  borderTop: '0 none rgb(255, 255, 255)',\n  borderTopColor: 'rgb(255, 255, 255)',\n  borderTopLeftRadius: '0',\n  borderTopRightRadius: '0',\n  borderTopStyle: 'none',\n  borderTopWidth: '0',\n  borderWidth: '0',\n  bottom: 'auto',\n  boxShadow: 'none',\n  boxSizing: 'content-box',\n  breakAfter: 'auto',\n  breakBefore: 'auto',\n  breakInside: 'auto',\n  bufferedRendering: 'auto',\n  captionSide: 'top',\n  caretColor: 'rgb(255, 255, 255)',\n  clear: 'none',\n  clip: 'auto',\n  clipPath: 'none',\n  clipRule: 'nonzero',\n  color: 'rgb(255, 255, 255)',\n  colorInterpolation: 'srgb',\n  colorInterpolationFilters: 'linearrgb',\n  colorRendering: 'auto',\n  colorScheme: 'dark',\n  columnCount: 'auto',\n  columnFill: 'balance',\n  columnGap: 'normal',\n  columnRule: '0 none rgb(255, 255, 255)',\n  columnRuleColor: 'rgb(255, 255, 255)',\n  columnRuleStyle: 'none',\n  columnRuleWidth: '0',\n  columnSpan: 'none',\n  columnWidth: 'auto',\n  columns: 'auto auto',\n  contain: 'none',\n  containIntrinsicBlockSize: 'none',\n  containIntrinsicHeight: 'none',\n  containIntrinsicInlineSize: 'none',\n  containIntrinsicSize: 'none',\n  containIntrinsicWidth: 'none',\n  container: 'none',\n  containerName: 'none',\n  containerType: 'normal',\n  content: 'normal',\n  contentVisibility: 'visible',\n  counterIncrement: 'none',\n  counterReset: 'none',\n  counterSet: 'none',\n  cursor: 'auto',\n  cx: '0',\n  cy: '0',\n  d: 'none',\n  descentOverride: '',\n  direction: 'ltr',\n  display: 'block',\n  dominantBaseline: 'auto',\n  emptyCells: 'show',\n  fallback: '',\n  fill: 'rgb(0, 0, 0)',\n  fillOpacity: '1',\n  fillRule: 'nonzero',\n  filter: 'none',\n  flex: '0 1 auto',\n  flexBasis: 'auto',\n  flexDirection: 'row',\n  flexFlow: 'row nowrap',\n  flexGrow: '0',\n  flexShrink: '1',\n  flexWrap: 'nowrap',\n  float: 'none',\n  floodColor: 'rgb(0, 0, 0)',\n  floodOpacity: '1',\n  font: '20 / 35 Inter, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif',\n  fontDisplay: '',\n  fontFamily:\n    'Inter, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif',\n  fontFeatureSettings: 'normal',\n  fontKerning: 'auto',\n  fontOpticalSizing: 'auto',\n  fontPalette: 'normal',\n  fontSize: '20',\n  fontStretch: '100%',\n  fontStyle: 'normal',\n  fontSynthesis: 'weight style small-caps',\n  fontSynthesisSmallCaps: 'auto',\n  fontSynthesisStyle: 'auto',\n  fontSynthesisWeight: 'auto',\n  fontVariant: 'normal',\n  fontVariantAlternates: 'normal',\n  fontVariantCaps: 'normal',\n  fontVariantEastAsian: 'normal',\n  fontVariantLigatures: 'normal',\n  fontVariantNumeric: 'normal',\n  fontVariationSettings: 'normal',\n  fontWeight: '400',\n  forcedColorAdjust: 'auto',\n  gap: 'normal',\n  grid: 'none / none / none / row / auto / auto',\n  gridArea: 'auto / auto / auto / auto',\n  gridAutoColumns: 'auto',\n  gridAutoFlow: 'row',\n  gridAutoRows: 'auto',\n  gridColumn: 'auto / auto',\n  gridColumnEnd: 'auto',\n  gridColumnGap: 'normal',\n  gridColumnStart: 'auto',\n  gridGap: 'normal normal',\n  gridRow: 'auto / auto',\n  gridRowEnd: 'auto',\n  gridRowGap: 'normal',\n  gridRowStart: 'auto',\n  gridTemplate: 'none / none / none',\n  gridTemplateAreas: 'none',\n  gridTemplateColumns: 'none',\n  gridTemplateRows: 'none',\n  height: '100%',\n  hyphenateCharacter: 'auto',\n  hyphenateLimitChars: 'auto',\n  hyphens: 'manual',\n  imageOrientation: 'from-image',\n  imageRendering: 'auto',\n  inherits: '',\n  initialLetter: 'normal',\n  initialValue: '',\n  inlineSize: '484',\n  inset: 'auto',\n  insetBlock: 'auto',\n  insetBlockEnd: 'auto',\n  insetBlockStart: 'auto',\n  insetInline: 'auto',\n  insetInlineEnd: 'auto',\n  insetInlineStart: 'auto',\n  isolation: 'auto',\n  justifyContent: 'normal',\n  justifyItems: 'normal',\n  justifySelf: 'auto',\n  left: 'auto',\n  letterSpacing: 'normal',\n  lightingColor: 'rgb(255, 255, 255)',\n  lineBreak: 'auto',\n  lineGapOverride: '',\n  lineHeight: '35',\n  listStyle: 'outside none disc',\n  listStyleImage: 'none',\n  listStylePosition: 'outside',\n  listStyleType: 'disc',\n  margin: '0',\n  marginBlock: '0',\n  marginBlockEnd: '0',\n  marginBlockStart: '0',\n  marginBottom: '0',\n  marginInline: '0',\n  marginInlineEnd: '0',\n  marginInlineStart: '0',\n  marginLeft: '0',\n  marginRight: '0',\n  marginTop: '0',\n  marker: 'none',\n  markerEnd: 'none',\n  markerMid: 'none',\n  markerStart: 'none',\n  mask: 'none',\n  maskType: 'luminance',\n  mathDepth: '0',\n  mathShift: 'normal',\n  mathStyle: 'normal',\n  maxBlockSize: 'none',\n  maxHeight: 'none',\n  maxInlineSize: 'none',\n  maxWidth: 'none',\n  minBlockSize: '0',\n  minHeight: '0',\n  minInlineSize: '0',\n  minWidth: '0',\n  mixBlendMode: 'normal',\n  negative: '',\n  objectFit: 'fill',\n  objectPosition: '50% 50%',\n  objectViewBox: 'none',\n  offset: 'none 0 auto 0deg',\n  offsetDistance: '0',\n  offsetPath: 'none',\n  offsetRotate: 'auto 0deg',\n  opacity: '1',\n  order: '0',\n  orphans: '2',\n  outline: 'rgb(255, 255, 255) none 0',\n  outlineColor: 'rgb(255, 255, 255)',\n  outlineOffset: '0',\n  outlineStyle: 'none',\n  outlineWidth: '0',\n  overflow: 'visible',\n  overflowAnchor: 'auto',\n  overflowClipMargin: '0',\n  overflowWrap: 'normal',\n  overflowX: 'visible',\n  overflowY: 'visible',\n  overrideColors: '',\n  overscrollBehavior: 'auto',\n  overscrollBehaviorBlock: 'auto',\n  overscrollBehaviorInline: 'auto',\n  overscrollBehaviorX: 'auto',\n  overscrollBehaviorY: 'auto',\n  pad: '',\n  padding: '0',\n  paddingBlock: '0',\n  paddingBlockEnd: '0',\n  paddingBlockStart: '0',\n  paddingBottom: '0',\n  paddingInline: '0',\n  paddingInlineEnd: '0',\n  paddingInlineStart: '0',\n  paddingLeft: '0',\n  paddingRight: '0',\n  paddingTop: '0',\n  page: 'auto',\n  pageBreakAfter: 'auto',\n  pageBreakBefore: 'auto',\n  pageBreakInside: 'auto',\n  pageOrientation: '',\n  paintOrder: 'normal',\n  perspective: 'none',\n  perspectiveOrigin: '242 4033.36',\n  placeContent: 'normal',\n  placeItems: 'normal',\n  placeSelf: 'auto',\n  pointerEvents: 'auto',\n  position: 'static',\n  prefix: '',\n  quotes: 'auto',\n  r: '0',\n  range: '',\n  resize: 'none',\n  right: 'auto',\n  rotate: 'none',\n  rowGap: 'normal',\n  rubyPosition: 'over',\n  rx: 'auto',\n  ry: 'auto',\n  scale: 'none',\n  scrollBehavior: 'auto',\n  scrollMargin: '0',\n  scrollMarginBlock: '0',\n  scrollMarginBlockEnd: '0',\n  scrollMarginBlockStart: '0',\n  scrollMarginBottom: '0',\n  scrollMarginInline: '0',\n  scrollMarginInlineEnd: '0',\n  scrollMarginInlineStart: '0',\n  scrollMarginLeft: '0',\n  scrollMarginRight: '0',\n  scrollMarginTop: '0',\n  scrollPadding: 'auto',\n  scrollPaddingBlock: 'auto',\n  scrollPaddingBlockEnd: 'auto',\n  scrollPaddingBlockStart: 'auto',\n  scrollPaddingBottom: 'auto',\n  scrollPaddingInline: 'auto',\n  scrollPaddingInlineEnd: 'auto',\n  scrollPaddingInlineStart: 'auto',\n  scrollPaddingLeft: 'auto',\n  scrollPaddingRight: 'auto',\n  scrollPaddingTop: 'auto',\n  scrollSnapAlign: 'none',\n  scrollSnapStop: 'normal',\n  scrollSnapType: 'none',\n  scrollbarGutter: 'auto',\n  shapeImageThreshold: '0',\n  shapeMargin: '0',\n  shapeOutside: 'none',\n  shapeRendering: 'auto',\n  size: '',\n  sizeAdjust: '',\n  speak: 'normal',\n  speakAs: '',\n  src: '',\n  stopColor: 'rgb(0, 0, 0)',\n  stopOpacity: '1',\n  stroke: 'none',\n  strokeDasharray: 'none',\n  strokeDashoffset: '0',\n  strokeLinecap: 'butt',\n  strokeLinejoin: 'miter',\n  strokeMiterlimit: '4',\n  strokeOpacity: '1',\n  strokeWidth: '1',\n  suffix: '',\n  symbols: '',\n  syntax: '',\n  system: '',\n  tabSize: '8',\n  tableLayout: 'auto',\n  textAlign: 'start',\n  textAlignLast: 'auto',\n  textAnchor: 'start',\n  textCombineUpright: 'none',\n  textDecoration: 'none solid rgb(255, 255, 255)',\n  textDecorationColor: 'rgb(255, 255, 255)',\n  textDecorationLine: 'none',\n  textDecorationSkipInk: 'auto',\n  textDecorationStyle: 'solid',\n  textDecorationThickness: 'auto',\n  textEmphasis: 'none rgb(255, 255, 255)',\n  textEmphasisColor: 'rgb(255, 255, 255)',\n  textEmphasisPosition: 'over',\n  textEmphasisStyle: 'none',\n  textIndent: '0',\n  textOrientation: 'mixed',\n  textOverflow: 'clip',\n  textRendering: 'optimizespeed',\n  textShadow: 'none',\n  textSizeAdjust: 'auto',\n  textTransform: 'none',\n  textUnderlineOffset: 'auto',\n  textUnderlinePosition: 'auto',\n  top: 'auto',\n  touchAction: 'auto',\n  transform: 'none',\n  transformBox: 'view-box',\n  transformOrigin: '242 4033.36',\n  transformStyle: 'flat',\n  transition: 'all 0s ease 0s',\n  transitionDelay: '0s',\n  transitionDuration: '0s',\n  transitionProperty: 'all',\n  transitionTimingFunction: 'ease',\n  translate: 'none',\n  unicodeBidi: 'normal',\n  unicodeRange: '',\n  userSelect: 'auto',\n  vectorEffect: 'none',\n  verticalAlign: 'baseline',\n  viewTransitionName: 'none',\n  visibility: 'visible',\n  whiteSpace: 'normal',\n  widows: '2',\n  width: '100%',\n  willChange: 'auto',\n  wordBreak: 'normal',\n  wordSpacing: '0',\n  wordWrap: 'normal',\n  writingMode: 'horizontal-tb',\n  x: '0',\n  y: '0',\n  zIndex: 'auto',\n  zoom: '1',\n  cssFloat: 'none',\n  cssText: '',\n  length: 351,\n  parentRule: null\n}\n\nconst DEFAULT_VIEW_STYLES = {\n  display: 'block'\n}\nconst DEFAULT_TEXT_STYLES = {\n  display: 'inline-block'\n}\n\nconst EXTEND_STYLE_KEYS = [\n  'alignItems',\n  'color',\n  'fontFamily',\n  'fontSize',\n  'fontWeight',\n  'letterSpacing',\n  'lineHeight',\n  'textAlign',\n  'visivility',\n  'wordSpacing'\n]\n\nexport {\n  BODY_STYLES,\n  DEFAULT_VIEW_STYLES,\n  DEFAULT_TEXT_STYLES,\n  EXTEND_STYLE_KEYS\n}\n","import {\n  CSSToken,\n  DimensionToken,\n  NumberValueToken,\n  StringValueToken,\n  TokenType\n} from './tokenizer'\n\nexport type CSSBlockType =\n  | TokenType.LEFT_PARENTHESIS_TOKEN\n  | TokenType.LEFT_SQUARE_BRACKET_TOKEN\n  | TokenType.LEFT_CURLY_BRACKET_TOKEN\n\nexport interface CSSBlock {\n  type: CSSBlockType\n  values: CSSValue[]\n}\n\nexport interface CSSFunction {\n  type: TokenType.FUNCTION\n  name: string\n  values: CSSValue[]\n}\n\nexport type CSSValue = CSSFunction | CSSToken | CSSBlock\n\n// export class Parser {\n//   private _tokens: CSSToken[]\n\n//   constructor(tokens: CSSToken[]) {\n//     this._tokens = tokens\n//   }\n\n//   static create(value: string): Parser {\n//     const tokenizer = new Tokenizer()\n//     tokenizer.write(value)\n//     return new Parser(tokenizer.read())\n//   }\n\n//   static parseValue(value: string): CSSValue {\n//     return Parser.create(value).parseComponentValue()\n//   }\n\n//   static parseValues(value: string): CSSValue[] {\n//     return Parser.create(value).parseComponentValues()\n//   }\n\n//   parseComponentValue(): CSSValue {\n//     let token = this.consumeToken()\n//     while (token.type === TokenType.WHITESPACE_TOKEN) {\n//       token = this.consumeToken()\n//     }\n\n//     if (token.type === TokenType.EOF_TOKEN) {\n//       throw new SyntaxError(`Error parsing CSS component value, unexpected EOF`)\n//     }\n\n//     this.reconsumeToken(token)\n//     const value = this.consumeComponentValue()\n\n//     do {\n//       token = this.consumeToken()\n//     } while (token.type === TokenType.WHITESPACE_TOKEN)\n\n//     if (token.type === TokenType.EOF_TOKEN) {\n//       return value\n//     }\n\n//     throw new SyntaxError(\n//       `Error parsing CSS component value, multiple values found when expecting only one`\n//     )\n//   }\n\n//   parseComponentValues(): CSSValue[] {\n//     const values = []\n//     while (true) {\n//       const value = this.consumeComponentValue()\n//       if (value.type === TokenType.EOF_TOKEN) {\n//         return values\n//       }\n//       values.push(value)\n//       values.push()\n//     }\n//   }\n\n//   private consumeComponentValue(): CSSValue {\n//     const token = this.consumeToken()\n\n//     switch (token.type) {\n//       case TokenType.LEFT_CURLY_BRACKET_TOKEN:\n//       case TokenType.LEFT_SQUARE_BRACKET_TOKEN:\n//       case TokenType.LEFT_PARENTHESIS_TOKEN:\n//         return this.consumeSimpleBlock(token.type)\n//       case TokenType.FUNCTION_TOKEN:\n//         return this.consumeFunction(token)\n//     }\n\n//     return token\n//   }\n\n//   private consumeSimpleBlock(type: CSSBlockType): CSSBlock {\n//     const block: CSSBlock = { type, values: [] }\n\n//     let token = this.consumeToken()\n//     while (true) {\n//       if (token.type === TokenType.EOF_TOKEN || isEndingTokenFor(token, type)) {\n//         return block\n//       }\n\n//       this.reconsumeToken(token)\n//       block.values.push(this.consumeComponentValue())\n//       token = this.consumeToken()\n//     }\n//   }\n\n//   private consumeFunction(functionToken: StringValueToken): CSSFunction {\n//     const cssFunction: CSSFunction = {\n//       name: functionToken.value,\n//       values: [],\n//       type: TokenType.FUNCTION\n//     }\n\n//     while (true) {\n//       const token = this.consumeToken()\n//       if (\n//         token.type === TokenType.EOF_TOKEN ||\n//         token.type === TokenType.RIGHT_PARENTHESIS_TOKEN\n//       ) {\n//         return cssFunction\n//       }\n\n//       this.reconsumeToken(token)\n//       cssFunction.values.push(this.consumeComponentValue())\n//     }\n//   }\n\n//   private consumeToken(): CSSToken {\n//     const token = this._tokens.shift()\n//     return typeof token === 'undefined' ? EOF_TOKEN : token\n//   }\n\n//   private reconsumeToken(token: CSSToken): void {\n//     this._tokens.unshift(token)\n//   }\n// }\n\nexport const isDimensionToken = (token: CSSValue): token is DimensionToken =>\n  token.type === TokenType.DIMENSION_TOKEN\nexport const isNumberToken = (token: CSSValue): token is NumberValueToken =>\n  token.type === TokenType.NUMBER_TOKEN\nexport const isIdentToken = (token: CSSValue): token is StringValueToken =>\n  token.type === TokenType.IDENT_TOKEN\nexport const isStringToken = (token: CSSValue): token is StringValueToken =>\n  token.type === TokenType.STRING_TOKEN\nexport const isIdentWithValue = (token: CSSValue, value: string): boolean =>\n  isIdentToken(token) && token.value === value\n\nexport const nonWhiteSpace = (token: CSSValue): boolean =>\n  token.type !== TokenType.WHITESPACE_TOKEN\nexport const nonFunctionArgSeparator = (token: CSSValue): boolean =>\n  token.type !== TokenType.WHITESPACE_TOKEN &&\n  token.type !== TokenType.COMMA_TOKEN\n\nexport const parseFunctionArgs = (tokens: CSSValue[]): CSSValue[][] => {\n  const args: CSSValue[][] = []\n  let arg: CSSValue[] = []\n  tokens.forEach((token) => {\n    if (token.type === TokenType.COMMA_TOKEN) {\n      if (arg.length === 0) {\n        throw new Error(`Error parsing function args, zero tokens for arg`)\n      }\n      args.push(arg)\n      arg = []\n      return\n    }\n\n    if (token.type !== TokenType.WHITESPACE_TOKEN) {\n      arg.push(token)\n    }\n  })\n  if (arg.length) {\n    args.push(arg)\n  }\n\n  return args\n}\n\nconst isEndingTokenFor = (token: CSSToken, type: CSSBlockType): boolean => {\n  if (\n    type === TokenType.LEFT_CURLY_BRACKET_TOKEN &&\n    token.type === TokenType.RIGHT_CURLY_BRACKET_TOKEN\n  ) {\n    return true\n  }\n  if (\n    type === TokenType.LEFT_SQUARE_BRACKET_TOKEN &&\n    token.type === TokenType.RIGHT_SQUARE_BRACKET_TOKEN\n  ) {\n    return true\n  }\n\n  return (\n    type === TokenType.LEFT_PARENTHESIS_TOKEN &&\n    token.type === TokenType.RIGHT_PARENTHESIS_TOKEN\n  )\n}\n","import {\n  IPropertyListDescriptor,\n  PropertyDescriptorParsingType\n} from '../IPropertyDescriptor'\nimport { CSSValue, isIdentToken } from '../syntax/parser'\nexport const enum BACKGROUND_CLIP {\n  BORDER_BOX = 0,\n  PADDING_BOX = 1,\n  CONTENT_BOX = 2\n}\n\nexport type BackgroundClip = BACKGROUND_CLIP[]\n\nexport const backgroundClip: IPropertyListDescriptor<BackgroundClip> = {\n  name: 'background-clip',\n  initialValue: 'border-box',\n  prefix: false,\n  type: PropertyDescriptorParsingType.LIST,\n  parse: (tokens: CSSValue[]): BackgroundClip => {\n    return tokens.map((token) => {\n      if (isIdentToken(token)) {\n        switch (token.value) {\n          case 'padding-box':\n            return BACKGROUND_CLIP.PADDING_BOX\n          case 'content-box':\n            return BACKGROUND_CLIP.CONTENT_BOX\n        }\n      }\n      return BACKGROUND_CLIP.BORDER_BOX\n    })\n  }\n}\n","import {\n  IPropertyTypeValueDescriptor,\n  PropertyDescriptorParsingType\n} from '../IPropertyDescriptor'\n\nexport const backgroundColor: IPropertyTypeValueDescriptor = {\n  name: `background-color`,\n  initialValue: 'transparent',\n  prefix: false,\n  type: PropertyDescriptorParsingType.TYPE_VALUE,\n  format: 'color'\n}\n","import {\n  IPropertyTypeValueDescriptor,\n  PropertyDescriptorParsingType\n} from '../IPropertyDescriptor'\n\nconst borderColorForSide = (side: string): IPropertyTypeValueDescriptor => ({\n  name: `border-${side}-color`,\n  initialValue: 'transparent',\n  prefix: false,\n  type: PropertyDescriptorParsingType.TYPE_VALUE,\n  format: 'color'\n})\n\nexport const borderTopColor: IPropertyTypeValueDescriptor =\n  borderColorForSide('top')\nexport const borderRightColor: IPropertyTypeValueDescriptor =\n  borderColorForSide('right')\nexport const borderBottomColor: IPropertyTypeValueDescriptor =\n  borderColorForSide('bottom')\nexport const borderLeftColor: IPropertyTypeValueDescriptor =\n  borderColorForSide('left')\n","import {\n  IPropertyTypeValueDescriptor,\n  PropertyDescriptorParsingType\n} from '../IPropertyDescriptor'\n\nexport const color: IPropertyTypeValueDescriptor = {\n  name: `color`,\n  initialValue: 'transparent',\n  prefix: false,\n  type: PropertyDescriptorParsingType.TYPE_VALUE,\n  format: 'color'\n}\n","import {\n  IPropertyListDescriptor,\n  PropertyDescriptorParsingType\n} from '../IPropertyDescriptor'\nimport { CSSValue, isIdentToken } from '../syntax/parser'\nexport const enum DISPLAY {\n  NONE = 0,\n  BLOCK = 1 << 1,\n  INLINE = 1 << 2,\n  RUN_IN = 1 << 3,\n  FLOW = 1 << 4,\n  FLOW_ROOT = 1 << 5,\n  TABLE = 1 << 6,\n  FLEX = 1 << 7,\n  GRID = 1 << 8,\n  RUBY = 1 << 9,\n  SUBGRID = 1 << 10,\n  LIST_ITEM = 1 << 11,\n  TABLE_ROW_GROUP = 1 << 12,\n  TABLE_HEADER_GROUP = 1 << 13,\n  TABLE_FOOTER_GROUP = 1 << 14,\n  TABLE_ROW = 1 << 15,\n  TABLE_CELL = 1 << 16,\n  TABLE_COLUMN_GROUP = 1 << 17,\n  TABLE_COLUMN = 1 << 18,\n  TABLE_CAPTION = 1 << 19,\n  RUBY_BASE = 1 << 20,\n  RUBY_TEXT = 1 << 21,\n  RUBY_BASE_CONTAINER = 1 << 22,\n  RUBY_TEXT_CONTAINER = 1 << 23,\n  CONTENTS = 1 << 24,\n  INLINE_BLOCK = 1 << 25,\n  INLINE_LIST_ITEM = 1 << 26,\n  INLINE_TABLE = 1 << 27,\n  INLINE_FLEX = 1 << 28,\n  INLINE_GRID = 1 << 29\n}\n\nexport type Display = number\n\nexport const display: IPropertyListDescriptor<Display> = {\n  name: 'display',\n  initialValue: (type) => {\n    switch (type) {\n      case 'text':\n        return 'inline-block'\n      default:\n        return 'block'\n    }\n  },\n  prefix: false,\n  type: PropertyDescriptorParsingType.LIST,\n  parse: (tokens: CSSValue[]): Display => {\n    return tokens.filter(isIdentToken).reduce((bit, token) => {\n      return bit | parseDisplayValue(token.value)\n    }, DISPLAY.NONE)\n  }\n}\n\nconst parseDisplayValue = (display: string): Display => {\n  switch (display) {\n    case 'block':\n    case '-webkit-box':\n      return DISPLAY.BLOCK\n    case 'inline':\n      return DISPLAY.INLINE\n    case 'run-in':\n      return DISPLAY.RUN_IN\n    case 'flow':\n      return DISPLAY.FLOW\n    case 'flow-root':\n      return DISPLAY.FLOW_ROOT\n    case 'table':\n      return DISPLAY.TABLE\n    case 'flex':\n    case '-webkit-flex':\n      return DISPLAY.FLEX\n    case 'grid':\n    case '-ms-grid':\n      return DISPLAY.GRID\n    case 'ruby':\n      return DISPLAY.RUBY\n    case 'subgrid':\n      return DISPLAY.SUBGRID\n    case 'list-item':\n      return DISPLAY.LIST_ITEM\n    case 'table-row-group':\n      return DISPLAY.TABLE_ROW_GROUP\n    case 'table-header-group':\n      return DISPLAY.TABLE_HEADER_GROUP\n    case 'table-footer-group':\n      return DISPLAY.TABLE_FOOTER_GROUP\n    case 'table-row':\n      return DISPLAY.TABLE_ROW\n    case 'table-cell':\n      return DISPLAY.TABLE_CELL\n    case 'table-column-group':\n      return DISPLAY.TABLE_COLUMN_GROUP\n    case 'table-column':\n      return DISPLAY.TABLE_COLUMN\n    case 'table-caption':\n      return DISPLAY.TABLE_CAPTION\n    case 'ruby-base':\n      return DISPLAY.RUBY_BASE\n    case 'ruby-text':\n      return DISPLAY.RUBY_TEXT\n    case 'ruby-base-container':\n      return DISPLAY.RUBY_BASE_CONTAINER\n    case 'ruby-text-container':\n      return DISPLAY.RUBY_TEXT_CONTAINER\n    case 'contents':\n      return DISPLAY.CONTENTS\n    case 'inline-block':\n      return DISPLAY.INLINE_BLOCK\n    case 'inline-list-item':\n      return DISPLAY.INLINE_LIST_ITEM\n    case 'inline-table':\n      return DISPLAY.INLINE_TABLE\n    case 'inline-flex':\n      return DISPLAY.INLINE_FLEX\n    case 'inline-grid':\n      return DISPLAY.INLINE_GRID\n  }\n\n  return DISPLAY.NONE\n}\n","import {\n  IPropertyTypeValueDescriptor,\n  PropertyDescriptorParsingType\n} from '../IPropertyDescriptor'\n\nexport const fontSize: IPropertyTypeValueDescriptor = {\n  name: `font-size`,\n  initialValue: '12',\n  prefix: false,\n  type: PropertyDescriptorParsingType.TYPE_VALUE,\n  format: 'length'\n}\n","import {\n  IPropertyValueDescriptor,\n  PropertyDescriptorParsingType\n} from '../IPropertyDescriptor'\nimport { CSSValue, isIdentToken, isNumberToken } from '../syntax/parser'\nexport const fontWeight: IPropertyValueDescriptor<number> = {\n  name: 'font-weight',\n  initialValue: 'normal',\n  type: PropertyDescriptorParsingType.VALUE,\n  prefix: false,\n  parse: (token: CSSValue): number => {\n    if (isNumberToken(token)) {\n      return token.number\n    }\n\n    if (isIdentToken(token)) {\n      switch (token.value) {\n        case 'bold':\n          return 700\n        case 'normal':\n        default:\n          return 400\n      }\n    }\n\n    return 400\n  }\n}\n","import {\n  IPropertyTokenValueDescriptor,\n  PropertyDescriptorParsingType\n} from '../IPropertyDescriptor'\n\nexport const height: IPropertyTokenValueDescriptor = {\n  name: 'height',\n  initialValue: 'auto',\n  prefix: false,\n  type: PropertyDescriptorParsingType.TOKEN_VALUE\n}\n","import {\n  DimensionToken,\n  FLAG_INTEGER,\n  NumberValueToken,\n  TokenType\n} from '../syntax/tokenizer'\nimport { CSSValue, isDimensionToken } from '../syntax/parser'\nimport { isLength } from './length'\nexport type LengthPercentage = DimensionToken | NumberValueToken\nexport type LengthPercentageTuple =\n  | [LengthPercentage]\n  | [LengthPercentage, LengthPercentage]\n\nexport const isLengthPercentage = (\n  token: CSSValue\n): token is LengthPercentage =>\n  token.type === TokenType.PERCENTAGE_TOKEN || isLength(token)\nexport const parseLengthPercentageTuple = (\n  tokens: LengthPercentage[]\n): LengthPercentageTuple =>\n  tokens.length > 1 ? [tokens[0], tokens[1]] : [tokens[0]]\nexport const ZERO_LENGTH: NumberValueToken = {\n  type: TokenType.NUMBER_TOKEN,\n  number: 0,\n  flags: FLAG_INTEGER\n}\n\nexport const FIFTY_PERCENT: NumberValueToken = {\n  type: TokenType.PERCENTAGE_TOKEN,\n  number: 50,\n  flags: FLAG_INTEGER\n}\n\nexport const HUNDRED_PERCENT: NumberValueToken = {\n  type: TokenType.PERCENTAGE_TOKEN,\n  number: 100,\n  flags: FLAG_INTEGER\n}\n\nexport const getAbsoluteValueForTuple = (\n  tuple: LengthPercentageTuple,\n  width: number,\n  height: number\n): [number, number] => {\n  return [0, 0]\n  const [x, y] = tuple\n  return [\n    getAbsoluteValue(x, width),\n    getAbsoluteValue(typeof y !== 'undefined' ? y : x, height)\n  ]\n}\nexport const getAbsoluteValue = (\n  token: LengthPercentage,\n  parent: number\n): number => {\n  return 0\n  if (token.type === TokenType.PERCENTAGE_TOKEN) {\n    return (token.number / 100) * parent\n  }\n\n  if (isDimensionToken(token)) {\n    switch (token.unit) {\n      case 'rem':\n      case 'em':\n        return 16 * token.number // TODO use correct font-size\n      case 'px':\n      default:\n        return token.number\n    }\n  }\n\n  return token.number\n}\n","import {\n  IPropertyTokenValueDescriptor,\n  PropertyDescriptorParsingType\n} from '../IPropertyDescriptor'\nimport { CSSValue, isIdentToken } from '../syntax/parser'\nimport { TokenType } from '../syntax/tokenizer'\nimport {\n  getAbsoluteValue,\n  isLengthPercentage\n} from '../types/length-percentage'\nexport const lineHeight: IPropertyTokenValueDescriptor = {\n  name: 'line-height',\n  initialValue: 'normal',\n  prefix: false,\n  type: PropertyDescriptorParsingType.TOKEN_VALUE\n}\n\nexport const computeLineHeight = (\n  token: CSSValue,\n  fontSize: number\n): number => {\n  if (isIdentToken(token) && token.value === 'normal') {\n    return 1.2 * fontSize\n  } else if (token.type === TokenType.NUMBER_TOKEN) {\n    return fontSize * token.number\n  } else if (isLengthPercentage(token)) {\n    return getAbsoluteValue(token, fontSize)\n  }\n\n  return fontSize\n}\n","import {\n  IPropertyTokenValueDescriptor,\n  PropertyDescriptorParsingType\n} from '../IPropertyDescriptor'\n\nconst marginForSide = (side: string): IPropertyTokenValueDescriptor => ({\n  name: `margin-${side}`,\n  initialValue: '0',\n  prefix: false,\n  type: PropertyDescriptorParsingType.TOKEN_VALUE\n})\n\nexport const marginTop: IPropertyTokenValueDescriptor = marginForSide('top')\nexport const marginRight: IPropertyTokenValueDescriptor = marginForSide('right')\nexport const marginBottom: IPropertyTokenValueDescriptor =\n  marginForSide('bottom')\nexport const marginLeft: IPropertyTokenValueDescriptor = marginForSide('left')\n","import {\n  IPropertyValueDescriptor,\n  PropertyDescriptorParsingType\n} from '../IPropertyDescriptor'\nimport { CSSValue, isNumberToken } from '../syntax/parser'\nexport const opacity: IPropertyValueDescriptor<number> = {\n  name: 'opacity',\n  initialValue: '1',\n  type: PropertyDescriptorParsingType.VALUE,\n  prefix: false,\n  parse: (token: CSSValue): number => {\n    if (isNumberToken(token)) {\n      return token.number\n    }\n    return 1\n  }\n}\n","import {\n  IPropertyTypeValueDescriptor,\n  PropertyDescriptorParsingType\n} from '../IPropertyDescriptor'\n\nconst paddingForSide = (side: string): IPropertyTypeValueDescriptor => ({\n  name: `padding-${side}`,\n  initialValue: '0',\n  prefix: false,\n  type: PropertyDescriptorParsingType.TYPE_VALUE,\n  format: 'length-percentage'\n})\n\nexport const paddingTop: IPropertyTypeValueDescriptor = paddingForSide('top')\nexport const paddingRight: IPropertyTypeValueDescriptor =\n  paddingForSide('right')\nexport const paddingBottom: IPropertyTypeValueDescriptor =\n  paddingForSide('bottom')\nexport const paddingLeft: IPropertyTypeValueDescriptor = paddingForSide('left')\n","import {\n  IPropertyIdentValueDescriptor,\n  PropertyDescriptorParsingType\n} from '../IPropertyDescriptor'\nexport const enum TEXT_ALIGN {\n  LEFT = 0,\n  CENTER = 1,\n  RIGHT = 2\n}\n\nexport const textAlign: IPropertyIdentValueDescriptor<TEXT_ALIGN> = {\n  name: 'text-align',\n  initialValue: 'left',\n  prefix: false,\n  type: PropertyDescriptorParsingType.IDENT_VALUE,\n  parse: (textAlign: string) => {\n    switch (textAlign) {\n      case 'right':\n        return TEXT_ALIGN.RIGHT\n      case 'center':\n      case 'justify':\n        return TEXT_ALIGN.CENTER\n      case 'left':\n      default:\n        return TEXT_ALIGN.LEFT\n    }\n  }\n}\n","import {\n  IPropertyValueDescriptor,\n  PropertyDescriptorParsingType\n} from '../IPropertyDescriptor'\nimport { CSSValue } from '../syntax/parser'\nimport { NumberValueToken, TokenType } from '../syntax/tokenizer'\nexport type Matrix = [number, number, number, number, number, number]\nexport type Transform = Matrix | null\n\nexport const transform: IPropertyValueDescriptor<Transform> = {\n  name: 'transform',\n  initialValue: 'none',\n  prefix: true,\n  type: PropertyDescriptorParsingType.VALUE,\n  parse: (token: CSSValue) => {\n    if (token.type === TokenType.IDENT_TOKEN && token.value === 'none') {\n      return null\n    }\n\n    if (token.type === TokenType.FUNCTION) {\n      const transformFunction = SUPPORTED_TRANSFORM_FUNCTIONS[token.name]\n      if (typeof transformFunction === 'undefined') {\n        throw new Error(\n          `Attempting to parse an unsupported transform function \"${token.name}\"`\n        )\n      }\n      return transformFunction(token.values)\n    }\n\n    return null\n  }\n}\n\nconst matrix = (args: CSSValue[]): Transform => {\n  const values = args\n    .filter((arg) => arg.type === TokenType.NUMBER_TOKEN)\n    .map((arg: NumberValueToken) => arg.number)\n\n  return values.length === 6 ? (values as Matrix) : null\n}\n\n// doesn't support 3D transforms at the moment\nconst matrix3d = (args: CSSValue[]): Transform => {\n  const values = args\n    .filter((arg) => arg.type === TokenType.NUMBER_TOKEN)\n    .map((arg: NumberValueToken) => arg.number)\n\n  const [a1, b1, {}, {}, a2, b2, {}, {}, {}, {}, {}, {}, a4, b4, {}, {}] =\n    values\n\n  return values.length === 16 ? [a1, b1, a2, b2, a4, b4] : null\n}\n\nconst SUPPORTED_TRANSFORM_FUNCTIONS: {\n  [key: string]: (args: CSSValue[]) => Transform\n} = {\n  matrix: matrix,\n  matrix3d: matrix3d\n}\n","import {\n  IPropertyIdentValueDescriptor,\n  PropertyDescriptorParsingType\n} from '../IPropertyDescriptor'\n\nexport const enum VISIBILITY {\n  VISIBLE = 0,\n  HIDDEN = 1,\n  COLLAPSE = 2\n}\n\nexport const visibility: IPropertyIdentValueDescriptor<VISIBILITY> = {\n  name: 'visible',\n  initialValue: 'none',\n  prefix: false,\n  type: PropertyDescriptorParsingType.IDENT_VALUE,\n  parse: (visibility: string) => {\n    switch (visibility) {\n      case 'hidden':\n        return VISIBILITY.HIDDEN\n      case 'collapse':\n        return VISIBILITY.COLLAPSE\n      case 'visible':\n      default:\n        return VISIBILITY.VISIBLE\n    }\n  }\n}\n","import {\n  IPropertyTokenValueDescriptor,\n  PropertyDescriptorParsingType\n} from '../IPropertyDescriptor'\n\nexport const width: IPropertyTokenValueDescriptor = {\n  name: 'width',\n  initialValue: 'auto',\n  prefix: false,\n  type: PropertyDescriptorParsingType.TOKEN_VALUE\n}\n","import {\n  IPropertyValueDescriptor,\n  PropertyDescriptorParsingType\n} from '../IPropertyDescriptor'\nimport { CSSValue, isNumberToken } from '../syntax/parser'\nimport { TokenType } from '../syntax/tokenizer'\n\ninterface zIndex {\n  order: number\n  auto: boolean\n}\n\nexport const zIndex: IPropertyValueDescriptor<zIndex> = {\n  name: 'z-index',\n  initialValue: 'auto',\n  prefix: false,\n  type: PropertyDescriptorParsingType.VALUE,\n  parse: (token: CSSValue): zIndex => {\n    if (token.type === TokenType.IDENT_TOKEN) {\n      return { auto: true, order: 0 }\n    }\n\n    if (isNumberToken(token)) {\n      return { auto: false, order: token.number }\n    }\n\n    throw new Error(`Invalid z-index number parsed`)\n  }\n}\n","import { CSSPropertyDescriptor } from './IPropertyDescriptor'\nimport { DEFAULT_TEXT_STYLES, DEFAULT_VIEW_STYLES } from './constant'\nimport { backgroundClip } from './property-descriptors/background-clip'\nimport { backgroundColor } from './property-descriptors/background-color'\nimport {\n  borderBottomColor,\n  borderLeftColor,\n  borderRightColor,\n  borderTopColor\n} from './property-descriptors/border-color'\nimport {\n  borderBottomLeftRadius,\n  borderBottomRightRadius,\n  borderTopLeftRadius,\n  borderTopRightRadius\n} from './property-descriptors/border-radius'\nimport {\n  borderBottomWidth,\n  borderLeftWidth,\n  borderRightWidth,\n  borderTopWidth\n} from './property-descriptors/border-width'\nimport { color } from './property-descriptors/color'\nimport { display } from './property-descriptors/display'\nimport { fontSize } from './property-descriptors/font-size'\nimport { fontWeight } from './property-descriptors/font-weight'\nimport { height } from './property-descriptors/height'\nimport { lineHeight } from './property-descriptors/line-height'\nimport {\n  marginBottom,\n  marginLeft,\n  marginRight,\n  marginTop\n} from './property-descriptors/margin'\nimport { opacity } from './property-descriptors/opacity'\nimport {\n  paddingBottom,\n  paddingLeft,\n  paddingRight,\n  paddingTop\n} from './property-descriptors/padding'\nimport { textAlign } from './property-descriptors/text-align'\nimport { transform } from './property-descriptors/transform'\nimport { visibility } from './property-descriptors/visibility'\nimport { width } from './property-descriptors/width'\nimport { zIndex } from './property-descriptors/z-index'\n\nexport function createCSSDeclaration(type, styles) {\n  console.log('CSSSSSSSS', type)\n  const DEFAULT_STYLES = getDefaultStyle(type)\n  return {\n    ...DEFAULT_STYLES,\n    backgroundClip: parse(type, backgroundClip, styles.backgroundClip),\n    backgroundColor: parse(type, backgroundColor, styles.backgroundColor),\n    borderTopColor: parse(type, borderTopColor, styles.borderTopColor),\n    borderRightColor: parse(type, borderRightColor, styles.borderRightColor),\n    borderBottomColor: parse(type, borderBottomColor, styles.borderBottomColor),\n    borderLeftColor: parse(type, borderLeftColor, styles.borderLeftColor),\n    // borderTopLeftRadius: parse(\n    //   type,\n    //   borderTopLeftRadius,\n    //   styles.borderTopLeftRadius\n    // ),\n    // borderTopRightRadius: parse(\n    //   type,\n    //   borderTopRightRadius,\n    //   styles.borderTopRightRadius\n    // ),\n    // borderBottomRightRadius: parse(\n    //   type,\n    //   borderBottomRightRadius,\n    //   styles.borderBottomRightRadius\n    // ),\n    // borderBottomLeftRadius: parse(\n    //   type,\n    //   borderBottomLeftRadius,\n    //   styles.borderBottomLeftRadius\n    // ),\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: 0,\n    borderBottomLeftRadius: 0,\n    // borderTopStyle: parse(type,borderTopStyle, styles.borderTopStyle),\n    // borderRightStyle: parse(type,borderRightStyle, styles.borderRightStyle),\n    // borderBottomStyle: parse(type,borderBottomStyle, styles.borderBottomStyle),\n    // borderLeftStyle: parse(type,borderLeftStyle, styles.borderLeftStyle),\n    // borderTopWidth: parse(type, borderTopWidth, styles.borderTopWidth),\n    // borderRightWidth: parse(type, borderRightWidth, styles.borderRightWidth),\n    // borderBottomWidth: parse(type, borderBottomWidth, styles.borderBottomWidth),\n    // borderLeftWidth: parse(type, borderLeftWidth, styles.borderLeftWidth),\n    borderTopWidth: 0,\n    borderRightWidth: 0,\n    borderBottomWidth: 0,\n    borderLeftWidth: 0,\n    // boxShadow: parse(type,boxShadow, styles.boxShadow),\n    color: parse(type, color, styles.color),\n    // direction: parse(type,direction, styles.direction),\n    display: parse(type, display, styles.display),\n    // float: parse(float, styles.cssFloat),\n    // fontFamily: parse(fontFamily, styles.fontFamily),\n    fontSize: Number(parse(type, fontSize, styles.fontSize)),\n    // fontStyle: parse(type,fontStyle, styles.fontStyle),\n    // fontVariant: parse(type,fontVariant, styles.fontVariant),\n    fontWeight: parse(type, fontWeight, styles.fontWeight),\n    height: parse(type, height, styles.height),\n    // letterSpacing: parse(type,letterSpacing, styles.letterSpacing),\n    // lineBreak: parse(type,lineBreak, styles.lineBreak),\n    lineHeight: parse(type, lineHeight, styles.lineHeight),\n    // listStyleImage: parse(type,listStyleImage, styles.listStyleImage),\n    // listStylePosition: parse(type,listStylePosition, styles.listStylePosition),\n    // listStyleType: parse(type,listStyleType, styles.listStyleType),\n    marginTop: Number(parse(type, marginTop, styles.marginTop)),\n    marginRight: Number(parse(type, marginRight, styles.marginRight)),\n    marginBottom: Number(parse(type, marginBottom, styles.marginBottom)),\n    marginLeft: Number(parse(type, marginLeft, styles.marginLeft)),\n    opacity: parse(type, opacity, styles.opacity),\n    // const overflowTuple: parse(type,overflow, styles.overflow),\n    // overflowX: overflowTuple[0],\n    // overflowY: overflowTuple[overflowTuple.length > 1 ? 1 : 0],\n    // overflowWrap: parse(type,overflowWrap, styles.overflowWrap),\n    paddingTop: Number(parse(type, paddingTop, styles.paddingTop)),\n    paddingRight: Number(parse(type, paddingRight, styles.paddingRight)),\n    paddingBottom: Number(parse(type, paddingBottom, styles.paddingBottom)),\n    paddingLeft: Number(parse(type, paddingLeft, styles.paddingLeft)),\n    // paintOrder: parse(type,paintOrder, styles.paintOrder),\n    // position: parse(type,position, styles.position),\n    textAlign: parse(type, textAlign, styles.textAlign),\n    // textDecorationColor: parse(type,\n    //     context,\n    //     textDecorationColor,\n    //     styles.textDecorationColor ?? styles.color\n    // ),\n    // textDecorationLine: parse(type,\n    //     context,\n    //     textDecorationLine,\n    //     styles.textDecorationLine ?? styles.textDecoration\n    // ),\n    // textShadow: parse(type,textShadow, styles.textShadow),\n    // textTransform: parse(type,textTransform, styles.textTransform),\n    transform: parse(type, transform, styles.transform),\n    // transformOrigin: parse(type,transformOrigin, styles.transformOrigin),\n    visibility: parse(type, visibility, styles.visibility),\n    // webkitTextStrokeColor: parse(type,webkitTextStrokeColor, styles.webkitTextStrokeColor),\n    // webkitTextStrokeWidth: parse(type,webkitTextStrokeWidth, styles.webkitTextStrokeWidth),\n    width: parse(type, width, styles.width),\n    // wordBreak: parse(type,wordBreak, styles.wordBreak),\n    zIndex: parse(type, zIndex, styles.zIndex)\n  }\n}\n\nconst parse = (\n  // TODO: enum type\n  type: string,\n  descriptor: CSSPropertyDescriptor<any>,\n  style?: string | null\n) => {\n  const value =\n    style !== null && typeof style !== 'undefined'\n      ? style.toString()\n      : typeof descriptor.initialValue === 'string'\n      ? descriptor.initialValue\n      : descriptor.initialValue(type)\n\n  // TODO: finish tokenizer\n  return value\n}\n\nfunction getDefaultStyle(type) {\n  switch (type) {\n    case 'text':\n      return DEFAULT_TEXT_STYLES\n    default:\n      return DEFAULT_VIEW_STYLES\n  }\n}\n","export type TreeNodeChildren = Array<TreeNode>\n\nexport interface TreeNode {\n  __v_isTreeNode: boolean\n  _children: TreeNodeChildren\n  children: TreeNodeChildren\n  parent: TreeNode | null\n  root: TreeNode | null\n  prev: TreeNode | null\n  next: TreeNode | null\n  instance: any\n  hasChildren(): boolean\n  appendChild(child: TreeNode): void\n  prependChild(child: TreeNode): void\n  removeChild(child: TreeNode): void\n  append(): void\n  prepend(): void\n  remove(): void\n}\n\nexport function isTreeNode(value: any): value is TreeNode {\n  return value ? value.__v_isTreeNode === true : false\n}\n\nexport function isEndNode(node) {\n  return node.parent && !node.next && !node.hasChildren()\n}\n\nexport function createTreeNode(options?) {\n  const treeNode: TreeNode = {\n    __v_isTreeNode: true,\n    _children: options.children || [],\n    parent: null,\n    prev: null,\n    next: null,\n    instance: options.instance || null,\n    set children(value) {\n      treeNode._children = value\n    },\n    get children() {\n      return treeNode._children || []\n    },\n    get root() {\n      return getRoot(this)\n    },\n    hasChildren,\n    appendChild,\n    prependChild,\n    removeChild,\n    append,\n    prepend,\n    remove\n  }\n\n  function getRoot(node) {\n    if (node.parent) {\n      return getRoot(node.parent)\n    } else {\n      return node\n    }\n  }\n\n  function hasChildren() {\n    return Array.isArray(treeNode._children) && treeNode._children.length\n      ? true\n      : false\n  }\n\n  function appendChild(child) {\n    if (!isTreeNode(child)) throw Error('Unknown treeNode type')\n\n    const prev = treeNode._children[treeNode._children.length - 1] || null\n    if (prev && isTreeNode(prev)) {\n      _setSibling(prev, prev.prev, child)\n    }\n\n    Array.isArray(treeNode._children) && treeNode._children.push(child)\n\n    _setParent(child, treeNode)\n    _setSibling(child, prev, null)\n  }\n\n  function prependChild(child) {\n    if (!isTreeNode(child)) throw Error('Unknown treeNode type')\n  }\n\n  function removeChild(child) {\n    if (!isTreeNode(child)) throw Error('Unknown treeNode type')\n  }\n\n  function append() {}\n\n  function prepend() {}\n\n  function remove() {}\n\n  if (treeNode.instance) {\n    treeNode.instance.node = treeNode\n  }\n  return treeNode\n}\n\nfunction _setParent(child: TreeNode, parent): void {\n  child.parent = parent\n}\n\nfunction _setSibling(\n  node: TreeNode,\n  prev: TreeNode | null,\n  next: TreeNode | null\n): void {\n  node.prev = prev\n  node.next = next\n}\n\nexport function connectChildren(node) {\n  console.log('connectChildren', node)\n  if (node.hasChildren()) {\n    node._children.map((child, index) => {\n      _setParent(child, node)\n      _setSibling(child, node._children[index - 1], node._children[index + 1])\n      connectChildren(child)\n    })\n  }\n}\n","export const EMPTY_OBJ = Object.freeze({})\nexport const EMPTY_ARR = Object.freeze([])\n\nexport const NOOP = () => {}\n\n/**\n * Always return false.\n */\nexport const NO = () => false\n\nconst onRE = /^on[^a-z]/\nexport const isOn = (key: string) => onRE.test(key)\n\nexport const isModelListener = (key: string) => key.startsWith('onUpdate:')\n\nexport const extend = Object.assign\n\nexport const remove = <T>(arr: T[], el: T) => {\n  const i = arr.indexOf(el)\n  if (i > -1) {\n    arr.splice(i, 1)\n  }\n}\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty\nexport const hasOwn = (\n  val: object,\n  key: string | symbol\n): key is keyof typeof val => hasOwnProperty.call(val, key)\n\nexport const isExact = (num: unknown): num is number => {\n  return isNumber.call(null, num)\n}\n\nexport const isAuto = (num: unknown): num is string => {\n  return num === 'auto'\n}\n\nexport const isOuter = (num: unknown): num is string => {\n  if (!isString(num)) return\n  return isArray(num.match('%'))\n}\n\nexport const parseOuter = (num: string): number => {\n  let _n = parseInt(num.replace('%', ''))\n  return isNaN(_n) || _n < 0 ? 0 : _n / 100\n}\n\nexport const isArray = Array.isArray\nexport const isMap = (val: unknown): val is Map<any, any> =>\n  toTypeString(val) === '[object Map]'\nexport const isSet = (val: unknown): val is Set<any> =>\n  toTypeString(val) === '[object Set]'\n\nexport const isDate = (val: unknown): val is Date =>\n  toTypeString(val) === '[object Date]'\nexport const isRegExp = (val: unknown): val is RegExp =>\n  toTypeString(val) === '[object RegExp]'\nexport const isFunction = (val: unknown): val is Function =>\n  typeof val === 'function'\nexport const isString = (val: unknown): val is string => typeof val === 'string'\nexport const isNumber = (val: unknown): val is number => typeof val === 'number'\nexport const isSymbol = (val: unknown): val is symbol => typeof val === 'symbol'\nexport const isObject = (val: unknown): val is Record<any, any> =>\n  val !== null && typeof val === 'object'\n\nexport const isPromise = <T = any>(val: unknown): val is Promise<T> => {\n  return isObject(val) && isFunction(val.then) && isFunction(val.catch)\n}\n\nexport const objectToString = Object.prototype.toString\nexport const toTypeString = (value: unknown): string =>\n  objectToString.call(value)\n\nexport const toRawType = (value: unknown): string => {\n  // extract \"RawType\" from strings like \"[object RawType]\"\n  return toTypeString(value).slice(8, -1)\n}\n\nexport const isPlainObject = (val: unknown): val is object =>\n  toTypeString(val) === '[object Object]'\n\nexport const isIntegerKey = (key: unknown) =>\n  isString(key) &&\n  key !== 'NaN' &&\n  key[0] !== '-' &&\n  '' + parseInt(key, 10) === key\n\nexport const mergeDeep = (target: unknown, ...sources) => {\n  if (!sources.length) return target\n  const source = sources.shift()\n\n  if (isObject(target) && isObject(source)) {\n    for (const key in source) {\n      if (isObject(source[key])) {\n        if (!target[key]) Object.assign(target, { [key]: {} })\n        mergeDeep(target[key], source[key])\n      } else {\n        Object.assign(target, { [key]: source[key] })\n      }\n    }\n  }\n\n  return mergeDeep(target, ...sources)\n}\n","/**\n * Patch flags are optimization hints generated by the compiler.\n * when a block with dynamicChildren is encountered during diff, the algorithm\n * enters \"optimized mode\". In this mode, we know that the vdom is produced by\n * a render function generated by the compiler, so the algorithm only needs to\n * handle updates explicitly marked by these patch flags.\n *\n * Patch flags can be combined using the | bitwise operator and can be checked\n * using the & operator, e.g.\n *\n * ```js\n * const flag = TEXT | CLASS\n * if (flag & TEXT) { ... }\n * ```\n *\n * Check the `patchElement` function in '../../runtime-core/src/renderer.ts' to see how the\n * flags are handled during diff.\n */\nexport const enum PatchFlags {\n  /**\n   * Indicates an element with dynamic textContent (children fast path)\n   */\n  TEXT = 1,\n\n  /**\n   * Indicates an element with dynamic class binding.\n   */\n  CLASS = 1 << 1,\n\n  /**\n   * Indicates an element with dynamic style\n   * The compiler pre-compiles static string styles into static objects\n   * + detects and hoists inline static objects\n   * e.g. `style=\"color: red\"` and `:style=\"{ color: 'red' }\"` both get hoisted\n   * as:\n   * ```js\n   * const style = { color: 'red' }\n   * render() { return e('div', { style }) }\n   * ```\n   */\n  STYLE = 1 << 2,\n\n  /**\n   * Indicates an element that has non-class/style dynamic props.\n   * Can also be on a component that has any dynamic props (includes\n   * class/style). when this flag is present, the vnode also has a dynamicProps\n   * array that contains the keys of the props that may change so the runtime\n   * can diff them faster (without having to worry about removed props)\n   */\n  PROPS = 1 << 3,\n\n  /**\n   * Indicates an element with props with dynamic keys. When keys change, a full\n   * diff is always needed to remove the old key. This flag is mutually\n   * exclusive with CLASS, STYLE and PROPS.\n   */\n  FULL_PROPS = 1 << 4,\n\n  /**\n   * Indicates an element with event listeners (which need to be attached\n   * during hydration)\n   */\n  HYDRATE_EVENTS = 1 << 5,\n\n  /**\n   * Indicates a fragment whose children order doesn't change.\n   */\n  STABLE_FRAGMENT = 1 << 6,\n\n  /**\n   * Indicates a fragment with keyed or partially keyed children\n   */\n  KEYED_FRAGMENT = 1 << 7,\n\n  /**\n   * Indicates a fragment with unkeyed children.\n   */\n  UNKEYED_FRAGMENT = 1 << 8,\n\n  /**\n   * Indicates an element that only needs non-props patching, e.g. ref or\n   * directives (onVnodeXXX hooks). since every patched vnode checks for refs\n   * and onVnodeXXX hooks, it simply marks the vnode so that a parent block\n   * will track it.\n   */\n  NEED_PATCH = 1 << 9,\n\n  /**\n   * Indicates a component with dynamic slots (e.g. slot that references a v-for\n   * iterated value, or dynamic slot names).\n   * Components with this flag are always force updated.\n   */\n  DYNAMIC_SLOTS = 1 << 10,\n\n  /**\n   * Indicates a fragment that was created only because the user has placed\n   * comments at the root level of a template. This is a dev-only flag since\n   * comments are stripped in production.\n   */\n  DEV_ROOT_FRAGMENT = 1 << 11,\n\n  /**\n   * SPECIAL FLAGS -------------------------------------------------------------\n   * Special flags are negative integers. They are never matched against using\n   * bitwise operators (bitwise matching should only happen in branches where\n   * patchFlag > 0), and are mutually exclusive. When checking for a special\n   * flag, simply check patchFlag === FLAG.\n   */\n\n  /**\n   * Indicates a hoisted static vnode. This is a hint for hydration to skip\n   * the entire sub tree since static content never needs to be updated.\n   */\n  HOISTED = -1,\n  /**\n   * A special flag that indicates that the diffing algorithm should bail out\n   * of optimized mode. For example, on block fragments created by renderSlot()\n   * when encountering non-compiler generated slots (i.e. manually written\n   * render functions, which should always be fully diffed)\n   * OR manually cloneVNodes\n   */\n  BAIL = -2\n}\n\n/**\n * dev only flag -> name mapping\n */\nexport const PatchFlagNames: Record<PatchFlags, string> = {\n  [PatchFlags.TEXT]: `TEXT`,\n  [PatchFlags.CLASS]: `CLASS`,\n  [PatchFlags.STYLE]: `STYLE`,\n  [PatchFlags.PROPS]: `PROPS`,\n  [PatchFlags.FULL_PROPS]: `FULL_PROPS`,\n  [PatchFlags.HYDRATE_EVENTS]: `HYDRATE_EVENTS`,\n  [PatchFlags.STABLE_FRAGMENT]: `STABLE_FRAGMENT`,\n  [PatchFlags.KEYED_FRAGMENT]: `KEYED_FRAGMENT`,\n  [PatchFlags.UNKEYED_FRAGMENT]: `UNKEYED_FRAGMENT`,\n  [PatchFlags.NEED_PATCH]: `NEED_PATCH`,\n  [PatchFlags.DYNAMIC_SLOTS]: `DYNAMIC_SLOTS`,\n  [PatchFlags.DEV_ROOT_FRAGMENT]: `DEV_ROOT_FRAGMENT`,\n  [PatchFlags.HOISTED]: `HOISTED`,\n  [PatchFlags.BAIL]: `BAIL`\n}\n","import { IPath, Path, PathType } from './path'\n\nexport class Vector implements IPath {\n  type: PathType\n  x: number\n  y: number\n\n  constructor(x: number, y: number) {\n    this.type = PathType.VECTOR\n    this.x = x\n    this.y = y\n  }\n\n  add(deltaX: number, deltaY: number): Vector {\n    return new Vector(this.x + deltaX, this.y + deltaY)\n  }\n}\n\nexport const isVector = (path: Path): path is Vector =>\n  path.type === PathType.VECTOR\n","import {\n  getAbsoluteValue,\n  getAbsoluteValueForTuple\n} from '../../css/types/length-percentage'\nimport { BezierCurve } from './bezierCurve'\nimport { Path } from './path'\nimport { Vector } from './vector'\n\nexport interface BoundCurves {\n  topWidth: number\n  rightHeight: number\n  bottomWidth: number\n  leftHeight: number\n  borderTopWidth: number\n  borderRightWidth: number\n  borderBottomWidth: number\n  borderLeftWidth: number\n  paddingTop: number\n  paddingRight: number\n  paddingBottom: number\n  paddingLeft: number\n  topLeftBorderDoubleOuterBox: Path\n  topRightBorderDoubleOuterBox: Path\n  bottomRightBorderDoubleOuterBox: Path\n  bottomLeftBorderDoubleOuterBox: Path\n  topLeftBorderDoubleInnerBox: Path\n  topRightBorderDoubleInnerBox: Path\n  bottomRightBorderDoubleInnerBox: Path\n  bottomLeftBorderDoubleInnerBox: Path\n  topLeftBorderStroke: Path\n  topRightBorderStroke: Path\n  bottomRightBorderStroke: Path\n  bottomLeftBorderStroke: Path\n  topLeftBorderBox: Path\n  topRightBorderBox: Path\n  bottomRightBorderBox: Path\n  bottomLeftBorderBox: Path\n  topLeftPaddingBox: Path\n  topRightPaddingBox: Path\n  bottomRightPaddingBox: Path\n  bottomLeftPaddingBox: Path\n  topLeftContentBox: Path\n  topRightContentBox: Path\n  bottomRightContentBox: Path\n  bottomLeftContentBox: Path\n}\n\nexport function createBoundCurves(renderObject) {\n  let styles = renderObject.computedStyles\n  let bounds = renderObject.layoutBox\n\n  let [tlh, tlv] = getAbsoluteValueForTuple(\n    styles.borderTopLeftRadius,\n    bounds.width,\n    bounds.height\n  )\n  let [trh, trv] = getAbsoluteValueForTuple(\n    styles.borderTopRightRadius,\n    bounds.width,\n    bounds.height\n  )\n  let [brh, brv] = getAbsoluteValueForTuple(\n    styles.borderBottomRightRadius,\n    bounds.width,\n    bounds.height\n  )\n  let [blh, blv] = getAbsoluteValueForTuple(\n    styles.borderBottomLeftRadius,\n    bounds.width,\n    bounds.height\n  )\n\n  const factors = []\n  factors.push((tlh + trh) / bounds.width)\n  factors.push((blh + brh) / bounds.width)\n  factors.push((tlv + blv) / bounds.height)\n  factors.push((trv + brv) / bounds.height)\n  const maxFactor = Math.max(...factors)\n\n  if (maxFactor > 1) {\n    tlh /= maxFactor\n    tlv /= maxFactor\n    trh /= maxFactor\n    trv /= maxFactor\n    brh /= maxFactor\n    brv /= maxFactor\n    blh /= maxFactor\n    blv /= maxFactor\n  }\n\n  const topWidth = bounds.width - trh\n  const rightHeight = bounds.height - brv\n  const bottomWidth = bounds.width - brh\n  const leftHeight = bounds.height - blv\n\n  // const borderTopWidth = styles.borderTopWidth\n  // const borderRightWidth = styles.borderRightWidth\n  // const borderBottomWidth = styles.borderBottomWidth\n  // const borderLeftWidth = styles.borderLeftWidth\n  const borderTopWidth = 0\n  const borderRightWidth = 0\n  const borderBottomWidth = 0\n  const borderLeftWidth = 0\n\n  // const paddingTop = getAbsoluteValue(styles.paddingTop, bounds.width)\n  // const paddingRight = getAbsoluteValue(styles.paddingRight, bounds.width)\n  // const paddingBottom = getAbsoluteValue(styles.paddingBottom, bounds.width)\n  // const paddingLeft = getAbsoluteValue(styles.paddingLeft, bounds.width)\n  const paddingTop = styles.paddingTop\n  const paddingRight = styles.paddingRight\n  const paddingBottom = styles.paddingBottom\n  const paddingLeft = styles.paddingLeft\n\n  console.log('4444-createBoundCurves', styles, bounds, paddingTop)\n\n  let boundCurves = {\n    topWidth,\n    rightHeight,\n    bottomWidth,\n    leftHeight,\n    borderTopWidth,\n    borderRightWidth,\n    borderBottomWidth,\n    borderLeftWidth,\n    paddingTop,\n    paddingRight,\n    paddingBottom,\n    paddingLeft,\n    topLeftBorderDoubleOuterBox: null,\n    topRightBorderDoubleOuterBox: null,\n    bottomRightBorderDoubleOuterBox: null,\n    bottomLeftBorderDoubleOuterBox: null,\n    topLeftBorderDoubleInnerBox: null,\n    topRightBorderDoubleInnerBox: null,\n    bottomRightBorderDoubleInnerBox: null,\n    bottomLeftBorderDoubleInnerBox: null,\n    topLeftBorderStroke: null,\n    topRightBorderStroke: null,\n    bottomRightBorderStroke: null,\n    bottomLeftBorderStroke: null,\n    topLeftBorderBox: null,\n    topRightBorderBox: null,\n    bottomRightBorderBox: null,\n    bottomLeftBorderBox: null,\n    topLeftPaddingBox: null,\n    topRightPaddingBox: null,\n    bottomRightPaddingBox: null,\n    bottomLeftPaddingBox: null,\n    topLeftContentBox: null,\n    topRightContentBox: null,\n    bottomRightContentBox: null,\n    bottomLeftContentBox: null\n  }\n\n  boundCurves.topLeftBorderDoubleOuterBox =\n    tlh > 0 || tlv > 0\n      ? getCurvePoints(\n          bounds.left + borderLeftWidth / 3,\n          bounds.top + borderTopWidth / 3,\n          tlh - borderLeftWidth / 3,\n          tlv - borderTopWidth / 3,\n          CORNER.TOP_LEFT\n        )\n      : new Vector(\n          bounds.left + borderLeftWidth / 3,\n          bounds.top + borderTopWidth / 3\n        )\n  boundCurves.topRightBorderDoubleOuterBox =\n    tlh > 0 || tlv > 0\n      ? getCurvePoints(\n          bounds.left + topWidth,\n          bounds.top + borderTopWidth / 3,\n          trh - borderRightWidth / 3,\n          trv - borderTopWidth / 3,\n          CORNER.TOP_RIGHT\n        )\n      : new Vector(\n          bounds.left + bounds.width - borderRightWidth / 3,\n          bounds.top + borderTopWidth / 3\n        )\n  boundCurves.bottomRightBorderDoubleOuterBox =\n    brh > 0 || brv > 0\n      ? getCurvePoints(\n          bounds.left + bottomWidth,\n          bounds.top + rightHeight,\n          brh - borderRightWidth / 3,\n          brv - borderBottomWidth / 3,\n          CORNER.BOTTOM_RIGHT\n        )\n      : new Vector(\n          bounds.left + bounds.width - borderRightWidth / 3,\n          bounds.top + bounds.height - borderBottomWidth / 3\n        )\n  boundCurves.bottomLeftBorderDoubleOuterBox =\n    blh > 0 || blv > 0\n      ? getCurvePoints(\n          bounds.left + borderLeftWidth / 3,\n          bounds.top + leftHeight,\n          blh - borderLeftWidth / 3,\n          blv - borderBottomWidth / 3,\n          CORNER.BOTTOM_LEFT\n        )\n      : new Vector(\n          bounds.left + borderLeftWidth / 3,\n          bounds.top + bounds.height - borderBottomWidth / 3\n        )\n  boundCurves.topLeftBorderDoubleInnerBox =\n    tlh > 0 || tlv > 0\n      ? getCurvePoints(\n          bounds.left + (borderLeftWidth * 2) / 3,\n          bounds.top + (borderTopWidth * 2) / 3,\n          tlh - (borderLeftWidth * 2) / 3,\n          tlv - (borderTopWidth * 2) / 3,\n          CORNER.TOP_LEFT\n        )\n      : new Vector(\n          bounds.left + (borderLeftWidth * 2) / 3,\n          bounds.top + (borderTopWidth * 2) / 3\n        )\n  boundCurves.topRightBorderDoubleInnerBox =\n    tlh > 0 || tlv > 0\n      ? getCurvePoints(\n          bounds.left + topWidth,\n          bounds.top + (borderTopWidth * 2) / 3,\n          trh - (borderRightWidth * 2) / 3,\n          trv - (borderTopWidth * 2) / 3,\n          CORNER.TOP_RIGHT\n        )\n      : new Vector(\n          bounds.left + bounds.width - (borderRightWidth * 2) / 3,\n          bounds.top + (borderTopWidth * 2) / 3\n        )\n  boundCurves.bottomRightBorderDoubleInnerBox =\n    brh > 0 || brv > 0\n      ? getCurvePoints(\n          bounds.left + bottomWidth,\n          bounds.top + rightHeight,\n          brh - (borderRightWidth * 2) / 3,\n          brv - (borderBottomWidth * 2) / 3,\n          CORNER.BOTTOM_RIGHT\n        )\n      : new Vector(\n          bounds.left + bounds.width - (borderRightWidth * 2) / 3,\n          bounds.top + bounds.height - (borderBottomWidth * 2) / 3\n        )\n  boundCurves.bottomLeftBorderDoubleInnerBox =\n    blh > 0 || blv > 0\n      ? getCurvePoints(\n          bounds.left + (borderLeftWidth * 2) / 3,\n          bounds.top + leftHeight,\n          blh - (borderLeftWidth * 2) / 3,\n          blv - (borderBottomWidth * 2) / 3,\n          CORNER.BOTTOM_LEFT\n        )\n      : new Vector(\n          bounds.left + (borderLeftWidth * 2) / 3,\n          bounds.top + bounds.height - (borderBottomWidth * 2) / 3\n        )\n  boundCurves.topLeftBorderStroke =\n    tlh > 0 || tlv > 0\n      ? getCurvePoints(\n          bounds.left + borderLeftWidth / 2,\n          bounds.top + borderTopWidth / 2,\n          tlh - borderLeftWidth / 2,\n          tlv - borderTopWidth / 2,\n          CORNER.TOP_LEFT\n        )\n      : new Vector(\n          bounds.left + borderLeftWidth / 2,\n          bounds.top + borderTopWidth / 2\n        )\n  boundCurves.topRightBorderStroke =\n    tlh > 0 || tlv > 0\n      ? getCurvePoints(\n          bounds.left + topWidth,\n          bounds.top + borderTopWidth / 2,\n          trh - borderRightWidth / 2,\n          trv - borderTopWidth / 2,\n          CORNER.TOP_RIGHT\n        )\n      : new Vector(\n          bounds.left + bounds.width - borderRightWidth / 2,\n          bounds.top + borderTopWidth / 2\n        )\n  boundCurves.bottomRightBorderStroke =\n    brh > 0 || brv > 0\n      ? getCurvePoints(\n          bounds.left + bottomWidth,\n          bounds.top + rightHeight,\n          brh - borderRightWidth / 2,\n          brv - borderBottomWidth / 2,\n          CORNER.BOTTOM_RIGHT\n        )\n      : new Vector(\n          bounds.left + bounds.width - borderRightWidth / 2,\n          bounds.top + bounds.height - borderBottomWidth / 2\n        )\n  boundCurves.bottomLeftBorderStroke =\n    blh > 0 || blv > 0\n      ? getCurvePoints(\n          bounds.left + borderLeftWidth / 2,\n          bounds.top + leftHeight,\n          blh - borderLeftWidth / 2,\n          blv - borderBottomWidth / 2,\n          CORNER.BOTTOM_LEFT\n        )\n      : new Vector(\n          bounds.left + borderLeftWidth / 2,\n          bounds.top + bounds.height - borderBottomWidth / 2\n        )\n  boundCurves.topLeftBorderBox =\n    tlh > 0 || tlv > 0\n      ? getCurvePoints(bounds.left, bounds.top, tlh, tlv, CORNER.TOP_LEFT)\n      : new Vector(bounds.left, bounds.top)\n  boundCurves.topRightBorderBox =\n    trh > 0 || trv > 0\n      ? getCurvePoints(\n          bounds.left + topWidth,\n          bounds.top,\n          trh,\n          trv,\n          CORNER.TOP_RIGHT\n        )\n      : new Vector(bounds.left + bounds.width, bounds.top)\n  boundCurves.bottomRightBorderBox =\n    brh > 0 || brv > 0\n      ? getCurvePoints(\n          bounds.left + bottomWidth,\n          bounds.top + rightHeight,\n          brh,\n          brv,\n          CORNER.BOTTOM_RIGHT\n        )\n      : new Vector(bounds.left + bounds.width, bounds.top + bounds.height)\n  boundCurves.bottomLeftBorderBox =\n    blh > 0 || blv > 0\n      ? getCurvePoints(\n          bounds.left,\n          bounds.top + leftHeight,\n          blh,\n          blv,\n          CORNER.BOTTOM_LEFT\n        )\n      : new Vector(bounds.left, bounds.top + bounds.height)\n  boundCurves.topLeftPaddingBox =\n    tlh > 0 || tlv > 0\n      ? getCurvePoints(\n          bounds.left + borderLeftWidth,\n          bounds.top + borderTopWidth,\n          Math.max(0, tlh - borderLeftWidth),\n          Math.max(0, tlv - borderTopWidth),\n          CORNER.TOP_LEFT\n        )\n      : new Vector(bounds.left + borderLeftWidth, bounds.top + borderTopWidth)\n  boundCurves.topRightPaddingBox =\n    trh > 0 || trv > 0\n      ? getCurvePoints(\n          bounds.left + Math.min(topWidth, bounds.width - borderRightWidth),\n          bounds.top + borderTopWidth,\n          topWidth > bounds.width + borderRightWidth\n            ? 0\n            : Math.max(0, trh - borderRightWidth),\n          Math.max(0, trv - borderTopWidth),\n          CORNER.TOP_RIGHT\n        )\n      : new Vector(\n          bounds.left + bounds.width - borderRightWidth,\n          bounds.top + borderTopWidth\n        )\n  boundCurves.bottomRightPaddingBox =\n    brh > 0 || brv > 0\n      ? getCurvePoints(\n          bounds.left + Math.min(bottomWidth, bounds.width - borderLeftWidth),\n          bounds.top + Math.min(rightHeight, bounds.height - borderBottomWidth),\n          Math.max(0, brh - borderRightWidth),\n          Math.max(0, brv - borderBottomWidth),\n          CORNER.BOTTOM_RIGHT\n        )\n      : new Vector(\n          bounds.left + bounds.width - borderRightWidth,\n          bounds.top + bounds.height - borderBottomWidth\n        )\n  boundCurves.bottomLeftPaddingBox =\n    blh > 0 || blv > 0\n      ? getCurvePoints(\n          bounds.left + borderLeftWidth,\n          bounds.top + Math.min(leftHeight, bounds.height - borderBottomWidth),\n          Math.max(0, blh - borderLeftWidth),\n          Math.max(0, blv - borderBottomWidth),\n          CORNER.BOTTOM_LEFT\n        )\n      : new Vector(\n          bounds.left + borderLeftWidth,\n          bounds.top + bounds.height - borderBottomWidth\n        )\n  boundCurves.topLeftContentBox =\n    tlh > 0 || tlv > 0\n      ? getCurvePoints(\n          bounds.left + borderLeftWidth + paddingLeft,\n          bounds.top + borderTopWidth + paddingTop,\n          Math.max(0, tlh - (borderLeftWidth + paddingLeft)),\n          Math.max(0, tlv - (borderTopWidth + paddingTop)),\n          CORNER.TOP_LEFT\n        )\n      : new Vector(\n          bounds.left + borderLeftWidth + paddingLeft,\n          bounds.top + borderTopWidth + paddingTop\n        )\n  boundCurves.topRightContentBox =\n    trh > 0 || trv > 0\n      ? getCurvePoints(\n          bounds.left +\n            Math.min(topWidth, bounds.width + borderLeftWidth + paddingLeft),\n          bounds.top + borderTopWidth + paddingTop,\n          topWidth > bounds.width + borderLeftWidth + paddingLeft\n            ? 0\n            : trh - borderLeftWidth + paddingLeft,\n          trv - (borderTopWidth + paddingTop),\n          CORNER.TOP_RIGHT\n        )\n      : new Vector(\n          bounds.left + bounds.width - (borderRightWidth + paddingRight),\n          bounds.top + borderTopWidth + paddingTop\n        )\n  boundCurves.bottomRightContentBox =\n    brh > 0 || brv > 0\n      ? getCurvePoints(\n          bounds.left +\n            Math.min(\n              bottomWidth,\n              bounds.width - (borderLeftWidth + paddingLeft)\n            ),\n          bounds.top +\n            Math.min(rightHeight, bounds.height + borderTopWidth + paddingTop),\n          Math.max(0, brh - (borderRightWidth + paddingRight)),\n          brv - (borderBottomWidth + paddingBottom),\n          CORNER.BOTTOM_RIGHT\n        )\n      : new Vector(\n          bounds.left + bounds.width - (borderRightWidth + paddingRight),\n          bounds.top + bounds.height - (borderBottomWidth + paddingBottom)\n        )\n  boundCurves.bottomLeftContentBox =\n    blh > 0 || blv > 0\n      ? getCurvePoints(\n          bounds.left + borderLeftWidth + paddingLeft,\n          bounds.top + leftHeight,\n          Math.max(0, blh - (borderLeftWidth + paddingLeft)),\n          blv - (borderBottomWidth + paddingBottom),\n          CORNER.BOTTOM_LEFT\n        )\n      : new Vector(\n          bounds.left + borderLeftWidth + paddingLeft,\n          bounds.top + bounds.height - (borderBottomWidth + paddingBottom)\n        )\n\n  console.log('boundCurves', boundCurves)\n  return boundCurves\n}\n\nenum CORNER {\n  TOP_LEFT = 0,\n  TOP_RIGHT = 1,\n  BOTTOM_RIGHT = 2,\n  BOTTOM_LEFT = 3\n}\n\nconst getCurvePoints = (\n  x: number,\n  y: number,\n  r1: number,\n  r2: number,\n  position: CORNER\n): BezierCurve => {\n  const kappa = 4 * ((Math.sqrt(2) - 1) / 3)\n  const ox = r1 * kappa // control point offset horizontal\n  const oy = r2 * kappa // control point offset vertical\n  const xm = x + r1 // x-middle\n  const ym = y + r2 // y-middle\n\n  switch (position) {\n    case CORNER.TOP_LEFT:\n      return new BezierCurve(\n        new Vector(x, ym),\n        new Vector(x, ym - oy),\n        new Vector(xm - ox, y),\n        new Vector(xm, y)\n      )\n    case CORNER.TOP_RIGHT:\n      return new BezierCurve(\n        new Vector(x, y),\n        new Vector(x + ox, y),\n        new Vector(xm, ym - oy),\n        new Vector(xm, ym)\n      )\n    case CORNER.BOTTOM_RIGHT:\n      return new BezierCurve(\n        new Vector(xm, y),\n        new Vector(xm, y + oy),\n        new Vector(x + ox, ym),\n        new Vector(x, ym)\n      )\n    case CORNER.BOTTOM_LEFT:\n    default:\n      return new BezierCurve(\n        new Vector(xm, ym),\n        new Vector(xm - ox, ym),\n        new Vector(x, y + oy),\n        new Vector(x, y)\n      )\n  }\n}\n\nexport const calculateBorderBoxPath = (curves: BoundCurves): Path[] => {\n  return [\n    curves.topLeftBorderBox,\n    curves.topRightBorderBox,\n    curves.bottomRightBorderBox,\n    curves.bottomLeftBorderBox\n  ]\n}\n\nexport const calculateContentBoxPath = (curves: BoundCurves): Path[] => {\n  return [\n    curves.topLeftContentBox,\n    curves.topRightContentBox,\n    curves.bottomRightContentBox,\n    curves.bottomLeftContentBox\n  ]\n}\n\nexport const calculatePaddingBoxPath = (curves: BoundCurves): Path[] => {\n  return [\n    curves.topLeftPaddingBox,\n    curves.topRightPaddingBox,\n    curves.bottomRightPaddingBox,\n    curves.bottomLeftPaddingBox\n  ]\n}\n","import { Vector } from './vector'\nimport { IPath, PathType, Path } from './path'\n\nconst lerp = (a: Vector, b: Vector, t: number): Vector => {\n  return new Vector(a.x + (b.x - a.x) * t, a.y + (b.y - a.y) * t)\n}\n\nexport class BezierCurve implements IPath {\n  type: PathType\n  start: Vector\n  startControl: Vector\n  endControl: Vector\n  end: Vector\n\n  constructor(\n    start: Vector,\n    startControl: Vector,\n    endControl: Vector,\n    end: Vector\n  ) {\n    this.type = PathType.BEZIER_CURVE\n    this.start = start\n    this.startControl = startControl\n    this.endControl = endControl\n    this.end = end\n  }\n\n  subdivide(t: number, firstHalf: boolean): BezierCurve {\n    const ab = lerp(this.start, this.startControl, t)\n    const bc = lerp(this.startControl, this.endControl, t)\n    const cd = lerp(this.endControl, this.end, t)\n    const abbc = lerp(ab, bc, t)\n    const bccd = lerp(bc, cd, t)\n    const dest = lerp(abbc, bccd, t)\n    return firstHalf\n      ? new BezierCurve(this.start, ab, abbc, dest)\n      : new BezierCurve(dest, bccd, cd, this.end)\n  }\n\n  add(deltaX: number, deltaY: number): BezierCurve {\n    return new BezierCurve(\n      this.start.add(deltaX, deltaY),\n      this.startControl.add(deltaX, deltaY),\n      this.endControl.add(deltaX, deltaY),\n      this.end.add(deltaX, deltaY)\n    )\n  }\n\n  reverse(): BezierCurve {\n    return new BezierCurve(\n      this.end,\n      this.endControl,\n      this.startControl,\n      this.start\n    )\n  }\n}\n\nexport const isBezierCurve = (path: Path): path is BezierCurve =>\n  path.type === PathType.BEZIER_CURVE\n","// RenderBlock {HTML} at (0, 0) size 640x480\n// |—— RenderBody {BODY} at (0, 80) size 640x480 [bgcolor=# FFFFFF]\n// | |—— RenderBlock {P} at (0, 0) size 640x80\n// | | |—— RenderText {#text} at (0, 0) size 48x24 \"First line.\"\n// | | |—— RenderBR {BR} at (20, 20) size 0x0\n// | | |—— RenderText {#text} at (0, 24) size 48x24 \"Second one.\"\n\nimport { TreeNode, createTreeNode } from '../tree-node'\n\n// BoxModel\n// |-------------------------------------------------|\n// |                                                 |\n// |                  margin-top                     |\n// |                                                 |\n// |    |---------------------------------------|    |\n// |    |                                       |    |\n// |    |             border-top                |    |\n// |    |                                       |    |\n// |    |    |--------------------------|--|    |    |\n// |    |    |                          |  |    |    |\n// |    |    |       padding-top        |##|    |    |\n// |    |    |                          |##|    |    |\n// |    |    |    |----------------|    |##|    |    |\n// |    |    |    |                |    |  |    |    |\n// | ML | BL | PL |  content box   | PR |SW| BR | MR |\n// |    |    |    |                |    |  |    |    |\n// |    |    |    |----------------|    |  |    |    |\n// |    |    |                          |  |    |    |\n// |    |    |      padding-bottom      |  |    |    |\n// |    |    |                          |  |    |    |\n// |    |    |--------------------------|--|    |    |\n// |    |    |     scrollbar height ####|SC|    |    |\n// |    |    |-----------------------------|    |    |\n// |    |                                       |    |\n// |    |           border-bottom               |    |\n// |    |                                       |    |\n// |    |---------------------------------------|    |\n// |                                                 |\n// |                margin-bottom                    |\n// |                                                 |\n// |-------------------------------------------------|\n\n// BL = border-left\n// BR = border-right\n// ML = margin-left\n// MR = margin-right\n// PL = padding-left\n// PR = padding-right\n// SC = scroll corner\n// SW = scrollbar width\n\nexport interface LayoutBox {\n  __v_isLayoutBox: boolean\n  node: TreeNode | null\n  parent: LayoutBox | null\n  top: number\n  left: number\n  width: number\n  height: number\n  appendChild(child: LayoutBox): void\n  setTop(val: number): void\n  setLeft(val: number): void\n  setWidth(val: number): void\n  setHeight(val: number): void\n}\n\nexport function createLayoutBox(parent, top, left, width, height): LayoutBox {\n  let layoutBox = {\n    __v_isLayoutBox: true,\n    node: null,\n    parent: null,\n    top,\n    left,\n    width,\n    height,\n    appendChild,\n    setTop,\n    setLeft,\n    setWidth,\n    setHeight\n  }\n\n  let treeNode = createTreeNode({ instance: layoutBox })\n  parent && parent.appendChild(layoutBox)\n\n  Object.defineProperty(layoutBox, 'parent', {\n    get() {\n      return treeNode.parent ? treeNode.parent.instance : null\n    }\n  })\n\n  Object.defineProperty(layoutBox, 'bottom', {\n    get() {\n      return layoutBox.top + layoutBox.height\n    }\n  })\n\n  Object.defineProperty(layoutBox, 'right', {\n    get() {\n      return layoutBox.left + layoutBox.width\n    }\n  })\n\n  function appendChild(child) {\n    treeNode.appendChild(child.node)\n  }\n\n  function setTop(val) {\n    layoutBox.top = val\n  }\n\n  function setLeft(val) {\n    layoutBox.left = val\n  }\n\n  function setWidth(val) {\n    layoutBox.width = val\n  }\n\n  function setHeight(val) {\n    layoutBox.height = val\n  }\n\n  return layoutBox\n}\n","import { createCSSDeclaration } from '../css'\nimport { BODY_STYLES, EXTEND_STYLE_KEYS } from '../css/constant'\nimport { CanvasElement } from '../element'\nimport { LayoutBox } from '../layout'\nimport { TreeNode, createTreeNode } from '../tree-node'\nimport { NOOP, isString, mergeDeep } from '../utils'\nimport { BoundCurves, createBoundCurves } from './canvas/boundCurves'\nimport { toRenderBlock } from './renderBlock'\nimport { toRenderInline } from './renderInline'\nimport { toRenderText } from './renderText'\n\nexport type RenderStyle = {\n  backgroundColor: string\n  color: string\n  display: string\n  // width: number\n  // height: number\n  // paddingWidth: number\n  // paddingHeight: number\n  // paddingTop: number\n  // paddingBottom: number\n  // paddingLeft: number\n  // paddingRight: number\n  // marginLeft: number\n  // marginRight: number\n  // marginTop: number\n  // marginBottom: number\n  // contentWidth: number\n  // contentHeight: number\n  // fullBoxWidth: number\n  // fullBoxHeight: number\n  // lineCap: string // butt round square\n  // visible: boolean\n}\n\nexport type ComputedStyle = {\n  backgroundColor: string\n  color: string\n  // width: number\n  // height: number\n  // paddingWidth: number\n  // paddingHeight: number\n  // paddingTop: number\n  // paddingBottom: number\n  // paddingLeft: number\n  // paddingRight: number\n  // marginLeft: number\n  // marginRight: number\n  // marginTop: number\n  // marginBottom: number\n  // contentWidth: number\n  // contentHeight: number\n  // fullBoxWidth: number\n  // fullBoxHeight: number\n  // lineCap: string // butt round square\n  // visible: boolean\n}\n\nexport interface RenderObject {\n  // TODO: enum type\n  type: string\n  root: RenderObject | null\n  parent: RenderObject | null\n  nextSibling: RenderObject | null\n  prevSibling: RenderObject | null\n  children: RenderObject[]\n  element: CanvasElement\n  node: TreeNode\n  renderStyles: RenderStyle\n  computedStyles: ComputedStyle\n  viewport: { width: number; height: number } | null\n  layoutBox: LayoutBox | null\n  curves: BoundCurves\n  createRenderStyles(elm: CanvasElement): void\n  updateRenderStyles(): void\n  computeStyles(): void\n  measureBoxSize(): void\n  flow(): void\n  layout(): void\n  appendChild(child: RenderObject): void\n  hasChildren(): boolean\n}\n\nexport function createRenderObject(element, options = {}): RenderObject {\n  let renderObject = {\n    __v_isRenderObject: true,\n    type: 'block',\n    options,\n    root: null,\n    parent: null,\n    nextSibling: null,\n    prevSibling: null,\n    children: [],\n    element,\n    node: null,\n    renderStyles: {} as RenderStyle,\n    computedStyles: {} as ComputedStyle,\n    viewport: null,\n    layoutBox: null,\n    curves: null,\n    createRenderStyles,\n    updateRenderStyles,\n    computeStyles,\n    measureBoxSize: NOOP,\n    layout: NOOP,\n    flow,\n    reflow,\n    appendChild,\n    isRoot,\n    hasChildren\n  }\n\n  let treeNode = createTreeNode({ instance: renderObject })\n  renderObject.node = treeNode\n\n  Object.defineProperty(renderObject, 'root', {\n    get() {\n      return treeNode.root.instance\n    }\n  })\n\n  Object.defineProperty(renderObject, 'parent', {\n    get() {\n      return treeNode.parent ? treeNode.parent.instance : null\n    }\n  })\n\n  Object.defineProperty(renderObject, 'prevSibling', {\n    get() {\n      return treeNode.prev ? treeNode.prev.instance : null\n    }\n  })\n\n  Object.defineProperty(renderObject, 'nextSibling', {\n    get() {\n      return treeNode.next ? treeNode.next.instance : null\n    }\n  })\n\n  Object.defineProperty(renderObject, 'children', {\n    get() {\n      return treeNode.children.map((item) => item.instance)\n    }\n  })\n\n  function createRenderStyles(elm) {\n    if (elm.type === 'body') {\n      return createCSSDeclaration(elm.type, BODY_STYLES)\n    }\n    let renderStyles = createCSSDeclaration(elm.type, elm.styles)\n    return renderStyles\n  }\n\n  function updateRenderStyles() {}\n\n  function computeStyles() {\n    renderObject.measureBoxSize()\n\n    if (renderObject.parent) {\n      EXTEND_STYLE_KEYS.forEach((key) => {\n        const value = _getParentStyle(renderObject, key)\n        if (value) renderObject.computedStyles[key] = value\n      })\n    }\n\n    // Object.keys(renderObject.computedStyles).forEach((styleName) => {\n    //   if (\n    //     renderObject.computedStyles[styleName] === 'transparent' &&\n    //     renderObject.parent\n    //   ) {\n    //     renderObject.computedStyles[styleName] = _getParentStyle(\n    //       renderObject,\n    //       styleName\n    //     )\n    //   }\n    // })\n\n    if (renderObject.hasChildren()) {\n      renderObject.children.forEach((child) => {\n        if (child.type !== 'text') child.computeStyles()\n      })\n    }\n\n    console.log(\n      '4444-computeStyles',\n      renderObject.element,\n      renderObject.computedStyles\n    )\n  }\n\n  function flow() {\n    renderObject.layout()\n    renderObject.curves = createBoundCurves(renderObject)\n    console.log(\n      '4444-flow',\n      renderObject,\n      renderObject.curves,\n      renderObject.children\n    )\n    renderObject.children.forEach((child) => child.flow())\n  }\n\n  function reflow() {}\n\n  function appendChild(child) {\n    treeNode.appendChild(child.node)\n  }\n\n  function isRoot() {\n    return renderObject.parent === null\n  }\n\n  function hasChildren() {\n    console.log('4444', renderObject.node.hasChildren())\n    return renderObject.node.hasChildren()\n  }\n\n  function _getExtendStyles(elm) {\n    let extendStyles = {}\n\n    if (elm.container) {\n      EXTEND_STYLE_KEYS.forEach((key) => {\n        const value = elm.container.styles[key]\n        if (value) extendStyles[key] = value\n      })\n    }\n\n    return extendStyles\n  }\n\n  function _getParentStyle(renderObject, styleName) {\n    if (!renderObject.parent) return\n    if (renderObject.computedStyles[styleName] === 'transparent') {\n      return renderObject.parent.computedStyles[styleName]\n    } else {\n      return _getParentStyle(renderObject.parent, styleName)\n    }\n  }\n\n  // function _getTransParentStyle(elm, styleKey) {\n  //   if (elm.container) {\n  //     if (elm.container.renderStyles[styleKey] !== '')\n  //   }\n  // }\n\n  if (isString(element)) return toRenderText(renderObject)\n\n  renderObject.renderStyles = createRenderStyles(element)\n  renderObject.computedStyles = { ...renderObject.renderStyles }\n  let type = renderObject.renderStyles.display\n  element.renderObject = renderObject\n\n  switch (type) {\n    case 'inline-block':\n      return toRenderInline(renderObject)\n    default:\n      return toRenderBlock(renderObject)\n  }\n}\n","import { splitGraphemes } from '../text/graphemeBreak'\nimport { createLayoutBox } from '../layout'\n\nexport function toRenderText(renderObject) {\n  renderObject.type = 'text'\n  renderObject.layout = layout\n  renderObject.measureBoxSize = measureBoxSize\n  renderObject.getTextStyles = getTextStyles\n  renderObject.textLines = []\n  console.log('3333toRenderText', renderObject)\n\n  function layout() {\n    const { width, height } = renderObject.computedStyles\n    const parentBox = renderObject.parent.layoutBox\n\n    if (!renderObject.layoutBox) {\n      renderObject.layoutBox = createLayoutBox(parentBox, 0, 0, 100, 18)\n    } else {\n      let top = parentBox.top\n      let left = parentBox.left\n      renderObject.layoutBox.setTop(top)\n      renderObject.layoutBox.setLeft(left)\n      renderObject.layoutBox.setWidth(width)\n      renderObject.layoutBox.setHeight(height)\n    }\n\n    console.log(\n      '3333layout-text',\n      renderObject.element,\n      renderObject.layoutBox,\n      parentBox.width\n    )\n  }\n\n  function measureBoxSize() {\n    console.log('measureBoxSize-text')\n    const parentBox = renderObject.parent.layoutBox\n    const ctx = renderObject.parent.element.context.renderer.ctx\n    ctx.save()\n    ctx.font = `300 ${renderObject.getTextStyles().fontSize}px PingFang SC`\n\n    const textLines = wrapText(\n      ctx,\n      renderObject.element,\n      0,\n      16,\n      parentBox.width,\n      renderObject.getTextStyles().lineHeight || 23\n    )\n    ctx.restore()\n    renderObject.textLines = textLines\n    console.log('textLines', textLines)\n    renderObject.computedStyles.width = textLines.maxLineWidth\n    renderObject.computedStyles.height = textLines.outerHeight\n  }\n\n  function getTextStyles() {\n    const parentStyles = renderObject.parent.computedStyles\n    const { color, fontSize, fontWeight } = parentStyles\n\n    return {\n      color,\n      fontSize,\n      fontWeight\n    }\n  }\n\n  function wrapText(ctx, text, x, y, maxWidth, lineHeight) {\n    let words = text.split(' ')\n    let line = ''\n    let testLine = ''\n    let lineArray = []\n    let maxLineWidth = 0\n\n    for (var n = 0; n < words.length; n++) {\n      testLine += `${words[n].trim()} `\n      let metrics = ctx.measureText(testLine)\n      let testWidth = (maxLineWidth = metrics.width)\n\n      if (testWidth > maxWidth && n > 0) {\n        if (testWidth > maxLineWidth) {\n          maxLineWidth = testWidth\n        }\n        lineArray.push([line, x, y])\n        y += lineHeight\n        line = `${words[n]} `\n        testLine = `${words[n]} `\n      } else {\n        line += `${words[n]} `\n      }\n      if (n === words.length - 1) {\n        lineArray.push([line, x, y])\n      }\n    }\n    return {\n      lines: lineArray,\n      maxLineWidth,\n      outerHeight: lineArray[lineArray.length - 1][2]\n    }\n  }\n\n  return renderObject\n}\n","import { createLayoutBox } from '../layout'\nimport { isAuto } from '../utils'\nimport { createBoundCurves } from './canvas/boundCurves'\n\nexport function toRenderInline(renderObject) {\n  renderObject.type = 'inline'\n  renderObject.layout = layout\n  renderObject.measureBoxSize = measureBoxSize\n\n  function layout() {\n    const {\n      borderTopWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n      borderRightWidth,\n      paddingTop,\n      paddingBottom,\n      paddingLeft,\n      paddingRight,\n      width,\n      height\n    } = renderObject.computedStyles\n    const parentBox = renderObject.parent.layoutBox\n\n    if (!renderObject.layoutBox) {\n      renderObject.layoutBox = createLayoutBox(parentBox, 0, 0, 200, 18)\n    } else {\n      const prevSiblingBox = renderObject.prevSibling\n        ? renderObject.prevSibling.layoutBox\n        : null\n\n      let top = parentBox.top\n      let left = parentBox.left\n      let w =\n        Number(borderLeftWidth) +\n        Number(paddingLeft) +\n        Number(width) +\n        Number(paddingRight) +\n        Number(borderRightWidth)\n      let h =\n        Number(borderTopWidth) +\n        Number(paddingTop) +\n        Number(height) +\n        Number(paddingBottom) +\n        Number(borderBottomWidth)\n\n      renderObject.layoutBox.setTop(top)\n      renderObject.layoutBox.setLeft(left)\n      renderObject.layoutBox.setWidth(w)\n      renderObject.layoutBox.setHeight(h)\n    }\n\n    console.log(\n      '3333layout-inline',\n      renderObject.element.type,\n      renderObject.layoutBox\n    )\n  }\n\n  function measureBoxSize() {\n    const parentBox = renderObject.parent.layoutBox\n    if (!renderObject.layoutBox) {\n      renderObject.layoutBox = createLayoutBox(parentBox, 0, 0, 200, 18)\n    }\n    renderObject.children[0].measureBoxSize()\n\n    console.log('3333-measureBoxSize-line', renderObject, renderObject.children)\n    if (renderObject.hasChildren()) {\n      renderObject.computedStyles.width = renderObject.children.reduce(\n        (acc, curr) => {\n          return acc + Number(curr.computedStyles.width)\n        },\n        0\n      )\n\n      renderObject.computedStyles.height = renderObject.children.reduce(\n        (acc, curr) => {\n          return acc + Number(curr.computedStyles.height)\n        },\n        0\n      )\n    }\n    renderObject.parent.measureBoxSize()\n  }\n  return renderObject\n}\n","import { createLayoutBox } from '../layout'\nimport { isAuto } from '../utils'\n\nexport function toRenderBlock(renderObject) {\n  renderObject.type = 'block'\n  renderObject.layout = layout\n  renderObject.measureBoxSize = measureBoxSize\n\n  function layout() {\n    const {\n      borderTopWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n      borderRightWidth,\n      paddingTop,\n      paddingBottom,\n      paddingLeft,\n      paddingRight,\n      width,\n      height\n    } = renderObject.computedStyles\n\n    if (renderObject.isRoot()) {\n      if (!renderObject.layoutBox) {\n        renderObject.layoutBox = createLayoutBox(\n          null,\n          0,\n          0,\n          renderObject.viewport.width,\n          renderObject.viewport.height\n        )\n      }\n    } else {\n      const parentBox = renderObject.parent.layoutBox\n      const prevSiblingBox = renderObject.prevSibling\n        ? renderObject.prevSibling.layoutBox\n        : null\n\n      let top = parentBox.top + (prevSiblingBox ? prevSiblingBox.bottom : 0)\n      let left = parentBox.left\n      let w =\n        Number(borderLeftWidth) +\n        Number(paddingLeft) +\n        Number(width) +\n        Number(paddingRight) +\n        Number(borderRightWidth)\n      let h =\n        Number(borderTopWidth) +\n        Number(paddingTop) +\n        Number(height) +\n        Number(paddingBottom) +\n        Number(borderBottomWidth)\n\n      if (!renderObject.layoutBox) {\n        renderObject.layoutBox = createLayoutBox(parentBox, top, left, w, h)\n      } else {\n        renderObject.layoutBox.setTop(top)\n        renderObject.layoutBox.setLeft(left)\n        renderObject.layoutBox.setWidth(w)\n        renderObject.layoutBox.setHeight(h)\n      }\n    }\n  }\n\n  // measure box size\n  function measureBoxSize() {\n    let { width, height } = renderObject.renderStyles\n\n    if (renderObject.isRoot()) {\n      renderObject.computedStyles.width = renderObject.viewport.width\n      renderObject.computedStyles.height = renderObject.viewport.height\n    }\n\n    if (renderObject.hasChildren()) {\n      if (isAuto(width)) {\n        if (renderObject.children.length > 1) {\n          renderObject.computedStyles.width = renderObject.children.reduce(\n            (acc, curr) => {\n              return acc + Number(curr.computedStyles.width)\n            },\n            0\n          )\n        } else {\n          renderObject.computedStyles.width = Number(\n            renderObject.children[0].computedStyles.width\n          )\n        }\n      }\n\n      if (isAuto(height)) {\n        if (renderObject.children.length > 1) {\n          renderObject.computedStyles.height = renderObject.children.reduce(\n            (acc, curr) => {\n              return acc + Number(curr.computedStyles.height), 0\n            }\n          )\n        } else {\n          renderObject.computedStyles.height = Number(\n            renderObject.children[0].computedStyles.height\n          )\n        }\n      }\n    } else {\n      if (isAuto(width)) {\n        renderObject.computedStyles.width = 0\n      }\n\n      if (isAuto(height)) {\n        renderObject.computedStyles.height = 0\n      }\n    }\n  }\n\n  return renderObject\n}\n","import { TreeNode } from '../tree-node'\nimport { isArray } from './general'\n\ntype Queue<T> = T[]\n\ntype TreeSearchFn = (node: TreeNode) => [TreeNode]\n\n// https://javascript.plainenglish.io/tree-traversal-in-javascript-9b1e92e15abb\n\nexport const BFS: TreeSearchFn = (node) => {\n  const traversed = <any>[]\n\n  if (node != null) {\n    const queue: Queue<TreeNode> = []\n    let item\n    let children\n\n    queue.unshift(node)\n\n    while (queue.length != 0) {\n      item = queue.shift()\n      traversed.push(item)\n      children = item.children\n      if (isArray(children)) {\n        for (let i = 0; i < children.length; i++) queue.push(children[i])\n      }\n    }\n  }\n\n  return traversed\n}\n\nexport const PostOrderDFS: TreeSearchFn = (node) => {\n  let traversed = <any>[]\n\n  function traverse(curr) {\n    if (curr.children.length !== 0) {\n      curr.children.forEach((child) => {\n        traverse(child)\n      })\n    }\n    traversed.push(curr)\n  }\n\n  traverse(node)\n\n  return traversed\n}\n","export const getBackgroundValueForIndex = <T>(\n  values: T[],\n  index: number\n): T => {\n  return 0\n  const value = values[index]\n  if (typeof value === 'undefined') {\n    return values[0]\n  }\n\n  return value\n}\n","import { BACKGROUND_CLIP } from '../css/property-descriptors/background-clip'\nimport { Color, isTransparent } from '../css/types/color'\nimport { CanvasElement } from '../element'\nimport { Engine } from '../engine'\nimport { getBackgroundValueForIndex } from './canvas/background'\nimport { isBezierCurve } from './canvas/bezierCurve'\nimport {\n  BoundCurves,\n  calculateBorderBoxPath,\n  calculateContentBoxPath,\n  calculatePaddingBoxPath\n} from './canvas/boundCurves'\nimport { Path } from './canvas/path'\nimport { Vector } from './canvas/vector'\nimport { RenderObject } from './renderObject'\n\nexport type RenderConfigurations = RenderOptions & {\n  backgroundColor: Color | null\n}\n\nexport interface RenderOptions {\n  canvas?: HTMLCanvasElement\n  ctx: CanvasRenderingContext2D\n  dpr?: number\n  width: number\n  height: number\n}\n\nexport interface CanvasRenderer {\n  canvas: HTMLCanvasElement\n  ctx: CanvasRenderingContext2D\n  dpr?: number\n  root: RenderObject\n  paint(renderObject: RenderObject): void\n  render(elm?: CanvasElement): void\n  mask(paths: Path[]): void\n  path(paths: Path[]): void\n  formatPath(paths: Path[]): void\n}\n\nexport function createRenderer(options: RenderConfigurations): CanvasRenderer {\n  let renderer: CanvasRenderer = {\n    canvas: options.canvas,\n    ctx: options.ctx,\n    dpr: options.dpr || 1,\n    root: null,\n    paint,\n    render,\n    mask,\n    path,\n    formatPath\n  }\n\n  function render(elm) {\n    renderer.paint(elm.renderObject)\n  }\n\n  function paint(renderObject) {\n    switch (renderObject.type) {\n      case 'block':\n        renderBlock(renderObject)\n        break\n      case 'inline':\n        renderInline(renderObject)\n        break\n      case 'text':\n        renderText(renderObject)\n        break\n      default:\n        break\n    }\n\n    if (renderObject.hasChildren()) {\n      console.log('4444-paint', renderObject.children)\n      renderObject.children.forEach((child) => paint(child))\n    }\n  }\n\n  function mask(paths: Path[]): void {\n    renderer.ctx.beginPath()\n    renderer.ctx.moveTo(0, 0)\n    renderer.ctx.lineTo(renderer.canvas.width, 0)\n    renderer.ctx.lineTo(renderer.canvas.width, renderer.canvas.height)\n    renderer.ctx.lineTo(0, renderer.canvas.height)\n    renderer.ctx.lineTo(0, 0)\n    renderer.formatPath(paths.slice(0).reverse())\n    renderer.ctx.closePath()\n  }\n\n  function path(paths: Path[]): void {\n    renderer.ctx.beginPath()\n    renderer.formatPath(paths)\n    renderer.ctx.closePath()\n  }\n\n  function formatPath(paths: Path[]): void {\n    paths.forEach((point, index) => {\n      const start: Vector = isBezierCurve(point) ? point.start : point\n      if (index === 0) {\n        renderer.ctx.moveTo(start.x, start.y)\n      } else {\n        renderer.ctx.lineTo(start.x, start.y)\n      }\n\n      if (isBezierCurve(point)) {\n        renderer.ctx.bezierCurveTo(\n          point.startControl.x,\n          point.startControl.y,\n          point.endControl.x,\n          point.endControl.y,\n          point.end.x,\n          point.end.y\n        )\n      }\n    })\n  }\n\n  function paintBackGroundAndBorder(renderObject) {\n    const { ctx } = renderer\n    const styles = renderObject.computedStyles\n    const backgroundPaintingArea = calculateBackgroundCurvedPaintingArea(\n      getBackgroundValueForIndex(styles.backgroundClip, 0),\n      renderObject.curves\n    )\n    console.log('4444-backgroundPaintingArea', backgroundPaintingArea)\n    ctx.save()\n    path(backgroundPaintingArea)\n    ctx.clip()\n\n    console.log('6666666', styles.backgroundColor)\n    // if (!isTransparent(styles.backgroundColor)) {\n    if (styles.backgroundColor && styles.backgroundColor !== 'transparent') {\n      ctx.fillStyle = styles.backgroundColor\n      ctx.fill()\n    }\n\n    ctx.restore()\n  }\n\n  function renderBlock(renderObject) {\n    console.log('4444-renderBlock', renderObject)\n    paintBackGroundAndBorder(renderObject)\n  }\n\n  function renderInline(renderObject) {\n    console.log('4444-renderInline', renderObject)\n    paintBackGroundAndBorder(renderObject)\n  }\n\n  function renderText(renderObject) {\n    const { ctx } = renderer\n    const styles = renderObject.getTextStyles()\n    console.log('4444-renderText', renderObject, styles)\n\n    ctx.font = `300 ${styles.fontSize}px PingFang SC`\n    ctx.fillStyle = styles.color\n    renderObject.textLines.lines.forEach((line) =>\n      ctx.fillText(line[0], line[1], line[2])\n    )\n  }\n\n  return renderer\n}\n\nconst calculateBackgroundCurvedPaintingArea = (\n  clip: BACKGROUND_CLIP,\n  curves: BoundCurves\n): Path[] => {\n  switch (clip) {\n    case BACKGROUND_CLIP.BORDER_BOX:\n      return calculateBorderBoxPath(curves)\n    case BACKGROUND_CLIP.CONTENT_BOX:\n      return calculateContentBoxPath(curves)\n    case BACKGROUND_CLIP.PADDING_BOX:\n    default:\n      return calculatePaddingBoxPath(curves)\n  }\n}\n","import { isString, compose } from '../utils'\nimport STYLE_CONSTANT, { ElementStyleType } from '../styleConstant'\nimport { TreeNode, createTreeNode } from '../tree-node'\nimport { RenderObject, createRenderObject } from '../render/renderObject'\nimport { Engine } from '../engine'\n\nexport const DEFAULT_CONTAINER = {\n  styles: {},\n  renderStyles: {\n    width: 0,\n    height: 0,\n    paddingWidth: 0,\n    paddingHeight: 0,\n    paddingTop: 0,\n    paddingBottom: 0,\n    paddingLeft: 0,\n    paddingRight: 0,\n    marginLeft: 0,\n    marginRight: 0,\n    marginTop: 0,\n    marginBottom: 0,\n    borderTopWidth: 0,\n    borderBottomWidth: 0,\n    borderLeftWidth: 0,\n    borderRightWidth: 0,\n    contentWidth: 0,\n    contentHeight: 0,\n    fullBoxWidth: 0,\n    fullBoxHeight: 0,\n    lineCap: 'butt',\n    visible: true\n  },\n  layout: {\n    x: 0,\n    y: 0,\n    contentX: 0,\n    contentY: 0\n  }\n}\n\n// export enum ElementTypes {\n//   root = 'root',\n//   view = 'view',\n//   text = 'text',\n//   img = 'img'\n// }\n\ntype ExtendStyles = {\n  textAlign?: string\n  lineHeight?: number\n  fontSize?: number\n  color?: string\n  fontFamily?: string\n  alignItems?: string\n  alignSelf?: string\n  visible?: boolean\n}\n\nexport type Layout = {\n  x: number\n  y: number\n  contentX?: number\n  contentY?: number\n}\n\n// type DefaultContainer = {\n//   styles: ElementStyleType\n//   renderStyles: RenderStyle\n//   layout: Layout\n// }\n\n// type CanvasElementContainer = CanvasElement | DefaultContainer\n\nexport type ElementOptions = {\n  style?: ElementStyleType\n  text?: string\n}\n\nexport function isCanvasElement(value: any): value is CanvasElement {\n  return value ? value.__v_isCanvasElement === true : false\n}\n\nexport interface CanvasElement {\n  __v_isCanvasElement: boolean\n  type: string\n  options: ElementOptions\n  styles: ElementStyleType\n  debugColor: string | null\n  context: Engine\n  root: CanvasElement | null\n  container: CanvasElement | null\n  nextSibling: CanvasElement | null\n  prevSibling: CanvasElement | null\n  children: CanvasElement[]\n  node: TreeNode\n  renderObject: RenderObject\n  appendChild(child: CanvasElement): void\n  hasChildren(): boolean\n  attach(parent: CanvasElement): void\n  hasRootElement(): boolean\n  getRootElement(): CanvasElement\n  isVisible(): boolean\n}\n\nexport type CreateElementAPI = (context: Engine) => CreateElementFn\n\nexport type CreateBaseElementFn = (\n  context: Engine,\n  type: string,\n  options: ElementOptions,\n  children?: CanvasElement[] | string\n) => CanvasElement\n\nexport type CreateElementFn = (\n  type: string,\n  options?: ElementOptions,\n  children?: CanvasElement[] | string\n) => CanvasElement\n\nexport const createBaseElement: CreateBaseElementFn = (\n  context,\n  type,\n  options = {},\n  children?\n) => {\n  let element: CanvasElement = {\n    __v_isCanvasElement: true,\n    type,\n    options,\n    styles: options.style || {},\n    context,\n    root: null,\n    container: null,\n    nextSibling: null,\n    prevSibling: null,\n    children: [],\n    node: null,\n    renderObject: null,\n    debugColor: null,\n    appendChild,\n    hasChildren,\n    attach,\n    hasRootElement,\n    getRootElement,\n    isVisible\n  }\n\n  let treeNode = createTreeNode({ instance: element })\n\n  Object.defineProperty(element, 'root', {\n    get() {\n      return treeNode.root.instance\n    }\n  })\n\n  Object.defineProperty(element, 'container', {\n    get() {\n      return treeNode.parent ? treeNode.parent.instance : null\n    }\n  })\n\n  Object.defineProperty(element, 'prevSibling', {\n    get() {\n      return treeNode.prev ? treeNode.prev.instance : null\n    }\n  })\n\n  Object.defineProperty(element, 'nextSibling', {\n    get() {\n      return treeNode.next ? treeNode.next.instance : null\n    }\n  })\n\n  Object.defineProperty(element, 'children', {\n    get() {\n      if (isString(children)) return children\n      return treeNode.children.map((item) => item.instance)\n    }\n  })\n\n  function appendChild(child) {\n    treeNode.appendChild(child.node)\n\n    // attach to renderTree\n    if (element.hasRootElement()) {\n      console.log('11111appendChild')\n      child.attach(element)\n      element.context.flow(element)\n    }\n  }\n\n  function attach(parent) {\n    parent.renderObject.appendChild(element.renderObject)\n    if (element.hasChildren()) {\n      if (isString(element.children)) {\n        element.renderObject.appendChild(createRenderObject(element.children))\n      } else {\n        element.children.forEach((child) => {\n          child.attach(element)\n        })\n      }\n    }\n  }\n\n  function hasChildren() {\n    return element.node.hasChildren() || isString(element.children)\n  }\n\n  function hasRootElement() {\n    return (\n      treeNode.root &&\n      treeNode.root.instance &&\n      treeNode.root.instance.type === 'body'\n    )\n  }\n\n  function getRootElement() {\n    if (element.hasRootElement()) {\n      return treeNode.root.instance\n    }\n\n    return null\n  }\n\n  function isVisible(): boolean {\n    return true\n    // return (\n    //   this.styles.display > 0 &&\n    //   this.styles.opacity > 0 &&\n    //   this.style.visibility === VISIBILITY.VISIBLE\n    // )\n  }\n\n  if (element.type === 'body') {\n    element.styles = {\n      width: '100%',\n      height: '100%'\n    } as ElementStyleType\n  }\n\n  createRenderObject(element)\n\n  return element\n}\n\nexport const createElementAPI: CreateElementAPI = (context) => {\n  return function createElement(\n    type: string,\n    options: ElementOptions = {},\n    children?: CanvasElement[] | string\n  ): CanvasElement {\n    return createBaseElement(context, type, options, children)\n  }\n}\n","import { Engine, createEngine } from './engine'\nimport { CanvasRenderer, createRenderer } from './render'\nimport { CanvasElement, createElementAPI } from './element'\n\nexport interface DoCanvas {\n  body: CanvasElement\n  engine: Engine\n  renderer: CanvasRenderer\n  createElement\n}\n\nexport function createDoCanvas(options) {\n  let doCanvas = {} as DoCanvas\n  const renderer = createRenderer(options)\n  const engine = createEngine(renderer, options)\n  const createElement = createElementAPI(engine)\n\n  doCanvas = {\n    body: null,\n    engine,\n    renderer,\n    createElement\n  }\n\n  doCanvas.body = createElement('body')\n  engine.createRoot(doCanvas.body)\n\n  return doCanvas\n}\n","import { CanvasElement } from './element'\nimport { RenderObject, createRenderObject } from './render/renderObject'\nimport { PostOrderDFS } from './utils/treeSearch'\n\nexport interface Engine {\n  rootRenderObject: RenderObject\n  DFSRenderArray: RenderObject[]\n  createRoot(rootElm: CanvasElement): void\n  createRenderTree(rootElm: CanvasElement): void\n  createLayoutTree(rootElm: CanvasElement): void\n  updateDFSRenderArray(renderObject: RenderObject): void\n  measureLayout(elm: CanvasElement): void\n  flow(elm: CanvasElement): void\n  reflow(elm: CanvasElement): void\n  paint(elm: CanvasElement): void\n  repaint(elm: CanvasElement): void\n}\n\nexport function createEngine(renderer, options): Engine {\n  let engine = {\n    renderer,\n    viewport: {\n      width: options.width,\n      height: options.height\n    },\n    rootRenderObject: null,\n    DFSRenderArray: [],\n    createRoot,\n    createRenderTree,\n    createLayoutTree,\n    updateDFSRenderArray,\n    measureLayout,\n    flow,\n    reflow,\n    paint,\n    repaint\n  }\n\n  function createRoot(rootElm) {\n    engine.createRenderTree(rootElm)\n    engine.createLayoutTree()\n    engine.measureLayout(rootElm)\n\n    // let printOutTree = engine.DFSRenderArray.map(\n    //   (item) => `${item.type}: ${item.computedStyle}`\n    // )\n    // console.log('2222printOutTree', printOutTree)\n  }\n\n  function createRenderTree(rootElm) {\n    engine.rootRenderObject = createRenderObject(rootElm)\n    engine.rootRenderObject.viewport = engine.viewport\n  }\n\n  function createLayoutTree() {\n    engine.rootRenderObject.flow()\n  }\n\n  function updateDFSRenderArray(renderObject) {\n    engine.DFSRenderArray = PostOrderDFS(renderObject)\n  }\n\n  function measureLayout(elm) {\n    engine.updateDFSRenderArray(elm.renderObject)\n    engine.DFSRenderArray.forEach((item) => {\n      item.measureBoxSize()\n    })\n  }\n\n  function flow(elm) {\n    elm.renderObject.computeStyles()\n    elm.renderObject.flow()\n    elm.hasRootElement() && repaint(elm)\n  }\n\n  function reflow(elm) {\n    elm.renderObject.computeStyles()\n    elm.renderObject.flow()\n    elm.hasRootElement() && repaint(elm)\n  }\n\n  function paint(elm) {\n    console.log('paint', elm)\n    if (!elm) {\n      renderer.paint(engine.rootRenderObject)\n    } else {\n      renderer.paint(elm.renderObject)\n    }\n  }\n\n  function repaint(elm) {\n    console.log('paint', elm)\n    if (!elm) {\n      renderer.paint(engine.rootRenderObject)\n    } else {\n      renderer.paint(elm.renderObject)\n    }\n  }\n\n  renderer.engine = engine\n\n  return engine\n}\n"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","BODY_STYLES","accentColor","additiveSymbols","alignContent","alignItems","alignSelf","alignmentBaseline","all","animation","animationComposition","animationDelay","animationDirection","animationDuration","animationFillMode","animationIterationCount","animationName","animationPlayState","animationTimingFunction","appRegion","appearance","ascentOverride","aspectRatio","backdropFilter","backfaceVisibility","background","backgroundAttachment","backgroundBlendMode","backgroundClip","backgroundColor","backgroundImage","backgroundOrigin","backgroundPosition","backgroundPositionX","backgroundPositionY","backgroundRepeat","backgroundRepeatX","backgroundRepeatY","backgroundSize","basePalette","baselineShift","baselineSource","blockSize","border","borderBlock","borderBlockColor","borderBlockEnd","borderBlockEndColor","borderBlockEndStyle","borderBlockEndWidth","borderBlockStart","borderBlockStartColor","borderBlockStartStyle","borderBlockStartWidth","borderBlockStyle","borderBlockWidth","borderBottom","borderBottomColor","borderBottomLeftRadius","borderBottomRightRadius","borderBottomStyle","borderBottomWidth","borderCollapse","borderColor","borderEndEndRadius","borderEndStartRadius","borderImage","borderImageOutset","borderImageRepeat","borderImageSlice","borderImageSource","borderImageWidth","borderInline","borderInlineColor","borderInlineEnd","borderInlineEndColor","borderInlineEndStyle","borderInlineEndWidth","borderInlineStart","borderInlineStartColor","borderInlineStartStyle","borderInlineStartWidth","borderInlineStyle","borderInlineWidth","borderLeft","borderLeftColor","borderLeftStyle","borderLeftWidth","borderRadius","borderRight","borderRightColor","borderRightStyle","borderRightWidth","borderSpacing","borderStartEndRadius","borderStartStartRadius","borderStyle","borderTop","borderTopColor","borderTopLeftRadius","borderTopRightRadius","borderTopStyle","borderTopWidth","borderWidth","bottom","boxShadow","boxSizing","breakAfter","breakBefore","breakInside","bufferedRendering","captionSide","caretColor","clear","clip","clipPath","clipRule","color","colorInterpolation","colorInterpolationFilters","colorRendering","colorScheme","columnCount","columnFill","columnGap","columnRule","columnRuleColor","columnRuleStyle","columnRuleWidth","columnSpan","columnWidth","columns","contain","containIntrinsicBlockSize","containIntrinsicHeight","containIntrinsicInlineSize","containIntrinsicSize","containIntrinsicWidth","container","containerName","containerType","content","contentVisibility","counterIncrement","counterReset","counterSet","cursor","cx","cy","d","descentOverride","direction","display","dominantBaseline","emptyCells","fallback","fill","fillOpacity","fillRule","filter","flex","flexBasis","flexDirection","flexFlow","flexGrow","flexShrink","flexWrap","float","floodColor","floodOpacity","font","fontDisplay","fontFamily","fontFeatureSettings","fontKerning","fontOpticalSizing","fontPalette","fontSize","fontStretch","fontStyle","fontSynthesis","fontSynthesisSmallCaps","fontSynthesisStyle","fontSynthesisWeight","fontVariant","fontVariantAlternates","fontVariantCaps","fontVariantEastAsian","fontVariantLigatures","fontVariantNumeric","fontVariationSettings","fontWeight","forcedColorAdjust","gap","grid","gridArea","gridAutoColumns","gridAutoFlow","gridAutoRows","gridColumn","gridColumnEnd","gridColumnGap","gridColumnStart","gridGap","gridRow","gridRowEnd","gridRowGap","gridRowStart","gridTemplate","gridTemplateAreas","gridTemplateColumns","gridTemplateRows","height","hyphenateCharacter","hyphenateLimitChars","hyphens","imageOrientation","imageRendering","inherits","initialLetter","initialValue","inlineSize","inset","insetBlock","insetBlockEnd","insetBlockStart","insetInline","insetInlineEnd","insetInlineStart","isolation","justifyContent","justifyItems","justifySelf","left","letterSpacing","lightingColor","lineBreak","lineGapOverride","lineHeight","listStyle","listStyleImage","listStylePosition","listStyleType","margin","marginBlock","marginBlockEnd","marginBlockStart","marginBottom","marginInline","marginInlineEnd","marginInlineStart","marginLeft","marginRight","marginTop","marker","markerEnd","markerMid","markerStart","mask","maskType","mathDepth","mathShift","mathStyle","maxBlockSize","maxHeight","maxInlineSize","maxWidth","minBlockSize","minHeight","minInlineSize","minWidth","mixBlendMode","negative","objectFit","objectPosition","objectViewBox","offset","offsetDistance","offsetPath","offsetRotate","opacity","order","orphans","outline","outlineColor","outlineOffset","outlineStyle","outlineWidth","overflow","overflowAnchor","overflowClipMargin","overflowWrap","overflowX","overflowY","overrideColors","overscrollBehavior","overscrollBehaviorBlock","overscrollBehaviorInline","overscrollBehaviorX","overscrollBehaviorY","pad","padding","paddingBlock","paddingBlockEnd","paddingBlockStart","paddingBottom","paddingInline","paddingInlineEnd","paddingInlineStart","paddingLeft","paddingRight","paddingTop","page","pageBreakAfter","pageBreakBefore","pageBreakInside","pageOrientation","paintOrder","perspective","perspectiveOrigin","placeContent","placeItems","placeSelf","pointerEvents","position","prefix","quotes","r","range","resize","right","rotate","rowGap","rubyPosition","rx","ry","scale","scrollBehavior","scrollMargin","scrollMarginBlock","scrollMarginBlockEnd","scrollMarginBlockStart","scrollMarginBottom","scrollMarginInline","scrollMarginInlineEnd","scrollMarginInlineStart","scrollMarginLeft","scrollMarginRight","scrollMarginTop","scrollPadding","scrollPaddingBlock","scrollPaddingBlockEnd","scrollPaddingBlockStart","scrollPaddingBottom","scrollPaddingInline","scrollPaddingInlineEnd","scrollPaddingInlineStart","scrollPaddingLeft","scrollPaddingRight","scrollPaddingTop","scrollSnapAlign","scrollSnapStop","scrollSnapType","scrollbarGutter","shapeImageThreshold","shapeMargin","shapeOutside","shapeRendering","size","sizeAdjust","speak","speakAs","src","stopColor","stopOpacity","stroke","strokeDasharray","strokeDashoffset","strokeLinecap","strokeLinejoin","strokeMiterlimit","strokeOpacity","strokeWidth","suffix","symbols","syntax","system","tabSize","tableLayout","textAlign","textAlignLast","textAnchor","textCombineUpright","textDecoration","textDecorationColor","textDecorationLine","textDecorationSkipInk","textDecorationStyle","textDecorationThickness","textEmphasis","textEmphasisColor","textEmphasisPosition","textEmphasisStyle","textIndent","textOrientation","textOverflow","textRendering","textShadow","textSizeAdjust","textTransform","textUnderlineOffset","textUnderlinePosition","top","touchAction","transform","transformBox","transformOrigin","transformStyle","transition","transitionDelay","transitionDuration","transitionProperty","transitionTimingFunction","translate","unicodeBidi","unicodeRange","userSelect","vectorEffect","verticalAlign","viewTransitionName","visibility","whiteSpace","widows","width","willChange","wordBreak","wordSpacing","wordWrap","writingMode","x","y","zIndex","zoom","cssFloat","cssText","parentRule","DEFAULT_VIEW_STYLES","DEFAULT_TEXT_STYLES","EXTEND_STYLE_KEYS","isNumberToken","token","type","isIdentToken","name","parse","tokens","map","value","format","borderColorForSide","side","concat","reduce","bit","parseDisplayValue","number","getAbsoluteValueForTuple","tuple","marginForSide","paddingForSide","transformFunction","SUPPORTED_TRANSFORM_FUNCTIONS","Error","values","matrix","args","arg","matrix3d","a1","b1","a2","b2","a4","b4","auto","createCSSDeclaration","styles","console","log","DEFAULT_STYLES","getDefaultStyle","Number","descriptor","style","toString","isTreeNode","__v_isTreeNode","createTreeNode","options","treeNode","_children","children","parent","prev","next","instance","root","getRoot","hasChildren","Array","isArray","appendChild","child","_setSibling","push","_setParent","prependChild","removeChild","append","prepend","remove","node","NOOP","isAuto","num","isString","val","_a","CORNER","Vector","add","deltaX","deltaY","lerp","a","b","BezierCurve","start","startControl","endControl","end","subdivide","firstHalf","ab","bc","cd","abbc","bccd","dest","reverse","isBezierCurve","path","getCurvePoints","r1","r2","kappa","Math","sqrt","ox","oy","xm","ym","TOP_LEFT","TOP_RIGHT","BOTTOM_RIGHT","BOTTOM_LEFT","createLayoutBox","layoutBox","__v_isLayoutBox","setTop","setLeft","setWidth","setHeight","defineProperty","get","createRenderObject","element","renderObject","__v_isRenderObject","nextSibling","prevSibling","renderStyles","computedStyles","viewport","curves","createRenderStyles","updateRenderStyles","computeStyles","measureBoxSize","forEach","key","_getParentStyle","layout","flow","bounds","tlh","tlv","_b","trh","trv","_c","brh","brv","_d","blh","blv","factors","maxFactor","max","topWidth","rightHeight","bottomWidth","leftHeight","boundCurves","topLeftBorderDoubleOuterBox","topRightBorderDoubleOuterBox","bottomRightBorderDoubleOuterBox","bottomLeftBorderDoubleOuterBox","topLeftBorderDoubleInnerBox","topRightBorderDoubleInnerBox","bottomRightBorderDoubleInnerBox","bottomLeftBorderDoubleInnerBox","topLeftBorderStroke","topRightBorderStroke","bottomRightBorderStroke","bottomLeftBorderStroke","topLeftBorderBox","topRightBorderBox","bottomRightBorderBox","bottomLeftBorderBox","topLeftPaddingBox","topRightPaddingBox","bottomRightPaddingBox","bottomLeftPaddingBox","topLeftContentBox","topRightContentBox","bottomRightContentBox","bottomLeftContentBox","min","createBoundCurves","reflow","isRoot","elm","styleName","item","parentBox","top_1","ctx","context","renderer","save","getTextStyles","textLines","text","words","split","line","testLine","lineArray","maxLineWidth","trim","testWidth","measureText","lines","outerHeight","wrapText","restore","parentStyles","toRenderText","w","h","acc","curr","toRenderInline","prevSiblingBox","toRenderBlock","PostOrderDFS","traversed","traverse","getBackgroundValueForIndex","index","createRenderer","canvas","dpr","paint","paintBackGroundAndBorder","renderBlock","renderInline","fillStyle","fillText","renderText","render","paths","beginPath","moveTo","lineTo","formatPath","slice","closePath","point","bezierCurveTo","backgroundPaintingArea","calculateBackgroundCurvedPaintingArea","calculateBorderBoxPath","calculateContentBoxPath","calculatePaddingBoxPath","createElementAPI","__v_isCanvasElement","debugColor","hasRootElement","attach","getRootElement","isVisible","createBaseElement","doCanvas","engine","rootRenderObject","DFSRenderArray","createRoot","rootElm","createRenderTree","createLayoutTree","measureLayout","updateDFSRenderArray","repaint","createEngine","createElement","body"],"mappings":"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","x_google_ignoreList":[0]}