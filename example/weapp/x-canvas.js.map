{"version":3,"file":"x-canvas.js","sources":["../../node_modules/tslib/tslib.es6.js","../../src/utils/general.ts","../../src/utils/treeSearch.ts","../../src/render/canvas/background.ts","../../src/render/canvas/boundCurves.ts","../../src/render/canvas/vector.ts","../../src/render/canvas/bezierCurve.ts","../../src/css/syntax/parser.ts","../../src/render/index.ts","../../src/utils/fp.ts","../../src/tree-node/index.ts","../../src/utils/patchFlags.ts","../../src/render/renderObject.ts","../../src/css/types/length-percentage.ts","../../src/css/constant.ts","../../src/css/property-descriptors/background-clip.ts","../../src/css/property-descriptors/background-color.ts","../../src/css/property-descriptors/border-color.ts","../../src/css/property-descriptors/color.ts","../../src/css/property-descriptors/display.ts","../../src/css/property-descriptors/font-size.ts","../../src/css/property-descriptors/font-weight.ts","../../src/css/property-descriptors/height.ts","../../src/css/property-descriptors/line-height.ts","../../src/css/property-descriptors/margin.ts","../../src/css/property-descriptors/opacity.ts","../../src/css/property-descriptors/padding.ts","../../src/css/property-descriptors/text-align.ts","../../src/css/property-descriptors/transform.ts","../../src/css/property-descriptors/visibility.ts","../../src/css/property-descriptors/width.ts","../../src/css/property-descriptors/z-index.ts","../../src/css/index.ts","../../src/element/textNode.ts","../../src/geometry/point.ts","../../src/geometry/rect.ts","../../src/layout/layoutObject.ts","../../src/layout/layoutBoxModelObject.ts","../../src/layout/layoutBox.ts","../../src/geometry/size.ts","../../src/layout/layoutBlock.ts","../../src/layout/layoutInline.ts","../../src/layout/layoutInlineBlock.ts","../../src/layout/layoutText.ts","../../src/layout/index.ts","../../src/element/element.ts","../../src/index.ts","../../src/engine.ts"],"sourcesContent":["/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.push(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.push(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n","export const EMPTY_OBJ = Object.freeze({})\nexport const EMPTY_ARR = Object.freeze([])\n\nexport const NOOP = () => {}\n\n/**\n * Always return false.\n */\nexport const NO = () => false\n\nconst onRE = /^on[^a-z]/\nexport const isOn = (key: string) => onRE.test(key)\n\nexport const isModelListener = (key: string) => key.startsWith('onUpdate:')\n\nexport const extend = Object.assign\n\nexport const remove = <T>(arr: T[], el: T) => {\n  const i = arr.indexOf(el)\n  if (i > -1) {\n    arr.splice(i, 1)\n  }\n}\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty\nexport const hasOwn = (\n  val: object,\n  key: string | symbol\n): key is keyof typeof val => hasOwnProperty.call(val, key)\n\nexport const isExact = (num: unknown): num is number => {\n  return isNumber.call(null, num)\n}\n\nexport const isAuto = (num: unknown): num is string => {\n  return num === 'auto'\n}\n\nexport const isOuter = (num: unknown): num is string => {\n  if (!isString(num)) return\n  return isArray(num.match('%'))\n}\n\nexport const parseOuter = (num: string): number => {\n  let _n = parseInt(num.replace('%', ''))\n  return isNaN(_n) || _n < 0 ? 0 : _n / 100\n}\n\nexport const isArray = Array.isArray\nexport const isMap = (val: unknown): val is Map<any, any> =>\n  toTypeString(val) === '[object Map]'\nexport const isSet = (val: unknown): val is Set<any> =>\n  toTypeString(val) === '[object Set]'\n\nexport const isDate = (val: unknown): val is Date =>\n  toTypeString(val) === '[object Date]'\nexport const isRegExp = (val: unknown): val is RegExp =>\n  toTypeString(val) === '[object RegExp]'\nexport const isFunction = (val: unknown): val is Function =>\n  typeof val === 'function'\nexport const isString = (val: unknown): val is string => typeof val === 'string'\nexport const isNumber = (val: unknown): val is number => typeof val === 'number'\nexport const isSymbol = (val: unknown): val is symbol => typeof val === 'symbol'\nexport const isObject = (val: unknown): val is Record<any, any> =>\n  val !== null && typeof val === 'object'\n\nexport const isPromise = <T = any>(val: unknown): val is Promise<T> => {\n  return isObject(val) && isFunction(val.then) && isFunction(val.catch)\n}\n\nexport const objectToString = Object.prototype.toString\nexport const toTypeString = (value: unknown): string =>\n  objectToString.call(value)\n\nexport const toRawType = (value: unknown): string => {\n  // extract \"RawType\" from strings like \"[object RawType]\"\n  return toTypeString(value).slice(8, -1)\n}\n\nexport const isPlainObject = (val: unknown): val is object =>\n  toTypeString(val) === '[object Object]'\n\nexport const isIntegerKey = (key: unknown) =>\n  isString(key) &&\n  key !== 'NaN' &&\n  key[0] !== '-' &&\n  '' + parseInt(key, 10) === key\n\nexport const mergeDeep = (target: unknown, ...sources) => {\n  if (!sources.length) return target\n  const source = sources.shift()\n\n  if (isObject(target) && isObject(source)) {\n    for (const key in source) {\n      if (isObject(source[key])) {\n        if (!target[key]) Object.assign(target, { [key]: {} })\n        mergeDeep(target[key], source[key])\n      } else {\n        Object.assign(target, { [key]: source[key] })\n      }\n    }\n  }\n\n  return mergeDeep(target, ...sources)\n}\n","import { TreeNode } from '../tree-node'\nimport { isArray } from './general'\n\ntype Queue<T> = T[]\n\ntype TreeSearchFn = (node: TreeNode) => any[]\n\n// https://javascript.plainenglish.io/tree-traversal-in-javascript-9b1e92e15abb\n\nexport const BFS: TreeSearchFn = (node) => {\n  const traversed = <any>[]\n\n  if (node != null) {\n    const queue: Queue<TreeNode> = []\n    let item\n    let children\n\n    queue.unshift(node)\n\n    while (queue.length != 0) {\n      item = queue.shift()\n      traversed.push(item)\n      children = item.children\n      if (isArray(children)) {\n        for (let i = 0; i < children.length; i++) queue.push(children[i])\n      }\n    }\n  }\n\n  return traversed\n}\n\nexport const PostOrderDFS: TreeSearchFn = (node) => {\n  let traversed = <any>[]\n\n  function traverse(curr) {\n    if (curr.children.length !== 0) {\n      curr.children.forEach((child) => {\n        traverse(child)\n      })\n    }\n    traversed.push(curr)\n  }\n\n  traverse(node)\n\n  return traversed\n}\n","export const getBackgroundValueForIndex = <T>(\n  values: T[],\n  index: number\n): T => {\n  return 0\n  const value = values[index]\n  if (typeof value === 'undefined') {\n    return values[0]\n  }\n\n  return value\n}\n","import { getAbsoluteValue, getAbsoluteValueForTuple } from '../../css/types/length-percentage'\nimport { BezierCurve } from './bezierCurve'\nimport { Path } from './path'\nimport { Vector } from './vector'\n\nexport interface BoundCurves {\n  topWidth: number\n  rightHeight: number\n  bottomWidth: number\n  leftHeight: number\n  borderTopWidth: number\n  borderRightWidth: number\n  borderBottomWidth: number\n  borderLeftWidth: number\n  paddingTop: number\n  paddingRight: number\n  paddingBottom: number\n  paddingLeft: number\n  topLeftBorderDoubleOuterBox: Path\n  topRightBorderDoubleOuterBox: Path\n  bottomRightBorderDoubleOuterBox: Path\n  bottomLeftBorderDoubleOuterBox: Path\n  topLeftBorderDoubleInnerBox: Path\n  topRightBorderDoubleInnerBox: Path\n  bottomRightBorderDoubleInnerBox: Path\n  bottomLeftBorderDoubleInnerBox: Path\n  topLeftBorderStroke: Path\n  topRightBorderStroke: Path\n  bottomRightBorderStroke: Path\n  bottomLeftBorderStroke: Path\n  topLeftBorderBox: Path\n  topRightBorderBox: Path\n  bottomRightBorderBox: Path\n  bottomLeftBorderBox: Path\n  topLeftPaddingBox: Path\n  topRightPaddingBox: Path\n  bottomRightPaddingBox: Path\n  bottomLeftPaddingBox: Path\n  topLeftContentBox: Path\n  topRightContentBox: Path\n  bottomRightContentBox: Path\n  bottomLeftContentBox: Path\n}\n\nexport function createBoundCurves(renderObject) {\n  console.log('createBoundCurves', renderObject)\n  let styles = renderObject.element.getComputedStyles()\n  let bounds = renderObject.layoutBox\n\n  if (!styles) return\n\n  let [tlh, tlv] = getAbsoluteValueForTuple(styles.borderTopLeftRadius, bounds.width, bounds.height)\n  let [trh, trv] = getAbsoluteValueForTuple(\n    styles.borderTopRightRadius,\n    bounds.width,\n    bounds.height\n  )\n  let [brh, brv] = getAbsoluteValueForTuple(\n    styles.borderBottomRightRadius,\n    bounds.width,\n    bounds.height\n  )\n  let [blh, blv] = getAbsoluteValueForTuple(\n    styles.borderBottomLeftRadius,\n    bounds.width,\n    bounds.height\n  )\n\n  const factors = []\n  factors.push((tlh + trh) / bounds.width)\n  factors.push((blh + brh) / bounds.width)\n  factors.push((tlv + blv) / bounds.height)\n  factors.push((trv + brv) / bounds.height)\n  const maxFactor = Math.max(...factors)\n\n  if (maxFactor > 1) {\n    tlh /= maxFactor\n    tlv /= maxFactor\n    trh /= maxFactor\n    trv /= maxFactor\n    brh /= maxFactor\n    brv /= maxFactor\n    blh /= maxFactor\n    blv /= maxFactor\n  }\n\n  const topWidth = bounds.width - trh\n  const rightHeight = bounds.height - brv\n  const bottomWidth = bounds.width - brh\n  const leftHeight = bounds.height - blv\n\n  // const borderTopWidth = styles.borderTopWidth\n  // const borderRightWidth = styles.borderRightWidth\n  // const borderBottomWidth = styles.borderBottomWidth\n  // const borderLeftWidth = styles.borderLeftWidth\n  const borderTopWidth = 0\n  const borderRightWidth = 0\n  const borderBottomWidth = 0\n  const borderLeftWidth = 0\n\n  // const paddingTop = getAbsoluteValue(styles.paddingTop, bounds.width)\n  // const paddingRight = getAbsoluteValue(styles.paddingRight, bounds.width)\n  // const paddingBottom = getAbsoluteValue(styles.paddingBottom, bounds.width)\n  // const paddingLeft = getAbsoluteValue(styles.paddingLeft, bounds.width)\n  const paddingTop = styles.paddingTop\n  const paddingRight = styles.paddingRight\n  const paddingBottom = styles.paddingBottom\n  const paddingLeft = styles.paddingLeft\n\n  let boundCurves = {\n    topWidth,\n    rightHeight,\n    bottomWidth,\n    leftHeight,\n    borderTopWidth,\n    borderRightWidth,\n    borderBottomWidth,\n    borderLeftWidth,\n    paddingTop,\n    paddingRight,\n    paddingBottom,\n    paddingLeft,\n    topLeftBorderDoubleOuterBox: null,\n    topRightBorderDoubleOuterBox: null,\n    bottomRightBorderDoubleOuterBox: null,\n    bottomLeftBorderDoubleOuterBox: null,\n    topLeftBorderDoubleInnerBox: null,\n    topRightBorderDoubleInnerBox: null,\n    bottomRightBorderDoubleInnerBox: null,\n    bottomLeftBorderDoubleInnerBox: null,\n    topLeftBorderStroke: null,\n    topRightBorderStroke: null,\n    bottomRightBorderStroke: null,\n    bottomLeftBorderStroke: null,\n    topLeftBorderBox: null,\n    topRightBorderBox: null,\n    bottomRightBorderBox: null,\n    bottomLeftBorderBox: null,\n    topLeftPaddingBox: null,\n    topRightPaddingBox: null,\n    bottomRightPaddingBox: null,\n    bottomLeftPaddingBox: null,\n    topLeftContentBox: null,\n    topRightContentBox: null,\n    bottomRightContentBox: null,\n    bottomLeftContentBox: null\n  }\n\n  boundCurves.topLeftBorderDoubleOuterBox =\n    tlh > 0 || tlv > 0\n      ? getCurvePoints(\n          bounds.left + borderLeftWidth / 3,\n          bounds.top + borderTopWidth / 3,\n          tlh - borderLeftWidth / 3,\n          tlv - borderTopWidth / 3,\n          CORNER.TOP_LEFT\n        )\n      : new Vector(bounds.left + borderLeftWidth / 3, bounds.top + borderTopWidth / 3)\n  boundCurves.topRightBorderDoubleOuterBox =\n    tlh > 0 || tlv > 0\n      ? getCurvePoints(\n          bounds.left + topWidth,\n          bounds.top + borderTopWidth / 3,\n          trh - borderRightWidth / 3,\n          trv - borderTopWidth / 3,\n          CORNER.TOP_RIGHT\n        )\n      : new Vector(\n          bounds.left + bounds.width - borderRightWidth / 3,\n          bounds.top + borderTopWidth / 3\n        )\n  boundCurves.bottomRightBorderDoubleOuterBox =\n    brh > 0 || brv > 0\n      ? getCurvePoints(\n          bounds.left + bottomWidth,\n          bounds.top + rightHeight,\n          brh - borderRightWidth / 3,\n          brv - borderBottomWidth / 3,\n          CORNER.BOTTOM_RIGHT\n        )\n      : new Vector(\n          bounds.left + bounds.width - borderRightWidth / 3,\n          bounds.top + bounds.height - borderBottomWidth / 3\n        )\n  boundCurves.bottomLeftBorderDoubleOuterBox =\n    blh > 0 || blv > 0\n      ? getCurvePoints(\n          bounds.left + borderLeftWidth / 3,\n          bounds.top + leftHeight,\n          blh - borderLeftWidth / 3,\n          blv - borderBottomWidth / 3,\n          CORNER.BOTTOM_LEFT\n        )\n      : new Vector(\n          bounds.left + borderLeftWidth / 3,\n          bounds.top + bounds.height - borderBottomWidth / 3\n        )\n  boundCurves.topLeftBorderDoubleInnerBox =\n    tlh > 0 || tlv > 0\n      ? getCurvePoints(\n          bounds.left + (borderLeftWidth * 2) / 3,\n          bounds.top + (borderTopWidth * 2) / 3,\n          tlh - (borderLeftWidth * 2) / 3,\n          tlv - (borderTopWidth * 2) / 3,\n          CORNER.TOP_LEFT\n        )\n      : new Vector(bounds.left + (borderLeftWidth * 2) / 3, bounds.top + (borderTopWidth * 2) / 3)\n  boundCurves.topRightBorderDoubleInnerBox =\n    tlh > 0 || tlv > 0\n      ? getCurvePoints(\n          bounds.left + topWidth,\n          bounds.top + (borderTopWidth * 2) / 3,\n          trh - (borderRightWidth * 2) / 3,\n          trv - (borderTopWidth * 2) / 3,\n          CORNER.TOP_RIGHT\n        )\n      : new Vector(\n          bounds.left + bounds.width - (borderRightWidth * 2) / 3,\n          bounds.top + (borderTopWidth * 2) / 3\n        )\n  boundCurves.bottomRightBorderDoubleInnerBox =\n    brh > 0 || brv > 0\n      ? getCurvePoints(\n          bounds.left + bottomWidth,\n          bounds.top + rightHeight,\n          brh - (borderRightWidth * 2) / 3,\n          brv - (borderBottomWidth * 2) / 3,\n          CORNER.BOTTOM_RIGHT\n        )\n      : new Vector(\n          bounds.left + bounds.width - (borderRightWidth * 2) / 3,\n          bounds.top + bounds.height - (borderBottomWidth * 2) / 3\n        )\n  boundCurves.bottomLeftBorderDoubleInnerBox =\n    blh > 0 || blv > 0\n      ? getCurvePoints(\n          bounds.left + (borderLeftWidth * 2) / 3,\n          bounds.top + leftHeight,\n          blh - (borderLeftWidth * 2) / 3,\n          blv - (borderBottomWidth * 2) / 3,\n          CORNER.BOTTOM_LEFT\n        )\n      : new Vector(\n          bounds.left + (borderLeftWidth * 2) / 3,\n          bounds.top + bounds.height - (borderBottomWidth * 2) / 3\n        )\n  boundCurves.topLeftBorderStroke =\n    tlh > 0 || tlv > 0\n      ? getCurvePoints(\n          bounds.left + borderLeftWidth / 2,\n          bounds.top + borderTopWidth / 2,\n          tlh - borderLeftWidth / 2,\n          tlv - borderTopWidth / 2,\n          CORNER.TOP_LEFT\n        )\n      : new Vector(bounds.left + borderLeftWidth / 2, bounds.top + borderTopWidth / 2)\n  boundCurves.topRightBorderStroke =\n    tlh > 0 || tlv > 0\n      ? getCurvePoints(\n          bounds.left + topWidth,\n          bounds.top + borderTopWidth / 2,\n          trh - borderRightWidth / 2,\n          trv - borderTopWidth / 2,\n          CORNER.TOP_RIGHT\n        )\n      : new Vector(\n          bounds.left + bounds.width - borderRightWidth / 2,\n          bounds.top + borderTopWidth / 2\n        )\n  boundCurves.bottomRightBorderStroke =\n    brh > 0 || brv > 0\n      ? getCurvePoints(\n          bounds.left + bottomWidth,\n          bounds.top + rightHeight,\n          brh - borderRightWidth / 2,\n          brv - borderBottomWidth / 2,\n          CORNER.BOTTOM_RIGHT\n        )\n      : new Vector(\n          bounds.left + bounds.width - borderRightWidth / 2,\n          bounds.top + bounds.height - borderBottomWidth / 2\n        )\n  boundCurves.bottomLeftBorderStroke =\n    blh > 0 || blv > 0\n      ? getCurvePoints(\n          bounds.left + borderLeftWidth / 2,\n          bounds.top + leftHeight,\n          blh - borderLeftWidth / 2,\n          blv - borderBottomWidth / 2,\n          CORNER.BOTTOM_LEFT\n        )\n      : new Vector(\n          bounds.left + borderLeftWidth / 2,\n          bounds.top + bounds.height - borderBottomWidth / 2\n        )\n  boundCurves.topLeftBorderBox =\n    tlh > 0 || tlv > 0\n      ? getCurvePoints(bounds.left, bounds.top, tlh, tlv, CORNER.TOP_LEFT)\n      : new Vector(bounds.left, bounds.top)\n  boundCurves.topRightBorderBox =\n    trh > 0 || trv > 0\n      ? getCurvePoints(bounds.left + topWidth, bounds.top, trh, trv, CORNER.TOP_RIGHT)\n      : new Vector(bounds.left + bounds.width, bounds.top)\n  boundCurves.bottomRightBorderBox =\n    brh > 0 || brv > 0\n      ? getCurvePoints(\n          bounds.left + bottomWidth,\n          bounds.top + rightHeight,\n          brh,\n          brv,\n          CORNER.BOTTOM_RIGHT\n        )\n      : new Vector(bounds.left + bounds.width, bounds.top + bounds.height)\n  boundCurves.bottomLeftBorderBox =\n    blh > 0 || blv > 0\n      ? getCurvePoints(bounds.left, bounds.top + leftHeight, blh, blv, CORNER.BOTTOM_LEFT)\n      : new Vector(bounds.left, bounds.top + bounds.height)\n  boundCurves.topLeftPaddingBox =\n    tlh > 0 || tlv > 0\n      ? getCurvePoints(\n          bounds.left + borderLeftWidth,\n          bounds.top + borderTopWidth,\n          Math.max(0, tlh - borderLeftWidth),\n          Math.max(0, tlv - borderTopWidth),\n          CORNER.TOP_LEFT\n        )\n      : new Vector(bounds.left + borderLeftWidth, bounds.top + borderTopWidth)\n  boundCurves.topRightPaddingBox =\n    trh > 0 || trv > 0\n      ? getCurvePoints(\n          bounds.left + Math.min(topWidth, bounds.width - borderRightWidth),\n          bounds.top + borderTopWidth,\n          topWidth > bounds.width + borderRightWidth ? 0 : Math.max(0, trh - borderRightWidth),\n          Math.max(0, trv - borderTopWidth),\n          CORNER.TOP_RIGHT\n        )\n      : new Vector(bounds.left + bounds.width - borderRightWidth, bounds.top + borderTopWidth)\n  boundCurves.bottomRightPaddingBox =\n    brh > 0 || brv > 0\n      ? getCurvePoints(\n          bounds.left + Math.min(bottomWidth, bounds.width - borderLeftWidth),\n          bounds.top + Math.min(rightHeight, bounds.height - borderBottomWidth),\n          Math.max(0, brh - borderRightWidth),\n          Math.max(0, brv - borderBottomWidth),\n          CORNER.BOTTOM_RIGHT\n        )\n      : new Vector(\n          bounds.left + bounds.width - borderRightWidth,\n          bounds.top + bounds.height - borderBottomWidth\n        )\n  boundCurves.bottomLeftPaddingBox =\n    blh > 0 || blv > 0\n      ? getCurvePoints(\n          bounds.left + borderLeftWidth,\n          bounds.top + Math.min(leftHeight, bounds.height - borderBottomWidth),\n          Math.max(0, blh - borderLeftWidth),\n          Math.max(0, blv - borderBottomWidth),\n          CORNER.BOTTOM_LEFT\n        )\n      : new Vector(bounds.left + borderLeftWidth, bounds.top + bounds.height - borderBottomWidth)\n  boundCurves.topLeftContentBox =\n    tlh > 0 || tlv > 0\n      ? getCurvePoints(\n          bounds.left + borderLeftWidth + paddingLeft,\n          bounds.top + borderTopWidth + paddingTop,\n          Math.max(0, tlh - (borderLeftWidth + paddingLeft)),\n          Math.max(0, tlv - (borderTopWidth + paddingTop)),\n          CORNER.TOP_LEFT\n        )\n      : new Vector(\n          bounds.left + borderLeftWidth + paddingLeft,\n          bounds.top + borderTopWidth + paddingTop\n        )\n  boundCurves.topRightContentBox =\n    trh > 0 || trv > 0\n      ? getCurvePoints(\n          bounds.left + Math.min(topWidth, bounds.width + borderLeftWidth + paddingLeft),\n          bounds.top + borderTopWidth + paddingTop,\n          topWidth > bounds.width + borderLeftWidth + paddingLeft\n            ? 0\n            : trh - borderLeftWidth + paddingLeft,\n          trv - (borderTopWidth + paddingTop),\n          CORNER.TOP_RIGHT\n        )\n      : new Vector(\n          bounds.left + bounds.width - (borderRightWidth + paddingRight),\n          bounds.top + borderTopWidth + paddingTop\n        )\n  boundCurves.bottomRightContentBox =\n    brh > 0 || brv > 0\n      ? getCurvePoints(\n          bounds.left + Math.min(bottomWidth, bounds.width - (borderLeftWidth + paddingLeft)),\n          bounds.top + Math.min(rightHeight, bounds.height + borderTopWidth + paddingTop),\n          Math.max(0, brh - (borderRightWidth + paddingRight)),\n          brv - (borderBottomWidth + paddingBottom),\n          CORNER.BOTTOM_RIGHT\n        )\n      : new Vector(\n          bounds.left + bounds.width - (borderRightWidth + paddingRight),\n          bounds.top + bounds.height - (borderBottomWidth + paddingBottom)\n        )\n  boundCurves.bottomLeftContentBox =\n    blh > 0 || blv > 0\n      ? getCurvePoints(\n          bounds.left + borderLeftWidth + paddingLeft,\n          bounds.top + leftHeight,\n          Math.max(0, blh - (borderLeftWidth + paddingLeft)),\n          blv - (borderBottomWidth + paddingBottom),\n          CORNER.BOTTOM_LEFT\n        )\n      : new Vector(\n          bounds.left + borderLeftWidth + paddingLeft,\n          bounds.top + bounds.height - (borderBottomWidth + paddingBottom)\n        )\n\n  return boundCurves\n}\n\nenum CORNER {\n  TOP_LEFT = 0,\n  TOP_RIGHT = 1,\n  BOTTOM_RIGHT = 2,\n  BOTTOM_LEFT = 3\n}\n\nconst getCurvePoints = (\n  x: number,\n  y: number,\n  r1: number,\n  r2: number,\n  position: CORNER\n): BezierCurve => {\n  const kappa = 4 * ((Math.sqrt(2) - 1) / 3)\n  const ox = r1 * kappa // control point offset horizontal\n  const oy = r2 * kappa // control point offset vertical\n  const xm = x + r1 // x-middle\n  const ym = y + r2 // y-middle\n\n  switch (position) {\n    case CORNER.TOP_LEFT:\n      return new BezierCurve(\n        new Vector(x, ym),\n        new Vector(x, ym - oy),\n        new Vector(xm - ox, y),\n        new Vector(xm, y)\n      )\n    case CORNER.TOP_RIGHT:\n      return new BezierCurve(\n        new Vector(x, y),\n        new Vector(x + ox, y),\n        new Vector(xm, ym - oy),\n        new Vector(xm, ym)\n      )\n    case CORNER.BOTTOM_RIGHT:\n      return new BezierCurve(\n        new Vector(xm, y),\n        new Vector(xm, y + oy),\n        new Vector(x + ox, ym),\n        new Vector(x, ym)\n      )\n    case CORNER.BOTTOM_LEFT:\n    default:\n      return new BezierCurve(\n        new Vector(xm, ym),\n        new Vector(xm - ox, ym),\n        new Vector(x, y + oy),\n        new Vector(x, y)\n      )\n  }\n}\n\nexport const calculateBorderBoxPath = (curves: BoundCurves): Path[] => {\n  return [\n    curves.topLeftBorderBox,\n    curves.topRightBorderBox,\n    curves.bottomRightBorderBox,\n    curves.bottomLeftBorderBox\n  ]\n}\n\nexport const calculateContentBoxPath = (curves: BoundCurves): Path[] => {\n  return [\n    curves.topLeftContentBox,\n    curves.topRightContentBox,\n    curves.bottomRightContentBox,\n    curves.bottomLeftContentBox\n  ]\n}\n\nexport const calculatePaddingBoxPath = (curves: BoundCurves): Path[] => {\n  return [\n    curves.topLeftPaddingBox,\n    curves.topRightPaddingBox,\n    curves.bottomRightPaddingBox,\n    curves.bottomLeftPaddingBox\n  ]\n}\n","import { IPath, Path, PathType } from './path'\n\nexport class Vector implements IPath {\n  type: PathType\n  x: number\n  y: number\n\n  constructor(x: number, y: number) {\n    this.type = PathType.VECTOR\n    this.x = x\n    this.y = y\n  }\n\n  add(deltaX: number, deltaY: number): Vector {\n    return new Vector(this.x + deltaX, this.y + deltaY)\n  }\n}\n\nexport const isVector = (path: Path): path is Vector =>\n  path.type === PathType.VECTOR\n","import { Vector } from './vector'\nimport { IPath, PathType, Path } from './path'\n\nconst lerp = (a: Vector, b: Vector, t: number): Vector => {\n  return new Vector(a.x + (b.x - a.x) * t, a.y + (b.y - a.y) * t)\n}\n\nexport class BezierCurve implements IPath {\n  type: PathType\n  start: Vector\n  startControl: Vector\n  endControl: Vector\n  end: Vector\n\n  constructor(\n    start: Vector,\n    startControl: Vector,\n    endControl: Vector,\n    end: Vector\n  ) {\n    this.type = PathType.BEZIER_CURVE\n    this.start = start\n    this.startControl = startControl\n    this.endControl = endControl\n    this.end = end\n  }\n\n  subdivide(t: number, firstHalf: boolean): BezierCurve {\n    const ab = lerp(this.start, this.startControl, t)\n    const bc = lerp(this.startControl, this.endControl, t)\n    const cd = lerp(this.endControl, this.end, t)\n    const abbc = lerp(ab, bc, t)\n    const bccd = lerp(bc, cd, t)\n    const dest = lerp(abbc, bccd, t)\n    return firstHalf\n      ? new BezierCurve(this.start, ab, abbc, dest)\n      : new BezierCurve(dest, bccd, cd, this.end)\n  }\n\n  add(deltaX: number, deltaY: number): BezierCurve {\n    return new BezierCurve(\n      this.start.add(deltaX, deltaY),\n      this.startControl.add(deltaX, deltaY),\n      this.endControl.add(deltaX, deltaY),\n      this.end.add(deltaX, deltaY)\n    )\n  }\n\n  reverse(): BezierCurve {\n    return new BezierCurve(\n      this.end,\n      this.endControl,\n      this.startControl,\n      this.start\n    )\n  }\n}\n\nexport const isBezierCurve = (path: Path): path is BezierCurve =>\n  path.type === PathType.BEZIER_CURVE\n","import {\n  CSSToken,\n  DimensionToken,\n  NumberValueToken,\n  StringValueToken,\n  TokenType\n} from './tokenizer'\n\nexport type CSSBlockType =\n  | TokenType.LEFT_PARENTHESIS_TOKEN\n  | TokenType.LEFT_SQUARE_BRACKET_TOKEN\n  | TokenType.LEFT_CURLY_BRACKET_TOKEN\n\nexport interface CSSBlock {\n  type: CSSBlockType\n  values: CSSValue[]\n}\n\nexport interface CSSFunction {\n  type: TokenType.FUNCTION\n  name: string\n  values: CSSValue[]\n}\n\nexport type CSSValue = CSSFunction | CSSToken | CSSBlock\n\n// export class Parser {\n//   private _tokens: CSSToken[]\n\n//   constructor(tokens: CSSToken[]) {\n//     this._tokens = tokens\n//   }\n\n//   static create(value: string): Parser {\n//     const tokenizer = new Tokenizer()\n//     tokenizer.write(value)\n//     return new Parser(tokenizer.read())\n//   }\n\n//   static parseValue(value: string): CSSValue {\n//     return Parser.create(value).parseComponentValue()\n//   }\n\n//   static parseValues(value: string): CSSValue[] {\n//     return Parser.create(value).parseComponentValues()\n//   }\n\n//   parseComponentValue(): CSSValue {\n//     let token = this.consumeToken()\n//     while (token.type === TokenType.WHITESPACE_TOKEN) {\n//       token = this.consumeToken()\n//     }\n\n//     if (token.type === TokenType.EOF_TOKEN) {\n//       throw new SyntaxError(`Error parsing CSS component value, unexpected EOF`)\n//     }\n\n//     this.reconsumeToken(token)\n//     const value = this.consumeComponentValue()\n\n//     do {\n//       token = this.consumeToken()\n//     } while (token.type === TokenType.WHITESPACE_TOKEN)\n\n//     if (token.type === TokenType.EOF_TOKEN) {\n//       return value\n//     }\n\n//     throw new SyntaxError(\n//       `Error parsing CSS component value, multiple values found when expecting only one`\n//     )\n//   }\n\n//   parseComponentValues(): CSSValue[] {\n//     const values = []\n//     while (true) {\n//       const value = this.consumeComponentValue()\n//       if (value.type === TokenType.EOF_TOKEN) {\n//         return values\n//       }\n//       values.push(value)\n//       values.push()\n//     }\n//   }\n\n//   private consumeComponentValue(): CSSValue {\n//     const token = this.consumeToken()\n\n//     switch (token.type) {\n//       case TokenType.LEFT_CURLY_BRACKET_TOKEN:\n//       case TokenType.LEFT_SQUARE_BRACKET_TOKEN:\n//       case TokenType.LEFT_PARENTHESIS_TOKEN:\n//         return this.consumeSimpleBlock(token.type)\n//       case TokenType.FUNCTION_TOKEN:\n//         return this.consumeFunction(token)\n//     }\n\n//     return token\n//   }\n\n//   private consumeSimpleBlock(type: CSSBlockType): CSSBlock {\n//     const block: CSSBlock = { type, values: [] }\n\n//     let token = this.consumeToken()\n//     while (true) {\n//       if (token.type === TokenType.EOF_TOKEN || isEndingTokenFor(token, type)) {\n//         return block\n//       }\n\n//       this.reconsumeToken(token)\n//       block.values.push(this.consumeComponentValue())\n//       token = this.consumeToken()\n//     }\n//   }\n\n//   private consumeFunction(functionToken: StringValueToken): CSSFunction {\n//     const cssFunction: CSSFunction = {\n//       name: functionToken.value,\n//       values: [],\n//       type: TokenType.FUNCTION\n//     }\n\n//     while (true) {\n//       const token = this.consumeToken()\n//       if (\n//         token.type === TokenType.EOF_TOKEN ||\n//         token.type === TokenType.RIGHT_PARENTHESIS_TOKEN\n//       ) {\n//         return cssFunction\n//       }\n\n//       this.reconsumeToken(token)\n//       cssFunction.values.push(this.consumeComponentValue())\n//     }\n//   }\n\n//   private consumeToken(): CSSToken {\n//     const token = this._tokens.shift()\n//     return typeof token === 'undefined' ? EOF_TOKEN : token\n//   }\n\n//   private reconsumeToken(token: CSSToken): void {\n//     this._tokens.unshift(token)\n//   }\n// }\n\nexport const isDimensionToken = (token: CSSValue): token is DimensionToken =>\n  token.type === TokenType.DIMENSION_TOKEN\nexport const isNumberToken = (token: CSSValue): token is NumberValueToken =>\n  token.type === TokenType.NUMBER_TOKEN\nexport const isIdentToken = (token: CSSValue): token is StringValueToken =>\n  token.type === TokenType.IDENT_TOKEN\nexport const isStringToken = (token: CSSValue): token is StringValueToken =>\n  token.type === TokenType.STRING_TOKEN\nexport const isIdentWithValue = (token: CSSValue, value: string): boolean =>\n  isIdentToken(token) && token.value === value\n\nexport const nonWhiteSpace = (token: CSSValue): boolean =>\n  token.type !== TokenType.WHITESPACE_TOKEN\nexport const nonFunctionArgSeparator = (token: CSSValue): boolean =>\n  token.type !== TokenType.WHITESPACE_TOKEN &&\n  token.type !== TokenType.COMMA_TOKEN\n\nexport const parseFunctionArgs = (tokens: CSSValue[]): CSSValue[][] => {\n  const args: CSSValue[][] = []\n  let arg: CSSValue[] = []\n  tokens.forEach((token) => {\n    if (token.type === TokenType.COMMA_TOKEN) {\n      if (arg.length === 0) {\n        throw new Error(`Error parsing function args, zero tokens for arg`)\n      }\n      args.push(arg)\n      arg = []\n      return\n    }\n\n    if (token.type !== TokenType.WHITESPACE_TOKEN) {\n      arg.push(token)\n    }\n  })\n  if (arg.length) {\n    args.push(arg)\n  }\n\n  return args\n}\n\nconst isEndingTokenFor = (token: CSSToken, type: CSSBlockType): boolean => {\n  if (\n    type === TokenType.LEFT_CURLY_BRACKET_TOKEN &&\n    token.type === TokenType.RIGHT_CURLY_BRACKET_TOKEN\n  ) {\n    return true\n  }\n  if (\n    type === TokenType.LEFT_SQUARE_BRACKET_TOKEN &&\n    token.type === TokenType.RIGHT_SQUARE_BRACKET_TOKEN\n  ) {\n    return true\n  }\n\n  return (\n    type === TokenType.LEFT_PARENTHESIS_TOKEN &&\n    token.type === TokenType.RIGHT_PARENTHESIS_TOKEN\n  )\n}\n","// RenderBody {BODY} at (0, 0) size 640x480 [bgcolor=# FFFFFF]\n// |—— RenderBlock {P} at (0, 0) size 640x80\n// | |—— RenderText {#text} at (0, 0) size 48x24 \"First line.\"\n// | |—— RenderBR {BR} at (20, 20) size 0x0\n// | |—— RenderText {#text} at (0, 24) size 48x24 \"Second one.\"\n\nimport { BACKGROUND_CLIP } from '../css/property-descriptors/background-clip'\nimport { Color, isTransparent } from '../css/types/color'\nimport { CanvasElement } from '../element/element'\nimport { Engine } from '../engine'\nimport { getBackgroundValueForIndex } from './canvas/background'\nimport { isBezierCurve } from './canvas/bezierCurve'\nimport {\n  BoundCurves,\n  calculateBorderBoxPath,\n  calculateContentBoxPath,\n  calculatePaddingBoxPath\n} from './canvas/boundCurves'\nimport { Path } from './canvas/path'\nimport { Vector } from './canvas/vector'\nimport { RenderObject } from './renderObject'\n\nexport type RenderConfigurations = RenderOptions & {\n  backgroundColor: Color | null\n}\n\nexport interface RenderOptions {\n  canvas?: HTMLCanvasElement\n  ctx: CanvasRenderingContext2D\n  dpr?: number\n  defaultFontFamily: string\n  width: number\n  height: number\n}\n\nexport interface CanvasRenderer {\n  canvas: HTMLCanvasElement\n  ctx: CanvasRenderingContext2D\n  dpr?: number\n  defaultFontFamily: string\n  root: RenderObject\n  render(elm?: CanvasElement): void\n  paint(renderObject: RenderObject): void\n  paintBlock(renderObject: RenderObject): void\n  paintInline(renderObject: RenderObject): void\n  paintText(renderObject: RenderObject): void\n  mask(paths: Path[]): void\n}\n\nexport function createRenderer(options: RenderConfigurations): CanvasRenderer {\n  let renderer: CanvasRenderer = {\n    canvas: options.canvas,\n    ctx: options.ctx,\n    dpr: options.dpr || 1,\n    defaultFontFamily: options.defaultFontFamily,\n    root: null,\n    render,\n    paint,\n    paintBlock,\n    paintInline,\n    paintText,\n    mask\n  }\n\n  return renderer\n}\n\nfunction render(this: CanvasRenderer, elm) {\n  this.paint(elm.renderObject)\n}\n\nfunction paint(this: CanvasRenderer, renderObject: RenderObject) {\n  switch (renderObject.type) {\n    case 'block':\n      this.paintBlock(renderObject)\n      break\n    case 'inline-block':\n      this.paintInline(renderObject)\n      break\n    case 'inline':\n      this.paintInline(renderObject)\n      break\n    case 'text':\n      this.paintText(renderObject)\n      break\n    default:\n      break\n  }\n\n  if (renderObject.hasChildNode()) {\n    renderObject.children.forEach((child) => this.paint(child))\n  }\n}\n\nfunction mask(paths: Path[]): void {\n  this.ctx.beginPath()\n  this.ctx.moveTo(0, 0)\n  this.ctx.lineTo(this.canvas.width, 0)\n  this.ctx.lineTo(this.canvas.width, this.canvas.height)\n  this.ctx.lineTo(0, this.canvas.height)\n  this.ctx.lineTo(0, 0)\n  this.formatPath(paths.slice(0).reverse())\n  this.ctx.closePath()\n}\n\nfunction _path(ctx: CanvasRenderingContext2D, paths: Path[]): void {\n  ctx.beginPath()\n  _formatPath(ctx, paths)\n  ctx.closePath()\n}\n\nfunction _formatPath(ctx: CanvasRenderingContext2D, paths: Path[]): void {\n  paths.forEach((point, index) => {\n    const start: Vector = isBezierCurve(point) ? point.start : point\n    if (index === 0) {\n      ctx.moveTo(start.x, start.y)\n    } else {\n      ctx.lineTo(start.x, start.y)\n    }\n\n    if (isBezierCurve(point)) {\n      ctx.bezierCurveTo(\n        point.startControl.x,\n        point.startControl.y,\n        point.endControl.x,\n        point.endControl.y,\n        point.end.x,\n        point.end.y\n      )\n    }\n  })\n}\n\nfunction _paintBackGroundAndBorder(ctx: CanvasRenderingContext2D, renderObject) {\n  const styles = renderObject.element.getComputedStyles()\n  const backgroundPaintingArea = calculateBackgroundCurvedPaintingArea(\n    getBackgroundValueForIndex(styles.backgroundClip, 0),\n    renderObject.curves\n  )\n  ctx.save()\n  _path(ctx, backgroundPaintingArea)\n  ctx.clip()\n\n  // if (!isTransparent(styles.backgroundColor)) {\n  if (styles.backgroundColor && styles.backgroundColor !== 'transparent') {\n    ctx.fillStyle = styles.backgroundColor\n    ctx.fill()\n  }\n\n  ctx.restore()\n}\n\nfunction paintBlock(this: CanvasRenderer, renderObject) {\n  _paintBackGroundAndBorder(this.ctx, renderObject)\n}\n\nfunction paintInline(this: CanvasRenderer, renderObject) {\n  _paintBackGroundAndBorder(this.ctx, renderObject)\n}\n\nfunction paintText(this: CanvasRenderer, renderObject) {\n  const { ctx } = this\n  const styles = renderObject.getTextStyles()\n\n  ctx.textBaseline = 'ideographic'\n  console.log('fontFamily', styles.fontFamily, styles.fontSize)\n  ctx.font = `normal ${styles.fontSize}px ${styles.fontFamily || this.defaultFontFamily}`\n  ctx.fillStyle = styles.color\n  renderObject.textLines.lines.forEach((line) =>\n    ctx.fillText(line[0], line[1], line[2] + renderObject.layoutBox.top)\n  )\n}\n\nconst calculateBackgroundCurvedPaintingArea = (\n  clip: BACKGROUND_CLIP,\n  curves: BoundCurves\n): Path[] => {\n  switch (clip) {\n    case BACKGROUND_CLIP.BORDER_BOX:\n      return calculateBorderBoxPath(curves)\n    case BACKGROUND_CLIP.CONTENT_BOX:\n      return calculateContentBoxPath(curves)\n    case BACKGROUND_CLIP.PADDING_BOX:\n    default:\n      return calculatePaddingBoxPath(curves)\n  }\n}\n","import { isFunction } from './general'\n\nexport const withConstructor = (constructor) => (o) => {\n  const proto = Object.assign({}, Object.getPrototypeOf(o), { constructor })\n  return Object.assign(Object.create(proto), o)\n}\n\nexport const curry = (fn) => {\n  return function curried(...args) {\n    if (args.length >= fn.length) {\n      return fn.apply(this, args)\n    } else {\n      return function (...args2) {\n        return curried.apply(this, args.concat(args2))\n      }\n    }\n  }\n}\n\nexport const pipe =\n  <T>(...fns: Array<(arg: T) => T>) =>\n  (x: T): any => {\n    return fns.reduce((y, f) => f(y), x)\n  }\n\nexport const compose = (args) => pipe(args.reverse())\n\nlet breakFlag = false\n\nexport const pipeLine =\n  <T>(...fns: Array<(arg: T) => T>) =>\n  (x: T) => {\n    return fns.reduce((y, f) => (breakFlag ? resetPipeLine(x) : f(y)), x)\n  }\n\nexport const breakPipe = (): void => {\n  breakFlag = true\n}\n\nconst resetPipeLine = (x: any): any => {\n  breakFlag = false\n  return x\n}\n\nexport const when =\n  (cond: Function, f: Function, hook?: Function) => (x: any) =>\n    cond()\n      ? (() => {\n          hook && hook()\n          return f(x)\n        })()\n      : x\n","export type TreeNodeOptions<T> = {\n  children?: TreeNode<T>[]\n}\n\ntype Node<T> = TreeNode<T> & T\n\nexport function isTreeNode(value: any): value is TreeNode<any> {\n  return value instanceof TreeNode\n}\n\nexport function isEndNode<T>(node: TreeNode<T>) {\n  return node.parentNode && !node.nextSibling && !node.hasChildNode()\n}\n\nexport class TreeNode<T> {\n  __v_isTreeNode: boolean\n  _parentNode: Node<T> | null\n  _previousSibling: Node<T> | null\n  _nextSibling: Node<T> | null\n  _children: Node<T>[]\n  parentNode: Node<T> | null\n  previousSibling: Node<T> | null\n  nextSibling: Node<T> | null\n  get children() {\n    return this._children\n  }\n  set children(val) {\n    this._children = val\n  }\n  constructor(options?) {\n    this._children = options ? options.children : []\n  }\n  setParentNode(node: Node<T>) {\n    this._parentNode = node\n  }\n  getRootNode(this: Node<T>): Node<T> {\n    return _getRoot(this)\n  }\n  hasChildNode() {\n    return Array.isArray(this._children) && this._children.length ? true : false\n  }\n  appendChildNode(this: Node<T>, child: Node<T>) {\n    if (!isTreeNode(child)) throw Error('Unknown treeNode type')\n    const node = this\n\n    const prev = node._children[node._children.length - 1] || null\n    if (prev && isTreeNode(prev)) {\n      _setSiblingNode<T>(prev, prev.previousSibling, child)\n    }\n\n    Array.isArray(node._children) && node._children.push(child)\n\n    child.setParentNode(node)\n    _setSiblingNode(child, prev, null)\n  }\n  prependChildNode(child: Node<T>) {\n    if (!isTreeNode(child)) throw Error('Unknown treeNode type')\n  }\n  removeChildNode(child: Node<T>) {\n    if (!isTreeNode(child)) throw Error('Unknown treeNode type')\n  }\n}\n\nfunction _getRoot<T>(node: Node<T>): Node<T> {\n  if (node.parentNode) {\n    return _getRoot(node.parentNode)\n  } else {\n    return node\n  }\n}\n\nfunction _setSiblingNode<T>(node: Node<T>, prev: Node<T> | null, next: Node<T> | null): void {\n  node.previousSibling = prev\n  node.nextSibling = next\n}\n\nexport function connectChildren<T>(node: Node<T>) {\n  if (node.hasChildNode()) {\n    node._children.map((child, index) => {\n      child.setParentNode(node)\n      _setSiblingNode(child, node._children[index - 1], node._children[index + 1])\n      connectChildren(child)\n    })\n  }\n}\n","/**\n * Patch flags are optimization hints generated by the compiler.\n * when a block with dynamicChildren is encountered during diff, the algorithm\n * enters \"optimized mode\". In this mode, we know that the vdom is produced by\n * a render function generated by the compiler, so the algorithm only needs to\n * handle updates explicitly marked by these patch flags.\n *\n * Patch flags can be combined using the | bitwise operator and can be checked\n * using the & operator, e.g.\n *\n * ```js\n * const flag = TEXT | CLASS\n * if (flag & TEXT) { ... }\n * ```\n *\n * Check the `patchElement` function in '../../runtime-core/src/renderer.ts' to see how the\n * flags are handled during diff.\n */\nexport const enum PatchFlags {\n  /**\n   * Indicates an element with dynamic textContent (children fast path)\n   */\n  TEXT = 1,\n\n  /**\n   * Indicates an element with dynamic class binding.\n   */\n  CLASS = 1 << 1,\n\n  /**\n   * Indicates an element with dynamic style\n   * The compiler pre-compiles static string styles into static objects\n   * + detects and hoists inline static objects\n   * e.g. `style=\"color: red\"` and `:style=\"{ color: 'red' }\"` both get hoisted\n   * as:\n   * ```js\n   * const style = { color: 'red' }\n   * render() { return e('div', { style }) }\n   * ```\n   */\n  STYLE = 1 << 2,\n\n  /**\n   * Indicates an element that has non-class/style dynamic props.\n   * Can also be on a component that has any dynamic props (includes\n   * class/style). when this flag is present, the vnode also has a dynamicProps\n   * array that contains the keys of the props that may change so the runtime\n   * can diff them faster (without having to worry about removed props)\n   */\n  PROPS = 1 << 3,\n\n  /**\n   * Indicates an element with props with dynamic keys. When keys change, a full\n   * diff is always needed to remove the old key. This flag is mutually\n   * exclusive with CLASS, STYLE and PROPS.\n   */\n  FULL_PROPS = 1 << 4,\n\n  /**\n   * Indicates an element with event listeners (which need to be attached\n   * during hydration)\n   */\n  HYDRATE_EVENTS = 1 << 5,\n\n  /**\n   * Indicates a fragment whose children order doesn't change.\n   */\n  STABLE_FRAGMENT = 1 << 6,\n\n  /**\n   * Indicates a fragment with keyed or partially keyed children\n   */\n  KEYED_FRAGMENT = 1 << 7,\n\n  /**\n   * Indicates a fragment with unkeyed children.\n   */\n  UNKEYED_FRAGMENT = 1 << 8,\n\n  /**\n   * Indicates an element that only needs non-props patching, e.g. ref or\n   * directives (onVnodeXXX hooks). since every patched vnode checks for refs\n   * and onVnodeXXX hooks, it simply marks the vnode so that a parent block\n   * will track it.\n   */\n  NEED_PATCH = 1 << 9,\n\n  /**\n   * Indicates a component with dynamic slots (e.g. slot that references a v-for\n   * iterated value, or dynamic slot names).\n   * Components with this flag are always force updated.\n   */\n  DYNAMIC_SLOTS = 1 << 10,\n\n  /**\n   * Indicates a fragment that was created only because the user has placed\n   * comments at the root level of a template. This is a dev-only flag since\n   * comments are stripped in production.\n   */\n  DEV_ROOT_FRAGMENT = 1 << 11,\n\n  /**\n   * SPECIAL FLAGS -------------------------------------------------------------\n   * Special flags are negative integers. They are never matched against using\n   * bitwise operators (bitwise matching should only happen in branches where\n   * patchFlag > 0), and are mutually exclusive. When checking for a special\n   * flag, simply check patchFlag === FLAG.\n   */\n\n  /**\n   * Indicates a hoisted static vnode. This is a hint for hydration to skip\n   * the entire sub tree since static content never needs to be updated.\n   */\n  HOISTED = -1,\n  /**\n   * A special flag that indicates that the diffing algorithm should bail out\n   * of optimized mode. For example, on block fragments created by renderSlot()\n   * when encountering non-compiler generated slots (i.e. manually written\n   * render functions, which should always be fully diffed)\n   * OR manually cloneVNodes\n   */\n  BAIL = -2\n}\n\n/**\n * dev only flag -> name mapping\n */\nexport const PatchFlagNames: Record<PatchFlags, string> = {\n  [PatchFlags.TEXT]: `TEXT`,\n  [PatchFlags.CLASS]: `CLASS`,\n  [PatchFlags.STYLE]: `STYLE`,\n  [PatchFlags.PROPS]: `PROPS`,\n  [PatchFlags.FULL_PROPS]: `FULL_PROPS`,\n  [PatchFlags.HYDRATE_EVENTS]: `HYDRATE_EVENTS`,\n  [PatchFlags.STABLE_FRAGMENT]: `STABLE_FRAGMENT`,\n  [PatchFlags.KEYED_FRAGMENT]: `KEYED_FRAGMENT`,\n  [PatchFlags.UNKEYED_FRAGMENT]: `UNKEYED_FRAGMENT`,\n  [PatchFlags.NEED_PATCH]: `NEED_PATCH`,\n  [PatchFlags.DYNAMIC_SLOTS]: `DYNAMIC_SLOTS`,\n  [PatchFlags.DEV_ROOT_FRAGMENT]: `DEV_ROOT_FRAGMENT`,\n  [PatchFlags.HOISTED]: `HOISTED`,\n  [PatchFlags.BAIL]: `BAIL`\n}\n","import { CanvasElement } from '../element/element'\nimport { LayoutBox } from '../layout/layoutBox-bp'\nimport { TreeNode } from '../tree-node/index'\nimport { NOOP } from '../utils/index'\nimport { BoundCurves, createBoundCurves } from './canvas/boundCurves'\nimport { createRenderBlock } from './renderBlock'\nimport { createRenderInline } from './renderInline'\nimport { createRenderInlineBlock } from './renderInlineBlock'\nimport { createRenderText } from './renderText'\n\nexport type RenderObjectOptions = {}\n\nexport type CreateRenderObjectFn = (\n  element: CanvasElement,\n  options?: RenderObjectOptions\n) => CanvasElement\n\n// export interface RenderObject extends TreeNode<RenderObject> {\n//   // TODO: enum type\n//   __v_isRenderObject: boolean\n//   type: string\n//   options: RenderObjectOptions\n//   element: CanvasElement\n//   viewport: { width: number; height: number } | null\n//   layoutBox: LayoutBox | null\n//   curves: BoundCurves\n//   children: RenderObject[]\n//   previousSibling: RenderObject | null\n//   nextSibling: RenderObject | null\n//   getContainer(): RenderObject\n//   appendChild(chid: RenderObject): void\n//   measureBoxSize(): void\n//   layout(): void\n//   flow(): void\n//   reflow(): void\n//   isRoot(): boolean\n// }\n\nexport const createRenderObject = (element, options = {}) => {\n  if (element.type === 'body') {\n    return createRenderBlock(element, options)\n  }\n  // if (isCanvasTextNode(element)) {\n  //   return createRenderText(element, options)\n  // }\n\n  switch (element.styles.display) {\n    case 'block':\n      return createRenderBlock(element, options)\n    case 'inline':\n      return createRenderInline(element, options)\n    case 'inline-block':\n      return createRenderInlineBlock(element, options)\n    default:\n      return createRenderBlock(element, options)\n  }\n}\n\nexport class RenderObject extends TreeNode<RenderObject> {\n  __v_isRenderObject: boolean\n  type: string\n  options: RenderObjectOptions\n  element: CanvasElement\n  viewport: { width: number; height: number } | null\n  layoutBox: LayoutBox | null\n  curves: BoundCurves\n  children: RenderObject[]\n  previousSibling: RenderObject | null\n  nextSibling: RenderObject | null\n  constructor(element, options = {}) {\n    super()\n    this.element = element\n    this.options = options\n  }\n  getContainer() {\n    return this.parentNode\n  }\n  appendChild(child) {\n    console.log(this)\n    this.appendChildNode(child)\n  }\n  flow() {\n    this.layout()\n    this.curves = createBoundCurves(this)\n    this.children.forEach((child) => child.flow())\n  }\n  isRoot() {\n    return this.parentNode === null\n  }\n  measureBoxSize() {}\n  layout() {}\n}\n\nexport const createBaseRenderObject =\n  (element, options = {}) =>\n  (o: TreeNode<RenderObject>): RenderObject => {\n    let renderObject = {\n      ...o,\n      __v_isRenderObject: true,\n      type: null,\n      options,\n      element,\n      get viewport() {\n        let rootElm = element.getRootNode()\n        return rootElm && rootElm.type === 'body' ? rootElm.context.viewport : null\n      },\n      layoutBox: null,\n      curves: null,\n      get children() {\n        return o.children\n      },\n      getContainer,\n      appendChild,\n      measureBoxSize: NOOP,\n      layout: NOOP,\n      flow,\n      reflow,\n      isRoot\n    }\n\n    console.log(o)\n\n    Object.setPrototypeOf(renderObject, o)\n\n    function appendChild(this: RenderObject, child: RenderObject) {\n      console.log(this)\n      this.appendChildNode(child)\n    }\n\n    return renderObject\n  }\n\nfunction getContainer(this: RenderObject) {\n  return this.parentNode\n}\n\nfunction flow(this: RenderObject) {\n  this.layout()\n  this.curves = createBoundCurves(this)\n  this.children.forEach((child) => child.flow())\n}\n\nfunction reflow() {}\n\nfunction isRoot(this: RenderObject) {\n  return this.parentNode === null\n}\n","import {\n  DimensionToken,\n  FLAG_INTEGER,\n  NumberValueToken,\n  TokenType\n} from '../syntax/tokenizer'\nimport { CSSValue, isDimensionToken } from '../syntax/parser'\nimport { isLength } from './length'\nexport type LengthPercentage = DimensionToken | NumberValueToken\nexport type LengthPercentageTuple =\n  | [LengthPercentage]\n  | [LengthPercentage, LengthPercentage]\n\nexport const isLengthPercentage = (\n  token: CSSValue\n): token is LengthPercentage =>\n  token.type === TokenType.PERCENTAGE_TOKEN || isLength(token)\nexport const parseLengthPercentageTuple = (\n  tokens: LengthPercentage[]\n): LengthPercentageTuple =>\n  tokens.length > 1 ? [tokens[0], tokens[1]] : [tokens[0]]\nexport const ZERO_LENGTH: NumberValueToken = {\n  type: TokenType.NUMBER_TOKEN,\n  number: 0,\n  flags: FLAG_INTEGER\n}\n\nexport const FIFTY_PERCENT: NumberValueToken = {\n  type: TokenType.PERCENTAGE_TOKEN,\n  number: 50,\n  flags: FLAG_INTEGER\n}\n\nexport const HUNDRED_PERCENT: NumberValueToken = {\n  type: TokenType.PERCENTAGE_TOKEN,\n  number: 100,\n  flags: FLAG_INTEGER\n}\n\nexport const getAbsoluteValueForTuple = (\n  tuple: LengthPercentageTuple,\n  width: number,\n  height: number\n): [number, number] => {\n  return [0, 0]\n  const [x, y] = tuple\n  return [\n    getAbsoluteValue(x, width),\n    getAbsoluteValue(typeof y !== 'undefined' ? y : x, height)\n  ]\n}\nexport const getAbsoluteValue = (\n  token: LengthPercentage,\n  parent: number\n): number => {\n  return 0\n  if (token.type === TokenType.PERCENTAGE_TOKEN) {\n    return (token.number / 100) * parent\n  }\n\n  if (isDimensionToken(token)) {\n    switch (token.unit) {\n      case 'rem':\n      case 'em':\n        return 16 * token.number // TODO use correct font-size\n      case 'px':\n      default:\n        return token.number\n    }\n  }\n\n  return token.number\n}\n","const BODY_STYLES = {\n  accentColor: 'rgb(94, 158, 255)',\n  additiveSymbols: '',\n  alignContent: 'normal',\n  alignItems: 'normal',\n  alignSelf: 'auto',\n  alignmentBaseline: 'auto',\n  all: '',\n  animation: 'none 0s ease 0s 1 normal none running',\n  animationComposition: 'replace',\n  animationDelay: '0s',\n  animationDirection: 'normal',\n  animationDuration: '0s',\n  animationFillMode: 'none',\n  animationIterationCount: '1',\n  animationName: 'none',\n  animationPlayState: 'running',\n  animationTimingFunction: 'ease',\n  appRegion: 'none',\n  appearance: 'none',\n  ascentOverride: '',\n  aspectRatio: 'auto',\n  backdropFilter: 'none',\n  backfaceVisibility: 'visible',\n  background:\n    'rgba(0, 0, 0, 0) none repeat scroll 0% 0% / auto padding-box border-box',\n  backgroundAttachment: 'scroll',\n  backgroundBlendMode: 'normal',\n  backgroundClip: 'border-box',\n  backgroundColor: 'rgba(0, 0, 0, 0)',\n  backgroundImage: 'none',\n  backgroundOrigin: 'padding-box',\n  backgroundPosition: '0% 0%',\n  backgroundPositionX: '0%',\n  backgroundPositionY: '0%',\n  backgroundRepeat: 'repeat',\n  backgroundRepeatX: 'repeat',\n  backgroundRepeatY: 'repeat',\n  backgroundSize: 'auto',\n  basePalette: '',\n  baselineShift: '0',\n  baselineSource: 'auto',\n  blockSize: '8066.71',\n  border: '0 none rgb(255, 255, 255)',\n  borderBlock: '0 none rgb(255, 255, 255)',\n  borderBlockColor: 'rgb(255, 255, 255)',\n  borderBlockEnd: '0 none rgb(255, 255, 255)',\n  borderBlockEndColor: 'rgb(255, 255, 255)',\n  borderBlockEndStyle: 'none',\n  borderBlockEndWidth: '0',\n  borderBlockStart: '0 none rgb(255, 255, 255)',\n  borderBlockStartColor: 'rgb(255, 255, 255)',\n  borderBlockStartStyle: 'none',\n  borderBlockStartWidth: '0',\n  borderBlockStyle: 'none',\n  borderBlockWidth: '0',\n  borderBottom: '0 none rgb(255, 255, 255)',\n  borderBottomColor: 'rgb(255, 255, 255)',\n  borderBottomLeftRadius: '0',\n  borderBottomRightRadius: '0',\n  borderBottomStyle: 'none',\n  borderBottomWidth: '0',\n  borderCollapse: 'separate',\n  borderColor: 'rgb(255, 255, 255)',\n  borderEndEndRadius: '0',\n  borderEndStartRadius: '0',\n  borderImage: 'none',\n  borderImageOutset: '0',\n  borderImageRepeat: 'stretch',\n  borderImageSlice: '100%',\n  borderImageSource: 'none',\n  borderImageWidth: '1',\n  borderInline: '0 none rgb(255, 255, 255)',\n  borderInlineColor: 'rgb(255, 255, 255)',\n  borderInlineEnd: '0 none rgb(255, 255, 255)',\n  borderInlineEndColor: 'rgb(255, 255, 255)',\n  borderInlineEndStyle: 'none',\n  borderInlineEndWidth: '0',\n  borderInlineStart: '0 none rgb(255, 255, 255)',\n  borderInlineStartColor: 'rgb(255, 255, 255)',\n  borderInlineStartStyle: 'none',\n  borderInlineStartWidth: '0',\n  borderInlineStyle: 'none',\n  borderInlineWidth: '0',\n  borderLeft: '0 none rgb(255, 255, 255)',\n  borderLeftColor: 'rgb(255, 255, 255)',\n  borderLeftStyle: 'none',\n  borderLeftWidth: '0',\n  borderRadius: '0',\n  borderRight: '0 none rgb(255, 255, 255)',\n  borderRightColor: 'rgb(255, 255, 255)',\n  borderRightStyle: 'none',\n  borderRightWidth: '0',\n  borderSpacing: '0 0',\n  borderStartEndRadius: '0',\n  borderStartStartRadius: '0',\n  borderStyle: 'none',\n  borderTop: '0 none rgb(255, 255, 255)',\n  borderTopColor: 'rgb(255, 255, 255)',\n  borderTopLeftRadius: '0',\n  borderTopRightRadius: '0',\n  borderTopStyle: 'none',\n  borderTopWidth: '0',\n  borderWidth: '0',\n  bottom: 'auto',\n  boxShadow: 'none',\n  boxSizing: 'content-box',\n  breakAfter: 'auto',\n  breakBefore: 'auto',\n  breakInside: 'auto',\n  bufferedRendering: 'auto',\n  captionSide: 'top',\n  caretColor: 'rgb(255, 255, 255)',\n  clear: 'none',\n  clip: 'auto',\n  clipPath: 'none',\n  clipRule: 'nonzero',\n  color: 'rgb(255, 255, 255)',\n  colorInterpolation: 'srgb',\n  colorInterpolationFilters: 'linearrgb',\n  colorRendering: 'auto',\n  colorScheme: 'dark',\n  columnCount: 'auto',\n  columnFill: 'balance',\n  columnGap: 'normal',\n  columnRule: '0 none rgb(255, 255, 255)',\n  columnRuleColor: 'rgb(255, 255, 255)',\n  columnRuleStyle: 'none',\n  columnRuleWidth: '0',\n  columnSpan: 'none',\n  columnWidth: 'auto',\n  columns: 'auto auto',\n  contain: 'none',\n  containIntrinsicBlockSize: 'none',\n  containIntrinsicHeight: 'none',\n  containIntrinsicInlineSize: 'none',\n  containIntrinsicSize: 'none',\n  containIntrinsicWidth: 'none',\n  container: 'none',\n  containerName: 'none',\n  containerType: 'normal',\n  content: 'normal',\n  contentVisibility: 'visible',\n  counterIncrement: 'none',\n  counterReset: 'none',\n  counterSet: 'none',\n  cursor: 'auto',\n  cx: '0',\n  cy: '0',\n  d: 'none',\n  descentOverride: '',\n  direction: 'ltr',\n  display: 'block',\n  dominantBaseline: 'auto',\n  emptyCells: 'show',\n  fallback: '',\n  fill: 'rgb(0, 0, 0)',\n  fillOpacity: '1',\n  fillRule: 'nonzero',\n  filter: 'none',\n  flex: '0 1 auto',\n  flexBasis: 'auto',\n  flexDirection: 'row',\n  flexFlow: 'row nowrap',\n  flexGrow: '0',\n  flexShrink: '1',\n  flexWrap: 'nowrap',\n  float: 'none',\n  floodColor: 'rgb(0, 0, 0)',\n  floodOpacity: '1',\n  font: '20 / 35 Inter, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif',\n  fontDisplay: '',\n  fontFamily:\n    'Inter, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif',\n  fontFeatureSettings: 'normal',\n  fontKerning: 'auto',\n  fontOpticalSizing: 'auto',\n  fontPalette: 'normal',\n  fontSize: '20',\n  fontStretch: '100%',\n  fontStyle: 'normal',\n  fontSynthesis: 'weight style small-caps',\n  fontSynthesisSmallCaps: 'auto',\n  fontSynthesisStyle: 'auto',\n  fontSynthesisWeight: 'auto',\n  fontVariant: 'normal',\n  fontVariantAlternates: 'normal',\n  fontVariantCaps: 'normal',\n  fontVariantEastAsian: 'normal',\n  fontVariantLigatures: 'normal',\n  fontVariantNumeric: 'normal',\n  fontVariationSettings: 'normal',\n  fontWeight: '400',\n  forcedColorAdjust: 'auto',\n  gap: 'normal',\n  grid: 'none / none / none / row / auto / auto',\n  gridArea: 'auto / auto / auto / auto',\n  gridAutoColumns: 'auto',\n  gridAutoFlow: 'row',\n  gridAutoRows: 'auto',\n  gridColumn: 'auto / auto',\n  gridColumnEnd: 'auto',\n  gridColumnGap: 'normal',\n  gridColumnStart: 'auto',\n  gridGap: 'normal normal',\n  gridRow: 'auto / auto',\n  gridRowEnd: 'auto',\n  gridRowGap: 'normal',\n  gridRowStart: 'auto',\n  gridTemplate: 'none / none / none',\n  gridTemplateAreas: 'none',\n  gridTemplateColumns: 'none',\n  gridTemplateRows: 'none',\n  height: '100%',\n  hyphenateCharacter: 'auto',\n  hyphenateLimitChars: 'auto',\n  hyphens: 'manual',\n  imageOrientation: 'from-image',\n  imageRendering: 'auto',\n  inherits: '',\n  initialLetter: 'normal',\n  initialValue: '',\n  inlineSize: '484',\n  inset: 'auto',\n  insetBlock: 'auto',\n  insetBlockEnd: 'auto',\n  insetBlockStart: 'auto',\n  insetInline: 'auto',\n  insetInlineEnd: 'auto',\n  insetInlineStart: 'auto',\n  isolation: 'auto',\n  justifyContent: 'normal',\n  justifyItems: 'normal',\n  justifySelf: 'auto',\n  left: 'auto',\n  letterSpacing: 'normal',\n  lightingColor: 'rgb(255, 255, 255)',\n  lineBreak: 'auto',\n  lineGapOverride: '',\n  lineHeight: '35',\n  listStyle: 'outside none disc',\n  listStyleImage: 'none',\n  listStylePosition: 'outside',\n  listStyleType: 'disc',\n  margin: '0',\n  marginBlock: '0',\n  marginBlockEnd: '0',\n  marginBlockStart: '0',\n  marginBottom: '0',\n  marginInline: '0',\n  marginInlineEnd: '0',\n  marginInlineStart: '0',\n  marginLeft: '0',\n  marginRight: '0',\n  marginTop: '0',\n  marker: 'none',\n  markerEnd: 'none',\n  markerMid: 'none',\n  markerStart: 'none',\n  mask: 'none',\n  maskType: 'luminance',\n  mathDepth: '0',\n  mathShift: 'normal',\n  mathStyle: 'normal',\n  maxBlockSize: 'none',\n  maxHeight: 'none',\n  maxInlineSize: 'none',\n  maxWidth: 'none',\n  minBlockSize: '0',\n  minHeight: '0',\n  minInlineSize: '0',\n  minWidth: '0',\n  mixBlendMode: 'normal',\n  negative: '',\n  objectFit: 'fill',\n  objectPosition: '50% 50%',\n  objectViewBox: 'none',\n  offset: 'none 0 auto 0deg',\n  offsetDistance: '0',\n  offsetPath: 'none',\n  offsetRotate: 'auto 0deg',\n  opacity: '1',\n  order: '0',\n  orphans: '2',\n  outline: 'rgb(255, 255, 255) none 0',\n  outlineColor: 'rgb(255, 255, 255)',\n  outlineOffset: '0',\n  outlineStyle: 'none',\n  outlineWidth: '0',\n  overflow: 'visible',\n  overflowAnchor: 'auto',\n  overflowClipMargin: '0',\n  overflowWrap: 'normal',\n  overflowX: 'visible',\n  overflowY: 'visible',\n  overrideColors: '',\n  overscrollBehavior: 'auto',\n  overscrollBehaviorBlock: 'auto',\n  overscrollBehaviorInline: 'auto',\n  overscrollBehaviorX: 'auto',\n  overscrollBehaviorY: 'auto',\n  pad: '',\n  padding: '0',\n  paddingBlock: '0',\n  paddingBlockEnd: '0',\n  paddingBlockStart: '0',\n  paddingBottom: '0',\n  paddingInline: '0',\n  paddingInlineEnd: '0',\n  paddingInlineStart: '0',\n  paddingLeft: '0',\n  paddingRight: '0',\n  paddingTop: '0',\n  page: 'auto',\n  pageBreakAfter: 'auto',\n  pageBreakBefore: 'auto',\n  pageBreakInside: 'auto',\n  pageOrientation: '',\n  paintOrder: 'normal',\n  perspective: 'none',\n  perspectiveOrigin: '242 4033.36',\n  placeContent: 'normal',\n  placeItems: 'normal',\n  placeSelf: 'auto',\n  pointerEvents: 'auto',\n  position: 'static',\n  prefix: '',\n  quotes: 'auto',\n  r: '0',\n  range: '',\n  resize: 'none',\n  right: 'auto',\n  rotate: 'none',\n  rowGap: 'normal',\n  rubyPosition: 'over',\n  rx: 'auto',\n  ry: 'auto',\n  scale: 'none',\n  scrollBehavior: 'auto',\n  scrollMargin: '0',\n  scrollMarginBlock: '0',\n  scrollMarginBlockEnd: '0',\n  scrollMarginBlockStart: '0',\n  scrollMarginBottom: '0',\n  scrollMarginInline: '0',\n  scrollMarginInlineEnd: '0',\n  scrollMarginInlineStart: '0',\n  scrollMarginLeft: '0',\n  scrollMarginRight: '0',\n  scrollMarginTop: '0',\n  scrollPadding: 'auto',\n  scrollPaddingBlock: 'auto',\n  scrollPaddingBlockEnd: 'auto',\n  scrollPaddingBlockStart: 'auto',\n  scrollPaddingBottom: 'auto',\n  scrollPaddingInline: 'auto',\n  scrollPaddingInlineEnd: 'auto',\n  scrollPaddingInlineStart: 'auto',\n  scrollPaddingLeft: 'auto',\n  scrollPaddingRight: 'auto',\n  scrollPaddingTop: 'auto',\n  scrollSnapAlign: 'none',\n  scrollSnapStop: 'normal',\n  scrollSnapType: 'none',\n  scrollbarGutter: 'auto',\n  shapeImageThreshold: '0',\n  shapeMargin: '0',\n  shapeOutside: 'none',\n  shapeRendering: 'auto',\n  size: '',\n  sizeAdjust: '',\n  speak: 'normal',\n  speakAs: '',\n  src: '',\n  stopColor: 'rgb(0, 0, 0)',\n  stopOpacity: '1',\n  stroke: 'none',\n  strokeDasharray: 'none',\n  strokeDashoffset: '0',\n  strokeLinecap: 'butt',\n  strokeLinejoin: 'miter',\n  strokeMiterlimit: '4',\n  strokeOpacity: '1',\n  strokeWidth: '1',\n  suffix: '',\n  symbols: '',\n  syntax: '',\n  system: '',\n  tabSize: '8',\n  tableLayout: 'auto',\n  textAlign: 'start',\n  textAlignLast: 'auto',\n  textAnchor: 'start',\n  textCombineUpright: 'none',\n  textDecoration: 'none solid rgb(255, 255, 255)',\n  textDecorationColor: 'rgb(255, 255, 255)',\n  textDecorationLine: 'none',\n  textDecorationSkipInk: 'auto',\n  textDecorationStyle: 'solid',\n  textDecorationThickness: 'auto',\n  textEmphasis: 'none rgb(255, 255, 255)',\n  textEmphasisColor: 'rgb(255, 255, 255)',\n  textEmphasisPosition: 'over',\n  textEmphasisStyle: 'none',\n  textIndent: '0',\n  textOrientation: 'mixed',\n  textOverflow: 'clip',\n  textRendering: 'optimizespeed',\n  textShadow: 'none',\n  textSizeAdjust: 'auto',\n  textTransform: 'none',\n  textUnderlineOffset: 'auto',\n  textUnderlinePosition: 'auto',\n  top: 'auto',\n  touchAction: 'auto',\n  transform: 'none',\n  transformBox: 'view-box',\n  transformOrigin: '242 4033.36',\n  transformStyle: 'flat',\n  transition: 'all 0s ease 0s',\n  transitionDelay: '0s',\n  transitionDuration: '0s',\n  transitionProperty: 'all',\n  transitionTimingFunction: 'ease',\n  translate: 'none',\n  unicodeBidi: 'normal',\n  unicodeRange: '',\n  userSelect: 'auto',\n  vectorEffect: 'none',\n  verticalAlign: 'baseline',\n  viewTransitionName: 'none',\n  visibility: 'visible',\n  whiteSpace: 'normal',\n  widows: '2',\n  width: '100%',\n  willChange: 'auto',\n  wordBreak: 'normal',\n  wordSpacing: '0',\n  wordWrap: 'normal',\n  writingMode: 'horizontal-tb',\n  x: '0',\n  y: '0',\n  zIndex: 'auto',\n  zoom: '1',\n  cssFloat: 'none',\n  cssText: '',\n  length: 351,\n  parentRule: null\n}\n\nconst DEFAULT_VIEW_STYLES = {\n  display: 'block'\n}\nconst DEFAULT_TEXT_STYLES = {\n  display: 'inline'\n}\n\nconst EXTEND_STYLE_KEYS = [\n  'alignItems',\n  'color',\n  'fontFamily',\n  'fontSize',\n  'fontWeight',\n  'letterSpacing',\n  'lineHeight',\n  'textAlign',\n  'visivility',\n  'wordSpacing'\n]\n\nexport {\n  BODY_STYLES,\n  DEFAULT_VIEW_STYLES,\n  DEFAULT_TEXT_STYLES,\n  EXTEND_STYLE_KEYS\n}\n","import {\n  IPropertyListDescriptor,\n  PropertyDescriptorParsingType\n} from '../IPropertyDescriptor'\nimport { CSSValue, isIdentToken } from '../syntax/parser'\nexport const enum BACKGROUND_CLIP {\n  BORDER_BOX = 0,\n  PADDING_BOX = 1,\n  CONTENT_BOX = 2\n}\n\nexport type BackgroundClip = BACKGROUND_CLIP[]\n\nexport const backgroundClip: IPropertyListDescriptor<BackgroundClip> = {\n  name: 'background-clip',\n  initialValue: 'border-box',\n  prefix: false,\n  type: PropertyDescriptorParsingType.LIST,\n  parse: (tokens: CSSValue[]): BackgroundClip => {\n    return tokens.map((token) => {\n      if (isIdentToken(token)) {\n        switch (token.value) {\n          case 'padding-box':\n            return BACKGROUND_CLIP.PADDING_BOX\n          case 'content-box':\n            return BACKGROUND_CLIP.CONTENT_BOX\n        }\n      }\n      return BACKGROUND_CLIP.BORDER_BOX\n    })\n  }\n}\n","import {\n  IPropertyTypeValueDescriptor,\n  PropertyDescriptorParsingType\n} from '../IPropertyDescriptor'\n\nexport const backgroundColor: IPropertyTypeValueDescriptor = {\n  name: `background-color`,\n  initialValue: 'transparent',\n  prefix: false,\n  type: PropertyDescriptorParsingType.TYPE_VALUE,\n  format: 'color'\n}\n","import {\n  IPropertyTypeValueDescriptor,\n  PropertyDescriptorParsingType\n} from '../IPropertyDescriptor'\n\nconst borderColorForSide = (side: string): IPropertyTypeValueDescriptor => ({\n  name: `border-${side}-color`,\n  initialValue: 'transparent',\n  prefix: false,\n  type: PropertyDescriptorParsingType.TYPE_VALUE,\n  format: 'color'\n})\n\nexport const borderTopColor: IPropertyTypeValueDescriptor =\n  borderColorForSide('top')\nexport const borderRightColor: IPropertyTypeValueDescriptor =\n  borderColorForSide('right')\nexport const borderBottomColor: IPropertyTypeValueDescriptor =\n  borderColorForSide('bottom')\nexport const borderLeftColor: IPropertyTypeValueDescriptor =\n  borderColorForSide('left')\n","import {\n  IPropertyTypeValueDescriptor,\n  PropertyDescriptorParsingType\n} from '../IPropertyDescriptor'\n\nexport const color: IPropertyTypeValueDescriptor = {\n  name: `color`,\n  initialValue: 'transparent',\n  prefix: false,\n  type: PropertyDescriptorParsingType.TYPE_VALUE,\n  format: 'color'\n}\n","import {\n  IPropertyListDescriptor,\n  PropertyDescriptorParsingType\n} from '../IPropertyDescriptor'\nimport { CSSValue, isIdentToken } from '../syntax/parser'\nexport const enum DISPLAY {\n  NONE = 0,\n  BLOCK = 1 << 1,\n  INLINE = 1 << 2,\n  RUN_IN = 1 << 3,\n  FLOW = 1 << 4,\n  FLOW_ROOT = 1 << 5,\n  TABLE = 1 << 6,\n  FLEX = 1 << 7,\n  GRID = 1 << 8,\n  RUBY = 1 << 9,\n  SUBGRID = 1 << 10,\n  LIST_ITEM = 1 << 11,\n  TABLE_ROW_GROUP = 1 << 12,\n  TABLE_HEADER_GROUP = 1 << 13,\n  TABLE_FOOTER_GROUP = 1 << 14,\n  TABLE_ROW = 1 << 15,\n  TABLE_CELL = 1 << 16,\n  TABLE_COLUMN_GROUP = 1 << 17,\n  TABLE_COLUMN = 1 << 18,\n  TABLE_CAPTION = 1 << 19,\n  RUBY_BASE = 1 << 20,\n  RUBY_TEXT = 1 << 21,\n  RUBY_BASE_CONTAINER = 1 << 22,\n  RUBY_TEXT_CONTAINER = 1 << 23,\n  CONTENTS = 1 << 24,\n  INLINE_BLOCK = 1 << 25,\n  INLINE_LIST_ITEM = 1 << 26,\n  INLINE_TABLE = 1 << 27,\n  INLINE_FLEX = 1 << 28,\n  INLINE_GRID = 1 << 29\n}\n\nexport type Display = number\n\nexport const display: IPropertyListDescriptor<Display> = {\n  name: 'display',\n  initialValue: (type) => {\n    switch (type) {\n      case 'text':\n        return 'inline'\n      default:\n        return 'block'\n    }\n  },\n  prefix: false,\n  type: PropertyDescriptorParsingType.LIST,\n  parse: (tokens: CSSValue[]): Display => {\n    return tokens.filter(isIdentToken).reduce((bit, token) => {\n      return bit | parseDisplayValue(token.value)\n    }, DISPLAY.NONE)\n  }\n}\n\nconst parseDisplayValue = (display: string): Display => {\n  switch (display) {\n    case 'block':\n    case '-webkit-box':\n      return DISPLAY.BLOCK\n    case 'inline':\n      return DISPLAY.INLINE\n    case 'run-in':\n      return DISPLAY.RUN_IN\n    case 'flow':\n      return DISPLAY.FLOW\n    case 'flow-root':\n      return DISPLAY.FLOW_ROOT\n    case 'table':\n      return DISPLAY.TABLE\n    case 'flex':\n    case '-webkit-flex':\n      return DISPLAY.FLEX\n    case 'grid':\n    case '-ms-grid':\n      return DISPLAY.GRID\n    case 'ruby':\n      return DISPLAY.RUBY\n    case 'subgrid':\n      return DISPLAY.SUBGRID\n    case 'list-item':\n      return DISPLAY.LIST_ITEM\n    case 'table-row-group':\n      return DISPLAY.TABLE_ROW_GROUP\n    case 'table-header-group':\n      return DISPLAY.TABLE_HEADER_GROUP\n    case 'table-footer-group':\n      return DISPLAY.TABLE_FOOTER_GROUP\n    case 'table-row':\n      return DISPLAY.TABLE_ROW\n    case 'table-cell':\n      return DISPLAY.TABLE_CELL\n    case 'table-column-group':\n      return DISPLAY.TABLE_COLUMN_GROUP\n    case 'table-column':\n      return DISPLAY.TABLE_COLUMN\n    case 'table-caption':\n      return DISPLAY.TABLE_CAPTION\n    case 'ruby-base':\n      return DISPLAY.RUBY_BASE\n    case 'ruby-text':\n      return DISPLAY.RUBY_TEXT\n    case 'ruby-base-container':\n      return DISPLAY.RUBY_BASE_CONTAINER\n    case 'ruby-text-container':\n      return DISPLAY.RUBY_TEXT_CONTAINER\n    case 'contents':\n      return DISPLAY.CONTENTS\n    case 'inline-block':\n      return DISPLAY.INLINE_BLOCK\n    case 'inline-list-item':\n      return DISPLAY.INLINE_LIST_ITEM\n    case 'inline-table':\n      return DISPLAY.INLINE_TABLE\n    case 'inline-flex':\n      return DISPLAY.INLINE_FLEX\n    case 'inline-grid':\n      return DISPLAY.INLINE_GRID\n  }\n\n  return DISPLAY.NONE\n}\n","import {\n  IPropertyTypeValueDescriptor,\n  PropertyDescriptorParsingType\n} from '../IPropertyDescriptor'\n\nexport const fontSize: IPropertyTypeValueDescriptor = {\n  name: `font-size`,\n  initialValue: '12',\n  prefix: false,\n  type: PropertyDescriptorParsingType.TYPE_VALUE,\n  format: 'length'\n}\n","import {\n  IPropertyValueDescriptor,\n  PropertyDescriptorParsingType\n} from '../IPropertyDescriptor'\nimport { CSSValue, isIdentToken, isNumberToken } from '../syntax/parser'\nexport const fontWeight: IPropertyValueDescriptor<number> = {\n  name: 'font-weight',\n  initialValue: 'normal',\n  type: PropertyDescriptorParsingType.VALUE,\n  prefix: false,\n  parse: (token: CSSValue): number => {\n    if (isNumberToken(token)) {\n      return token.number\n    }\n\n    if (isIdentToken(token)) {\n      switch (token.value) {\n        case 'bold':\n          return 700\n        case 'normal':\n        default:\n          return 400\n      }\n    }\n\n    return 400\n  }\n}\n","import {\n  IPropertyTokenValueDescriptor,\n  PropertyDescriptorParsingType\n} from '../IPropertyDescriptor'\n\nexport const height: IPropertyTokenValueDescriptor = {\n  name: 'height',\n  initialValue: 'auto',\n  prefix: false,\n  type: PropertyDescriptorParsingType.TOKEN_VALUE\n}\n","import {\n  IPropertyTokenValueDescriptor,\n  PropertyDescriptorParsingType\n} from '../IPropertyDescriptor'\nimport { CSSValue, isIdentToken } from '../syntax/parser'\nimport { TokenType } from '../syntax/tokenizer'\nimport {\n  getAbsoluteValue,\n  isLengthPercentage\n} from '../types/length-percentage'\nexport const lineHeight: IPropertyTokenValueDescriptor = {\n  name: 'line-height',\n  initialValue: 'normal',\n  prefix: false,\n  type: PropertyDescriptorParsingType.TOKEN_VALUE\n}\n\nexport const computeLineHeight = (\n  token: CSSValue,\n  fontSize: number\n): number => {\n  if (isIdentToken(token) && token.value === 'normal') {\n    return 1.2 * fontSize\n  } else if (token.type === TokenType.NUMBER_TOKEN) {\n    return fontSize * token.number\n  } else if (isLengthPercentage(token)) {\n    return getAbsoluteValue(token, fontSize)\n  }\n\n  return fontSize\n}\n","import {\n  IPropertyTokenValueDescriptor,\n  PropertyDescriptorParsingType\n} from '../IPropertyDescriptor'\n\nconst marginForSide = (side: string): IPropertyTokenValueDescriptor => ({\n  name: `margin-${side}`,\n  initialValue: '0',\n  prefix: false,\n  type: PropertyDescriptorParsingType.TOKEN_VALUE\n})\n\nexport const marginTop: IPropertyTokenValueDescriptor = marginForSide('top')\nexport const marginRight: IPropertyTokenValueDescriptor = marginForSide('right')\nexport const marginBottom: IPropertyTokenValueDescriptor =\n  marginForSide('bottom')\nexport const marginLeft: IPropertyTokenValueDescriptor = marginForSide('left')\n","import {\n  IPropertyValueDescriptor,\n  PropertyDescriptorParsingType\n} from '../IPropertyDescriptor'\nimport { CSSValue, isNumberToken } from '../syntax/parser'\nexport const opacity: IPropertyValueDescriptor<number> = {\n  name: 'opacity',\n  initialValue: '1',\n  type: PropertyDescriptorParsingType.VALUE,\n  prefix: false,\n  parse: (token: CSSValue): number => {\n    if (isNumberToken(token)) {\n      return token.number\n    }\n    return 1\n  }\n}\n","import {\n  IPropertyTypeValueDescriptor,\n  PropertyDescriptorParsingType\n} from '../IPropertyDescriptor'\n\nconst paddingForSide = (side: string): IPropertyTypeValueDescriptor => ({\n  name: `padding-${side}`,\n  initialValue: '0',\n  prefix: false,\n  type: PropertyDescriptorParsingType.TYPE_VALUE,\n  format: 'length-percentage'\n})\n\nexport const paddingTop: IPropertyTypeValueDescriptor = paddingForSide('top')\nexport const paddingRight: IPropertyTypeValueDescriptor =\n  paddingForSide('right')\nexport const paddingBottom: IPropertyTypeValueDescriptor =\n  paddingForSide('bottom')\nexport const paddingLeft: IPropertyTypeValueDescriptor = paddingForSide('left')\n","import {\n  IPropertyIdentValueDescriptor,\n  PropertyDescriptorParsingType\n} from '../IPropertyDescriptor'\nexport const enum TEXT_ALIGN {\n  LEFT = 0,\n  CENTER = 1,\n  RIGHT = 2\n}\n\nexport const textAlign: IPropertyIdentValueDescriptor<TEXT_ALIGN> = {\n  name: 'text-align',\n  initialValue: 'left',\n  prefix: false,\n  type: PropertyDescriptorParsingType.IDENT_VALUE,\n  parse: (textAlign: string) => {\n    switch (textAlign) {\n      case 'right':\n        return TEXT_ALIGN.RIGHT\n      case 'center':\n      case 'justify':\n        return TEXT_ALIGN.CENTER\n      case 'left':\n      default:\n        return TEXT_ALIGN.LEFT\n    }\n  }\n}\n","import {\n  IPropertyValueDescriptor,\n  PropertyDescriptorParsingType\n} from '../IPropertyDescriptor'\nimport { CSSValue } from '../syntax/parser'\nimport { NumberValueToken, TokenType } from '../syntax/tokenizer'\nexport type Matrix = [number, number, number, number, number, number]\nexport type Transform = Matrix | null\n\nexport const transform: IPropertyValueDescriptor<Transform> = {\n  name: 'transform',\n  initialValue: 'none',\n  prefix: true,\n  type: PropertyDescriptorParsingType.VALUE,\n  parse: (token: CSSValue) => {\n    if (token.type === TokenType.IDENT_TOKEN && token.value === 'none') {\n      return null\n    }\n\n    if (token.type === TokenType.FUNCTION) {\n      const transformFunction = SUPPORTED_TRANSFORM_FUNCTIONS[token.name]\n      if (typeof transformFunction === 'undefined') {\n        throw new Error(\n          `Attempting to parse an unsupported transform function \"${token.name}\"`\n        )\n      }\n      return transformFunction(token.values)\n    }\n\n    return null\n  }\n}\n\nconst matrix = (args: CSSValue[]): Transform => {\n  const values = args\n    .filter((arg) => arg.type === TokenType.NUMBER_TOKEN)\n    .map((arg: NumberValueToken) => arg.number)\n\n  return values.length === 6 ? (values as Matrix) : null\n}\n\n// doesn't support 3D transforms at the moment\nconst matrix3d = (args: CSSValue[]): Transform => {\n  const values = args\n    .filter((arg) => arg.type === TokenType.NUMBER_TOKEN)\n    .map((arg: NumberValueToken) => arg.number)\n\n  const [a1, b1, {}, {}, a2, b2, {}, {}, {}, {}, {}, {}, a4, b4, {}, {}] =\n    values\n\n  return values.length === 16 ? [a1, b1, a2, b2, a4, b4] : null\n}\n\nconst SUPPORTED_TRANSFORM_FUNCTIONS: {\n  [key: string]: (args: CSSValue[]) => Transform\n} = {\n  matrix: matrix,\n  matrix3d: matrix3d\n}\n","import {\n  IPropertyIdentValueDescriptor,\n  PropertyDescriptorParsingType\n} from '../IPropertyDescriptor'\n\nexport const enum VISIBILITY {\n  VISIBLE = 0,\n  HIDDEN = 1,\n  COLLAPSE = 2\n}\n\nexport const visibility: IPropertyIdentValueDescriptor<VISIBILITY> = {\n  name: 'visible',\n  initialValue: 'none',\n  prefix: false,\n  type: PropertyDescriptorParsingType.IDENT_VALUE,\n  parse: (visibility: string) => {\n    switch (visibility) {\n      case 'hidden':\n        return VISIBILITY.HIDDEN\n      case 'collapse':\n        return VISIBILITY.COLLAPSE\n      case 'visible':\n      default:\n        return VISIBILITY.VISIBLE\n    }\n  }\n}\n","import {\n  IPropertyTokenValueDescriptor,\n  PropertyDescriptorParsingType\n} from '../IPropertyDescriptor'\n\nexport const width: IPropertyTokenValueDescriptor = {\n  name: 'width',\n  initialValue: 'auto',\n  prefix: false,\n  type: PropertyDescriptorParsingType.TOKEN_VALUE\n}\n","import {\n  IPropertyValueDescriptor,\n  PropertyDescriptorParsingType\n} from '../IPropertyDescriptor'\nimport { CSSValue, isNumberToken } from '../syntax/parser'\nimport { TokenType } from '../syntax/tokenizer'\n\ninterface zIndex {\n  order: number\n  auto: boolean\n}\n\nexport const zIndex: IPropertyValueDescriptor<zIndex> = {\n  name: 'z-index',\n  initialValue: 'auto',\n  prefix: false,\n  type: PropertyDescriptorParsingType.VALUE,\n  parse: (token: CSSValue): zIndex => {\n    if (token.type === TokenType.IDENT_TOKEN) {\n      return { auto: true, order: 0 }\n    }\n\n    if (isNumberToken(token)) {\n      return { auto: false, order: token.number }\n    }\n\n    throw new Error(`Invalid z-index number parsed`)\n  }\n}\n","import { CSSPropertyDescriptor } from './IPropertyDescriptor'\nimport { DEFAULT_TEXT_STYLES, DEFAULT_VIEW_STYLES } from './constant'\nimport { backgroundClip } from './property-descriptors/background-clip'\nimport { backgroundColor } from './property-descriptors/background-color'\nimport {\n  borderBottomColor,\n  borderLeftColor,\n  borderRightColor,\n  borderTopColor\n} from './property-descriptors/border-color'\nimport {\n  borderBottomLeftRadius,\n  borderBottomRightRadius,\n  borderTopLeftRadius,\n  borderTopRightRadius\n} from './property-descriptors/border-radius'\nimport {\n  borderBottomWidth,\n  borderLeftWidth,\n  borderRightWidth,\n  borderTopWidth\n} from './property-descriptors/border-width'\nimport { color } from './property-descriptors/color'\nimport { display } from './property-descriptors/display'\nimport { fontSize } from './property-descriptors/font-size'\nimport { fontWeight } from './property-descriptors/font-weight'\nimport { height } from './property-descriptors/height'\nimport { lineHeight } from './property-descriptors/line-height'\nimport {\n  marginBottom,\n  marginLeft,\n  marginRight,\n  marginTop\n} from './property-descriptors/margin'\nimport { opacity } from './property-descriptors/opacity'\nimport {\n  paddingBottom,\n  paddingLeft,\n  paddingRight,\n  paddingTop\n} from './property-descriptors/padding'\nimport { textAlign } from './property-descriptors/text-align'\nimport { transform } from './property-descriptors/transform'\nimport { visibility } from './property-descriptors/visibility'\nimport { width } from './property-descriptors/width'\nimport { zIndex } from './property-descriptors/z-index'\n\nexport function createCSSDeclaration(type, styles) {\n  const DEFAULT_STYLES = getDefaultStyle(type)\n  return {\n    ...DEFAULT_STYLES,\n    backgroundClip: parse(type, backgroundClip, styles.backgroundClip),\n    backgroundColor: parse(type, backgroundColor, styles.backgroundColor),\n    borderTopColor: parse(type, borderTopColor, styles.borderTopColor),\n    borderRightColor: parse(type, borderRightColor, styles.borderRightColor),\n    borderBottomColor: parse(type, borderBottomColor, styles.borderBottomColor),\n    borderLeftColor: parse(type, borderLeftColor, styles.borderLeftColor),\n    // borderTopLeftRadius: parse(\n    //   type,\n    //   borderTopLeftRadius,\n    //   styles.borderTopLeftRadius\n    // ),\n    // borderTopRightRadius: parse(\n    //   type,\n    //   borderTopRightRadius,\n    //   styles.borderTopRightRadius\n    // ),\n    // borderBottomRightRadius: parse(\n    //   type,\n    //   borderBottomRightRadius,\n    //   styles.borderBottomRightRadius\n    // ),\n    // borderBottomLeftRadius: parse(\n    //   type,\n    //   borderBottomLeftRadius,\n    //   styles.borderBottomLeftRadius\n    // ),\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: 0,\n    borderBottomLeftRadius: 0,\n    // borderTopStyle: parse(type,borderTopStyle, styles.borderTopStyle),\n    // borderRightStyle: parse(type,borderRightStyle, styles.borderRightStyle),\n    // borderBottomStyle: parse(type,borderBottomStyle, styles.borderBottomStyle),\n    // borderLeftStyle: parse(type,borderLeftStyle, styles.borderLeftStyle),\n    // borderTopWidth: parse(type, borderTopWidth, styles.borderTopWidth),\n    // borderRightWidth: parse(type, borderRightWidth, styles.borderRightWidth),\n    // borderBottomWidth: parse(type, borderBottomWidth, styles.borderBottomWidth),\n    // borderLeftWidth: parse(type, borderLeftWidth, styles.borderLeftWidth),\n    borderTopWidth: 0,\n    borderRightWidth: 0,\n    borderBottomWidth: 0,\n    borderLeftWidth: 0,\n    // boxShadow: parse(type,boxShadow, styles.boxShadow),\n    color: parse(type, color, styles.color),\n    // direction: parse(type,direction, styles.direction),\n    display: parse(type, display, styles.display),\n    // float: parse(float, styles.cssFloat),\n    // fontFamily: parse(fontFamily, styles.fontFamily),\n    fontSize: Number(parse(type, fontSize, styles.fontSize)),\n    // fontStyle: parse(type,fontStyle, styles.fontStyle),\n    // fontVariant: parse(type,fontVariant, styles.fontVariant),\n    fontWeight: parse(type, fontWeight, styles.fontWeight),\n    height: parse(type, height, styles.height),\n    // letterSpacing: parse(type,letterSpacing, styles.letterSpacing),\n    // lineBreak: parse(type,lineBreak, styles.lineBreak),\n    lineHeight: parse(type, lineHeight, styles.lineHeight),\n    // listStyleImage: parse(type,listStyleImage, styles.listStyleImage),\n    // listStylePosition: parse(type,listStylePosition, styles.listStylePosition),\n    // listStyleType: parse(type,listStyleType, styles.listStyleType),\n    marginTop: Number(parse(type, marginTop, styles.marginTop)),\n    marginRight: Number(parse(type, marginRight, styles.marginRight)),\n    marginBottom: Number(parse(type, marginBottom, styles.marginBottom)),\n    marginLeft: Number(parse(type, marginLeft, styles.marginLeft)),\n    opacity: parse(type, opacity, styles.opacity),\n    // const overflowTuple: parse(type,overflow, styles.overflow),\n    // overflowX: overflowTuple[0],\n    // overflowY: overflowTuple[overflowTuple.length > 1 ? 1 : 0],\n    // overflowWrap: parse(type,overflowWrap, styles.overflowWrap),\n    paddingTop: Number(parse(type, paddingTop, styles.paddingTop)),\n    paddingRight: Number(parse(type, paddingRight, styles.paddingRight)),\n    paddingBottom: Number(parse(type, paddingBottom, styles.paddingBottom)),\n    paddingLeft: Number(parse(type, paddingLeft, styles.paddingLeft)),\n    // paintOrder: parse(type,paintOrder, styles.paintOrder),\n    // position: parse(type,position, styles.position),\n    textAlign: parse(type, textAlign, styles.textAlign),\n    // textDecorationColor: parse(type,\n    //     context,\n    //     textDecorationColor,\n    //     styles.textDecorationColor ?? styles.color\n    // ),\n    // textDecorationLine: parse(type,\n    //     context,\n    //     textDecorationLine,\n    //     styles.textDecorationLine ?? styles.textDecoration\n    // ),\n    // textShadow: parse(type,textShadow, styles.textShadow),\n    // textTransform: parse(type,textTransform, styles.textTransform),\n    transform: parse(type, transform, styles.transform),\n    // transformOrigin: parse(type,transformOrigin, styles.transformOrigin),\n    visibility: parse(type, visibility, styles.visibility),\n    // webkitTextStrokeColor: parse(type,webkitTextStrokeColor, styles.webkitTextStrokeColor),\n    // webkitTextStrokeWidth: parse(type,webkitTextStrokeWidth, styles.webkitTextStrokeWidth),\n    width: parse(type, width, styles.width),\n    // wordBreak: parse(type,wordBreak, styles.wordBreak),\n    zIndex: parse(type, zIndex, styles.zIndex)\n  }\n}\n\nconst parse = (\n  // TODO: enum type\n  type: string,\n  descriptor: CSSPropertyDescriptor<any>,\n  style?: string | null\n) => {\n  const value =\n    style !== null && typeof style !== 'undefined'\n      ? style.toString()\n      : typeof descriptor.initialValue === 'string'\n      ? descriptor.initialValue\n      : descriptor.initialValue(type)\n\n  // TODO: finish tokenizer\n  return value\n}\n\nfunction getDefaultStyle(type) {\n  switch (type) {\n    case 'text':\n      return DEFAULT_TEXT_STYLES\n    default:\n      return DEFAULT_VIEW_STYLES\n  }\n}\n","import { RenderObject } from '../render/renderObject'\nimport { TreeNode } from '../tree-node/index'\nimport { CanvasElement, ComputedStyles, _initRenderObject } from './element'\n\nexport type CreateTextNodeFn = (text: string) => CanvasTextNode\n\nexport const createTextNodeAPI = (): CreateTextNodeFn => (text: string) => new CanvasTextNode(text)\n\nexport function isCanvasTextNode(value: any) {\n  return value instanceof CanvasTextNode\n}\n\nexport class CanvasTextNode extends TreeNode<CanvasTextNode> {\n  text: string\n  _computedStyles: { width: number; height: 0 } = { width: 0, height: 0 }\n  renderObject: RenderObject\n  debugColor: string\n  isBody: boolean = false\n  constructor(text) {\n    super()\n    this.text = text\n  }\n  getContainer(this: TreeNode<CanvasTextNode>) {\n    return this._parentNode\n  }\n  getComputedStyles() {\n    return this._computedStyles as ComputedStyles\n  }\n  attach(this: CanvasTextNode, parent: CanvasElement) {\n    // if (!this.renderObject) {\n    //   _initRenderObject(this)\n    // }\n    // parent.renderObject.appendChild(this.renderObject)\n  }\n}\n","export interface Point {\n  x: number\n  y: number\n  setX(x: number): void\n  setY(y: number): void\n}\n\nexport function createPoint(x = 0, y = 0): Point {\n  return {\n    x,\n    y,\n    setX: function (x) {\n      this.x = x\n    },\n    setY: function (y) {\n      this.y = y\n    }\n  }\n}\n","import { Point, createPoint } from './point'\nimport { Size } from './size'\n\nexport interface Rect {\n  location: Point\n  size: Size\n  x: number\n  y: number\n  getCenter(rect: Rect): Point\n}\n\nexport function createRect(location, size) {\n  let rect = {\n    location,\n    size,\n    get x() {\n      return location.x\n    },\n    get y() {\n      return location.y\n    },\n    getCenter\n  }\n\n  return rect\n}\n\nfunction getCenter(rect) {\n  return createPoint(rect.x + rect.width / 2, rect.y + rect.height / 2)\n}\n","import { CanvasElement } from '../element/element'\nimport { CanvasTextNode } from '../element/textNode'\nimport { TreeNode } from '../tree-node/index'\n\n// LayoutObject is the base class for all layout tree objects.\n//\n// LayoutObjects form a tree structure that is a close mapping of the DOM tree.\n// The root of the LayoutObject tree is the LayoutView, which is the\n// LayoutObject associated with the Document.\n//\n// Some LayoutObjects don't have an associated Node and are called \"anonymous\"\n// (see the constructor below). Anonymous LayoutObjects exist for several\n// purposes but are usually required by CSS. A good example is anonymous table\n// parts (see LayoutNGTable for the expected structure). Anonymous LayoutObjects\n// are generated when a new child is added to the tree in addChild(). See the\n// function for some important information on this.\n//\n// Also some Node don't have an associated LayoutObjects e.g. if display: none\n// or display: contents is set. For more detail, see LayoutObject::createObject\n// that creates the right LayoutObject based on the style.\n//\n// Because the SVG and CSS classes both inherit from this object, functions can\n// belong to either realm and sometimes to both.\n//\n// The purpose of the layout tree is to do layout (aka reflow) and store its\n// results for painting and hit-testing. Layout is the process of sizing and\n// positioning Nodes on the page. In Blink, layouts always start from a relayout\n// boundary (see ObjectIsRelayoutBoundary in layout_object.cc). As such, we\n// need to mark the ancestors all the way to the enclosing relayout boundary in\n// order to do a correct layout.\n//\n// Due to the high cost of layout, a lot of effort is done to avoid doing full\n// layouts of nodes. This is why there are several types of layout available to\n// bypass the complex operations. See the comments on the layout booleans in\n// LayoutObjectBitfields below about the different layouts.\n//\n// To save memory, especially for the common child class LayoutText,\n// LayoutObject doesn't provide storage for children. Descendant classes that do\n// allow children have to have a LayoutObjectChildList member that stores the\n// actual children and override virtualChildren().\n//\n// LayoutObject is an ImageResourceObserver, which means that it gets notified\n// when associated images are changed. This is used for 2 main use cases:\n// - reply to 'background-image' as we need to invalidate the background in this\n//   case.\n//   (See https://drafts.csswg.org/css-backgrounds-3/#the-background-image)\n// - image (LayoutImage, LayoutSVGImage) or video (LayoutVideo) objects that are\n//   placeholders for displaying them.\n//\n//\n// ***** LIFETIME *****\n//\n// LayoutObjects are fully owned by their associated DOM node. In other words,\n// it's the DOM node's responsibility to free its LayoutObject, this is why\n// LayoutObjects are not and SHOULD NOT be RefCounted.\n//\n// LayoutObjects are created during the DOM attachment. This phase computes\n// the style and create the LayoutObject associated with the Node (see\n// Node::attachLayoutTree). LayoutObjects are destructed during detachment (see\n// Node::detachLayoutTree), which can happen when the DOM node is removed from\n// the\n// DOM tree, during page tear down or when the style is changed to contain\n// 'display: none'.\n//\n// Anonymous LayoutObjects are owned by their enclosing DOM node. This means\n// that if the DOM node is detached, it has to destroy any anonymous\n// descendants. This is done in LayoutObject::destroy().\n//\n// Note that for correctness, destroy() is expected to clean any anonymous\n// wrappers as sequences of insertion / removal could make them visible to\n// the page. This is done by LayoutObject::destroyAndCleanupAnonymousWrappers()\n// which is the preferred way to destroy an object.\n//\n//\n// ***** INTRINSIC SIZES / PREFERRED LOGICAL WIDTHS *****\n// The preferred logical widths are the intrinsic sizes of this element\n// (https://drafts.csswg.org/css-sizing-3/#intrinsic). Intrinsic sizes depend\n// mostly on the content and a limited set of style properties (e.g. any\n// font-related property for text, 'min-width'/'max-width',\n// 'min-height'/'max-height').\n//\n// Those widths are used to determine the final layout logical width, which\n// depends on the layout algorithm used and the available logical width.\n//\n// LayoutObject only has a getter for the widths (PreferredLogicalWidths).\n// However the storage for them is in LayoutBox (see\n// min_preferred_logical_width_ and max_preferred_logical_width_). This is\n// because only boxes implementing the full box model have a need for them.\n// Because LayoutBlockFlow's intrinsic widths rely on the underlying text\n// content, LayoutBlockFlow may call LayoutText::ComputePreferredLogicalWidths.\n//\n// The 2 widths are computed lazily during layout when the getters are called.\n// The computation is done by calling ComputePreferredLogicalWidths() behind the\n// scene. The boolean used to control the lazy recomputation is\n// IntrinsicLogicalWidthsDirty.\n//\n// See the individual getters below for more details about what each width is.\n\nexport class LayoutObject extends TreeNode<LayoutObject> {\n  element: CanvasElement | CanvasTextNode\n  constructor(element) {\n    super()\n    this.element = element\n  }\n  getStyles() {\n    return this.element.getComputedStyles()\n  }\n  appendChild(child) {\n    super.appendChildNode(child)\n  }\n}\n\n// function _setPreviousSibling<T>(this: LayoutObject<T>, previous: LayoutObject<T>) {}\n// function _setNextSibling<T>(this: LayoutObject<T>, next: LayoutObject<T>) {}\n// function _setParentSibling<T>(this: LayoutObject<T>, parent: LayoutObject<T>) {}\n","import { LayoutObject } from './layoutObject'\n\n// ***** COORDINATE SYSTEMS *****\n//\n// In order to fully understand LayoutBoxModelObject and the inherited classes,\n// we need to introduce the concept of coordinate systems.\n// There are 4 coordinate systems:\n// - physical coordinates: it is the coordinate system used for painting and\n//   correspond to physical direction as seen on the physical display (screen,\n//   printed page). In CSS, 'top', 'right', 'bottom', 'left' are all in physical\n//   coordinates. The code matches this convention too.\n//\n// - logical coordinates: this is the coordinate system used for layout. It is\n//   determined by 'writing-mode' and 'direction'. Any property using 'before',\n//   'after', 'start' or 'end' is in logical coordinates. Those are also named\n//   respectively 'logical top', 'logical bottom', 'logical left' and\n//   'logical right'.\n//\n// Example with writing-mode: vertical-rl; direction: ltr;\n//\n//                    'top' / 'start' side\n//\n//                     block-flow direction\n//           <------------------------------------ |\n//           ------------------------------------- |\n//           |        c   |          s           | |\n// 'left'    |        o   |          o           | |   inline     'right'\n//    /      |        n   |          m           | |  direction      /\n// 'after'   |        t   |          e           | |              'before'\n//  side     |        e   |                      | |                side\n//           |        n   |                      | |\n//           |        t   |                      | |\n//           ------------------------------------- v\n//\n//                 'bottom' / 'end' side\n//\n// See https://drafts.csswg.org/css-writing-modes-3/#text-flow for some\n// extra details.\n//\n// - physical coordinates with flipped block-flow direction: those are physical\n//   coordinates but we flipped the block direction. Almost all geometries\n//   in box layout use this coordinate space, except those having explicit\n//   \"Logical\" or \"Physical\" prefix in their names, or the name implies logical\n//   (e.g. InlineStart, BlockEnd) or physical (e.g. Top, Left), or the return\n//   type is PhysicalRect.\n//\n// - logical coordinates without flipping inline direction: those are \"logical\n//   block coordinates\", without considering text direction. Examples are\n//   \"LogicalLeft\" and \"LogicalRight\".\n//\n// For more information, see the following doc about coordinate spaces:\n// https://chromium.googlesource.com/chromium/src.git/+/main/third_party/blink/renderer/core/layout/README.md#coordinate-spaces\n\n// export interface LayoutBoxModelObject<T> extends LayoutObject<T> {}\n\n// export const createLayoutBoxModelObject = function LayoutBoxModelObject<T>(element: CanvasElement) {\n//   return pipe(\n//     createBaseLayoutObject<T>(element),\n//     createBaseLayoutBoxModelObject<T>(),\n//     withConstructor(LayoutBoxModelObject)\n//   )(new TreeNode())\n// }\n\nexport class LayoutBoxModelObject extends LayoutObject {\n  offsetLeft: number = 0\n  offsetTop: number = 0\n  offsetWidth: number = 0\n  offsetHeight: number = 0\n  get paddingTop() {\n    return super.getStyles().paddingTop || 0\n  }\n  get paddingBottom() {\n    return super.getStyles().paddingBottom || 0\n  }\n  get paddingLeft() {\n    return super.getStyles().paddingLeft || 0\n  }\n  get paddingRight() {\n    return super.getStyles().paddingRight || 0\n  }\n  get paddingBefore() {\n    return this.physicalPaddingToLogical().before()\n  }\n  get paddingAfter() {\n    return this.physicalPaddingToLogical().after()\n  }\n  get paddingEnd() {\n    return this.physicalPaddingToLogical().end()\n  }\n  get borderTop() {\n    return super.getStyles().borderTopWidth || 0\n  }\n  get borderBottom() {\n    return super.getStyles().borderBottomWidth || 0\n  }\n  get borderLeft() {\n    return super.getStyles().borderLeftWidth || 0\n  }\n  get borderRight() {\n    return super.getStyles().borderRightWidth || 0\n  }\n  get borderBefore() {\n    return this.physicalBorderToLogical().before()\n  }\n  get borderAfter() {\n    return this.physicalBorderToLogical().after()\n  }\n  get borderStart() {\n    return this.physicalBorderToLogical().start()\n  }\n  get borderEnd() {\n    return this.physicalBorderToLogical().end()\n  }\n  get borderWidth() {\n    return this.borderLeft + this.borderRight\n  }\n  get borderHeight() {\n    return this.borderTop + this.borderBottom\n  }\n  get borderBoxOutsets() {\n    const { borderTop, borderRight, borderBottom, borderLeft } = this\n    return { borderTop, borderRight, borderBottom, borderLeft }\n  }\n  get paddingOutsets() {\n    const { paddingTop, paddingRight, paddingBottom, paddingLeft } = this\n    return { paddingTop, paddingRight, paddingBottom, paddingLeft }\n  }\n  get marginTop() {\n    return super.getStyles().marginTop\n  }\n  constructor(element) {\n    super(element)\n  }\n  physicalPaddingToLogical() {\n    return {\n      before: () => 0,\n      after: () => 0,\n      end: () => 0\n    }\n  }\n  physicalBorderToLogical() {\n    return {\n      before: () => 0,\n      after: () => 0,\n      start: () => 0,\n      end: () => 0\n    }\n  }\n  physicalMarginToLogical() {\n    return {\n      before: () => 0,\n      after: () => 0,\n      start: () => 0,\n      end: () => 0,\n      lineLeft: () => 0\n    }\n  }\n}\n","import { CanvasElement, Layout, isCanvasElement } from '../element/element'\nimport { CanvasTextNode } from '../element/textNode'\nimport { Point, createPoint } from '../geometry/point'\nimport { Rect, createRect } from '../geometry/rect'\nimport { Size, createSize } from '../geometry/size'\nimport { NOOP, breakPipe, isAuto, pipe, pipeLine, when, withConstructor } from '../utils'\nimport { LayoutBoxModelObject } from './layoutBoxModelObject'\n\n// LayoutBox implements the full CSS box model.\n//\n// LayoutBoxModelObject only introduces some abstractions for LayoutInline and\n// LayoutBox. The logic for the model is in LayoutBox, e.g. the storage for the\n// rectangle and offset forming the CSS box (frame_location_ and frame_size_)\n// and the getters for the different boxes.\n//\n// LayoutBox is also the uppermost class to support scrollbars, however the\n// logic is delegated to PaintLayerScrollableArea.\n// Per the CSS specification, scrollbars should \"be inserted between the inner\n// border edge and the outer padding edge\".\n// (see http://www.w3.org/TR/CSS21/visufx.html#overflow)\n// Also the scrollbar width / height are removed from the content box. Taking\n// the following example:\n//\n// <!DOCTYPE html>\n// <style>\n// ::-webkit-scrollbar {\n//     /* Force non-overlay scrollbars */\n//     width: 10px;\n//     height: 20px;\n// }\n// </style>\n// <div style=\"overflow:scroll; width: 100px; height: 100px\">\n//\n// The <div>'s content box is not 100x100 as specified in the style but 90x80 as\n// we remove the scrollbars from the box.\n//\n// The presence of scrollbars is determined by the 'overflow' property and can\n// be conditioned on having layout overflow (see OverflowModel for more details\n// on how we track overflow).\n//\n// There are 2 types of scrollbars:\n// - non-overlay scrollbars take space from the content box.\n// - overlay scrollbars don't and just overlay hang off from the border box,\n//   potentially overlapping with the padding box's content.\n// For more details on scrollbars, see PaintLayerScrollableArea.\n//\n//\n// ***** THE BOX MODEL *****\n// The CSS box model is based on a series of nested boxes:\n// http://www.w3.org/TR/CSS21/box.html\n//\n//       |----------------------------------------------------|\n//       |                                                    |\n//       |                   margin-top                       |\n//       |                                                    |\n//       |     |-----------------------------------------|    |\n//       |     |                                         |    |\n//       |     |             border-top                  |    |\n//       |     |                                         |    |\n//       |     |    |--------------------------|----|    |    |\n//       |     |    |                          |    |    |    |\n//       |     |    |       padding-top        |####|    |    |\n//       |     |    |                          |####|    |    |\n//       |     |    |    |----------------|    |####|    |    |\n//       |     |    |    |                |    |    |    |    |\n//       | ML  | BL | PL |  content box   | PR | SW | BR | MR |\n//       |     |    |    |                |    |    |    |    |\n//       |     |    |    |----------------|    |    |    |    |\n//       |     |    |                          |    |    |    |\n//       |     |    |      padding-bottom      |    |    |    |\n//       |     |    |--------------------------|----|    |    |\n//       |     |    |                      ####|    |    |    |\n//       |     |    |     scrollbar height ####| SC |    |    |\n//       |     |    |                      ####|    |    |    |\n//       |     |    |-------------------------------|    |    |\n//       |     |                                         |    |\n//       |     |           border-bottom                 |    |\n//       |     |                                         |    |\n//       |     |-----------------------------------------|    |\n//       |                                                    |\n//       |                 margin-bottom                      |\n//       |                                                    |\n//       |----------------------------------------------------|\n//\n// BL = border-left\n// BR = border-right\n// ML = margin-left\n// MR = margin-right\n// PL = padding-left\n// PR = padding-right\n// SC = scroll corner (contains UI for resizing (see the 'resize' property)\n// SW = scrollbar width\n//\n// Note that the vertical scrollbar (if existing) will be on the left in\n// right-to-left direction and horizontal writing-mode. The horizontal scrollbar\n// (if existing) is always at the bottom.\n//\n// Those are just the boxes from the CSS model. Extra boxes are tracked by Blink\n// (e.g. the overflows). Thus it is paramount to know which box a function is\n// manipulating. Also of critical importance is the coordinate system used (see\n// the COORDINATE SYSTEMS section in LayoutBoxModelObject).\n\n// export interface LayoutBox extends LayoutBoxModelObject<LayoutBox> {\n//   _isLayoutBox: boolean\n//   size: Size\n//   location: Point\n//   rect: Rect\n//   firstChildBox(): null\n//   firstInFlowChildBox(): null\n//   lastChildBox(): null\n//   clientWidth(): number\n//   clientHeight(): number\n//   setWidth(width: number): void\n//   setHeight(height: number): void\n//   setX(x: number): void\n//   setY(y: number): void\n//   updateSize(): void\n// }\n\n// export const createLayoutBox = function LayoutBox(element: CanvasElement) {\n//   return pipe(\n//     createBaseLayoutBox(),\n//     withConstructor(LayoutBox)\n//   )(createLayoutBoxModelObject<LayoutBox>(element))\n// }\n\nexport class LayoutBox extends LayoutBoxModelObject {\n  size: Size\n  location: Point\n  rect: Rect\n  constructor(element) {\n    super(element)\n    this.size = createSize()\n    this.location = createPoint()\n    this.rect = createRect(this.size, this.location)\n  }\n  setWidth(this: LayoutBox, width) {\n    if (width === this.size.width) return\n    this.size.setWidth(width)\n  }\n\n  setHeight(this: LayoutBox, height) {\n    if (height === this.size.height) return\n    this.size.setHeight(height)\n  }\n\n  setX(this: LayoutBox, x) {\n    if (x === this.location.x) return\n    this.location.setX(x)\n  }\n\n  setY(this: LayoutBox, y) {\n    if (y === this.location.y) return\n    this.location.setY(y)\n  }\n\n  updateSize(this: LayoutBox) {\n    const size = _measureSize(this)\n    console.log('updateSize', size, this)\n    this.size.setWidth(size.width)\n    this.size.setHeight(size.height)\n  }\n}\n\n// export const createBaseLayoutBox =\n//   () =>\n//   (o: LayoutBoxModelObject<LayoutBox>): LayoutBox => {\n//     let size = createSize()\n//     let location = createPoint()\n//     let rect = createRect(size, location)\n\n//     let layoutBox: LayoutBox = {\n//       ...o,\n//       _isLayoutBox: true,\n//       size,\n//       location,\n//       rect,\n//       firstChildBox() {\n//         return null\n//       },\n//       firstInFlowChildBox() {\n//         return null\n//       },\n//       lastChildBox() {\n//         return null\n//       },\n//       clientWidth() {\n//         return this.size.width - this.borderLeft - this.borderRight\n//       },\n//       clientHeight() {\n//         return this.size.height - this.borderTop - this.borderBottom\n//       },\n//       setWidth,\n//       setHeight,\n//       setX,\n//       setY,\n//       updateSize\n//     }\n\n//     return layoutBox\n//   }\n\nconst _measureSize = (layoutBox: LayoutBox): Size =>\n  pipeLine(\n    _initSize(layoutBox.element),\n    when(() => layoutBox.element.isBody, _calcBodySize(layoutBox.element), breakPipe),\n    when(() => !layoutBox.hasChildNode(), NOOP, breakPipe),\n    when(() => isAuto(layoutBox.getStyles().width), _calcWidthByChild(layoutBox)),\n    when(() => isAuto(layoutBox.getStyles().height), _calcHeightByChild(layoutBox))\n  )(createSize())\n\n// const initRootBounds =\n//   (renderBlock: RenderBlock) =>\n//   (o): Bounds => {\n//     o.width = renderBlock.viewport.width\n//     o.height = renderBlock.viewport.height\n\n//     return o\n//   }\n\n// const calcBounds =\n//   (renderBlock: RenderBlock) =>\n//   (o): Bounds => {\n//     const {\n//       borderTopWidth,\n//       borderBottomWidth,\n//       borderLeftWidth,\n//       borderRightWidth,\n//       paddingTop,\n//       paddingBottom,\n//       paddingLeft,\n//       paddingRight,\n//       marginTop,\n//       width,\n//       height\n//     } = renderBlock.element.computedStyles\n\n//     const parentBox = renderBlock.getContainer().layoutBox\n//     const prevSiblingBox = renderBlock.previousSibling\n//       ? renderBlock.previousSibling.layoutBox\n//       : null\n\n//     let _top = (prevSiblingBox ? prevSiblingBox.bottom : parentBox.top) + marginTop\n//     let _left = parentBox.left\n//     let _width =\n//       Number(borderLeftWidth) +\n//       Number(paddingLeft) +\n//       Number(width) +\n//       Number(paddingRight) +\n//       Number(borderRightWidth)\n//     let _height =\n//       Number(borderTopWidth) +\n//       Number(paddingTop) +\n//       Number(height) +\n//       Number(paddingBottom) +\n//       Number(borderBottomWidth)\n\n//     o.parentBox = parentBox\n//     o.top = _top\n//     o.left = _left\n//     o.width = _width\n//     o.height = _height\n//     return o\n//   }\n\n// const initLayout = (renderBlock: RenderBlock, bounds: Bounds): void => {\n//   renderBlock.layoutBox = createLayoutBox(\n//     bounds.parentBox,\n//     bounds.top,\n//     bounds.left,\n//     bounds.width,\n//     bounds.height\n//   )\n// }\n\n// const updateLayout = (renderBlock: RenderBlock, bounds: Bounds): void => {\n//   renderBlock.layoutBox.setTop(bounds.top)\n//   renderBlock.layoutBox.setLeft(bounds.left)\n//   renderBlock.layoutBox.setWidth(bounds.width)\n//   renderBlock.layoutBox.setHeight(bounds.height)\n// }\n\nconst _initSize =\n  (element: CanvasElement | CanvasTextNode) =>\n  (o: Size): Size => {\n    console.log(element.getComputedStyles())\n    o.setWidth(Number(element.getComputedStyles().width))\n    o.setHeight(Number(element.getComputedStyles().height))\n    return o\n  }\n\nconst _calcBodySize =\n  (element: CanvasElement) =>\n  (o: Size): Size => {\n    o.setWidth(element.getContext().viewport.width)\n    o.setHeight(element.getContext().viewport.height)\n    return o\n  }\n\nconst _calcWidthByChild =\n  (layoutBox: LayoutBox) =>\n  (o: Size): Size => {\n    o.width = layoutBox.children.reduce((acc, curr) => {\n      console.log(curr.size.width)\n      return Number(curr.size.width) > acc ? Number(curr.size.width) : acc\n    }, 0)\n    return o\n  }\n\nconst _calcHeightByChild =\n  (layoutBox: LayoutBox) =>\n  (o: Size): Size => {\n    o.height = layoutBox.children.reduce((acc, curr) => {\n      return acc + Number(curr.size.height)\n    }, 0)\n    return o\n  }\n","export interface Size {\n  width: number\n  height: number\n  setWidth(width: number): void\n  setHeight(height: number): void\n}\n\nexport function createSize(): Size {\n  return {\n    width: 0,\n    height: 0,\n    setWidth: function (width) {\n      this.width = width\n    },\n    setHeight: function (height) {\n      this.height = height\n    }\n  }\n}\n","import { CanvasElement } from '../element/element'\nimport { pipe, withConstructor } from '../utils'\nimport { LayoutBox, createBaseLayoutBox, createLayoutBox } from './layoutBox'\nimport { createLayoutBoxModelObject } from './layoutBoxModelObject'\n\n// LayoutBlock is the class that is used by any LayoutObject\n// that is a containing block.\n// http://www.w3.org/TR/CSS2/visuren.html#containing-block\n// See also LayoutObject::ContainingBlock() that is the function\n// used to get the containing block of a LayoutObject.\n//\n// CSS is inconsistent and allows inline elements (LayoutInline) to be\n// containing blocks, even though they are not blocks. Our\n// implementation is as confused with inlines. See e.g.\n// LayoutObject::ContainingBlock() vs LayoutObject::Container().\n//\n// Containing blocks are a central concept for layout, in\n// particular to the layout of out-of-flow positioned\n// elements. They are used to determine the sizing as well\n// as the positioning of the LayoutObjects.\n//\n// LayoutBlock is the class that handles out-of-flow positioned elements in\n// Blink, in particular for layout (see LayoutPositionedObjects()). That's why\n// LayoutBlock keeps track of them through |GetPositionedDescendantsMap()| (see\n// layout_block.cc).\n// Note that this is a design decision made in Blink that doesn't reflect CSS:\n// CSS allows relatively positioned inlines (LayoutInline) to be containing\n// blocks, but they don't have the logic to handle out-of-flow positioned\n// objects. This induces some complexity around choosing an enclosing\n// LayoutBlock (for inserting out-of-flow objects during layout) vs the CSS\n// containing block (for sizing, invalidation).\n//\n//\n// ***** WHO LAYS OUT OUT-OF-FLOW POSITIONED OBJECTS? *****\n// A positioned object gets inserted into an enclosing LayoutBlock's positioned\n// map. This is determined by LayoutObject::ContainingBlock().\n//\n//\n// ***** HANDLING OUT-OF-FLOW POSITIONED OBJECTS *****\n// Care should be taken to handle out-of-flow positioned objects during\n// certain tree walks (e.g. Layout()). The rule is that anything that\n// cares about containing blocks should skip the out-of-flow elements\n// in the normal tree walk and do an optional follow-up pass for them\n// using LayoutBlock::PositionedObjects().\n// Not doing so will result in passing the wrong containing\n// block as tree walks will always pass the parent as the\n// containing block.\n//\n// Sample code of how to handle positioned objects in LayoutBlock:\n//\n// for (LayoutObject* child = FirstChild(); child; child = child->NextSibling())\n// {\n//     if (child->IsOutOfFlowPositioned())\n//         continue;\n//\n//     // Handle normal flow children.\n//     ...\n// }\n// for (LayoutBox* positioned_object : PositionedObjects()) {\n//     // Handle out-of-flow positioned objects.\n//     ...\n// }\n\n// export interface LayoutBlock extends LayoutBox {\n//   _isLayoutBlock: boolean\n//   updateLayout(): void\n// }\n\n// export const createLayoutBlock = function LayoutBlock(element: CanvasElement) {\n//   return pipe(createBaseLayoutBlock(), withConstructor(LayoutBlock))(createLayoutBox(element))\n// }\n\nexport class LayoutBlock extends LayoutBox {\n  constructor(element) {\n    super(element)\n  }\n\n  updateLayout(this: LayoutBlock) {}\n  mergeInlineChild() {}\n}\n\n// const createBaseLayoutBlock =\n//   () =>\n//   (o): LayoutBlock => {\n//     let layoutBlock = {\n//       ...o,\n//       _isLayoutBlock: true,\n//       updateLayout\n//     }\n\n//     return layoutBlock\n//   }\n\n// function updateLayout(this: LayoutBlock) {}\n\n// function mergeInlineChild() {\n//   this.children\n// }\n","import { CanvasElement } from '../element/element'\nimport { pipe, withConstructor } from '../utils'\nimport { LayoutBoxModelObject, createLayoutBoxModelObject } from './layoutBoxModelObject'\nimport { LayoutObject } from './layoutObject'\n\n// LayoutInline is the LayoutObject associated with display: inline.\n// This is called an \"inline box\" in CSS 2.1.\n// http://www.w3.org/TR/CSS2/visuren.html#inline-boxes\n//\n// It is also the base class for content that behaves in similar way (like\n// quotes and \"display: ruby\").\n//\n// Note that LayoutInline is always 'inline-level' but other LayoutObject\n// can be 'inline-level', which is why it's stored as a boolean on LayoutObject\n// (see LayoutObject::isInline()).\n//\n// For performance and memory consumption, this class ignores some inline-boxes\n// during line layout because they don't impact layout (they still exist and are\n// inserted into the layout tree). An example of this is\n//             <span><span>Text</span></span>\n// where the 2 spans have the same size as the inner text-node so they can be\n// ignored for layout purpose, generating a single inline-box instead of 3.\n// One downside of this optimization is that we have extra work to do when\n// asking for bounding rects (see generateLineBoxRects).\n// This optimization is called \"culled inline\" in the code.\n//\n// LayoutInlines are expected to be laid out by their containing\n// LayoutBlockFlow. See LayoutBlockFlow::layoutInlineChildren.\n//\n//\n// ***** CONTINUATIONS AND ANONYMOUS LAYOUTBLOCKFLOWS *****\n// LayoutInline enforces the following invariant:\n// \"All in-flow children of an inline box are inline.\"\n// When a non-inline child is inserted, LayoutInline::addChild splits the inline\n// and potentially enclosing inlines too. It then wraps layout objects into\n// anonymous block-flow containers. This creates complexity in the code as:\n// - a DOM node can have several associated LayoutObjects (we don't currently\n//   expose this information to the DOM code though).\n// - more importantly, nodes that are parent/child in the DOM have no natural\n//   relationship anymore (see example below).\n// In order to do a correct tree walk over this synthetic tree, a single linked\n// list is stored called *continuation*. See splitFlow() about how it is\n// populated during LayoutInline split.\n//\n// Continuations can only be a LayoutInline or an anonymous LayoutBlockFlow.\n// That's why continuations are handled by LayoutBoxModelObject (common class\n// between the 2). See LayoutBoxModelObject::continuation and setContinuation.\n//\n// Let's take the following example:\n//   <!DOCTYPE html>\n//   <b>Bold inline.<div>Bold block.</div>More bold inlines.</b>\n//\n// The generated layout tree is:\n//   LayoutBlockFlow {HTML}\n//    LayoutBlockFlow {BODY}\n//      LayoutBlockFlow (anonymous)\n//        LayoutInline {B}\n//          LayoutText {#text}\n//            text run: \"Bold inline.\"\n//      LayoutBlockFlow (anonymous)\n//        LayoutBlockFlow {DIV}\n//          LayoutText {#text}\n//            text run: \"Bold block.\"\n//      LayoutBlockFlow (anonymous)\n//        LayoutInline {B}\n//          LayoutText {#text}\n//            text run: \"More bold inlines.\"\n//\n// The insertion of the <div> inside the <b> forces the latter to be split\n// into 2 LayoutInlines and the insertion of anonymous LayoutBlockFlows. The 2\n// LayoutInlines are done so that we can apply the correct (bold) style to both\n// sides of the <div>. The continuation chain starts with the first\n// LayoutInline {B}, continues to the middle anonymous LayoutBlockFlow and\n// finishes with the last LayoutInline {B}.\n//\n// Note that the middle anonymous LayoutBlockFlow duplicates the content.\n// TODO(jchaffraix): Find out why we made the decision to always insert the\n//                   anonymous LayoutBlockFlows.\n//\n// This section was inspired by an older article by Dave Hyatt:\n// https://www.webkit.org/blog/115/webcore-rendering-ii-blocks-and-inlines/\n\n// export function isLayoutInline(value: any): value is LayoutInline {\n//   return value ? value.__v_isLayoutInline === true : false\n// }\n\n// export interface LayoutInline extends LayoutObject<LayoutInline> {\n//   _isLayoutInline: boolean\n//   updateSize(): void\n//   updateLayout(): void\n//   wrapByAnonymousBlock(): void\n//   generateLineBoxRects(): void\n// }\n\n// export const createLayoutInline = function LayoutInline(element: CanvasElement) {\n//   return pipe(\n//     createBaseLayoutInline(),\n//     withConstructor(LayoutInline)\n//   )(createLayoutBoxModelObject<LayoutInline>(element))\n// }\n\nexport class LayoutInline extends LayoutBoxModelObject {\n  constructor(element) {\n    super(element)\n  }\n}\n\n// const createBaseLayoutInline =\n//   () =>\n//   (o: LayoutBoxModelObject<LayoutInline>): LayoutInline => {\n//     let layoutInline = {\n//       ...o,\n//       _isLayoutInline: true,\n//       updateSize,\n//       updateLayout,\n//       generateLineBoxRects,\n//       wrapByAnonymousBlock\n//     }\n\n//     return layoutInline\n//   }\n\n// // function checkIfNeedWrapped() {\n// //   if (this.parentNode.isAnonymous()) return false\n\n// //   isLayoutInline(this.previousSibling)\n// // }\n\n// function wrapByAnonymousBlock(this: LayoutInline) {}\n\n// function updateSize(this: LayoutInline) {}\n\n// function updateLayout(this: LayoutInline) {\n//   console.log('updateLayout')\n//   this.wrapByAnonymousBlock()\n// }\n\n// function generateLineBoxRects() {}\n","import { CanvasElement } from '../element/element'\nimport { pipe, withConstructor } from '../utils'\nimport { LayoutBox } from './layoutBox'\nimport { LayoutObject } from './layoutObject'\n\n// export interface LayoutInlineBlock extends LayoutBox {\n//   _isLayoutInlineBlock: boolean\n//   updateLayout(): void\n// }\n\n// export const createLayoutInlineBlock = function LayoutInlineBlock(element: CanvasElement) {\n//   return pipe(\n//     createBaseLayoutInlineBlock(),\n//     withConstructor(LayoutInlineBlock)\n//   )(createLayoutBox(element))\n// }\n\nexport class LayoutInlineBlock extends LayoutBox {\n  constructor(element) {\n    super(element)\n  }\n}\n\n// const createBaseLayoutInlineBlock =\n//   () =>\n//   (o: LayoutBox): LayoutInlineBlock => {\n//     let layoutInlineBlock = {\n//       ...o,\n//       _isLayoutInlineBlock: true,\n//       updateSize,\n//       updateLayout\n//     }\n\n//     return layoutInlineBlock\n//   }\n\n// function updateSize(this: LayoutInlineBlock) {}\n\n// function updateLayout(this: LayoutInlineBlock) {}\n","import { CanvasTextNode } from '../element/textNode'\nimport { LayoutObject } from './layoutObject'\n\n// LayoutText is the root class for anything that represents\n// a text node (see core/dom/text.h).\n//\n// This is a common node in the tree so to the limit memory overhead,\n// this class inherits directly from LayoutObject.\n// Also this class is used by both CSS and SVG layouts so LayoutObject\n// was a natural choice.\n//\n// The actual layout of text is handled by the containing Text\n// (LayoutText) or block (LayoutBlockFlow). They will invoke the Unicode\n// Bidirectional Algorithm to break the text into actual lines.\n// The result of layout is the line box tree, which represents lines\n// on the screen. It is stored into m_firstTextBox and m_lastTextBox.\n// To understand how lines are broken by the bidi algorithm, read e.g.\n// LayoutBlockFlow::LayoutInlineChildren.\n//\n//\n// This class implements the preferred logical widths computation\n// for its underlying text. The widths are stored into min_width_\n// and max_width_. They are computed lazily based on\n// LayoutObjectBitfields::intrinsic_logical_widths_dirty_.\n//\n// The previous comment applies also for painting. See e.g.\n// BlockFlowPainter::paintContents in particular the use of LineBoxListPainter.\n\n// export interface LayoutText extends LayoutObject<LayoutText> {\n//   _isLayoutText: boolean\n//   updateLayout(): void\n// }\n\nexport class LayoutText extends LayoutObject {\n  constructor(element: CanvasTextNode) {\n    super(element)\n    this.element = element\n  }\n}\n\n// export const createLayoutText = function LayoutText(element: CanvasTextNode) {\n//   return pipe(\n//     createBaseLayoutObject(element),\n//     createBaseLayoutText(),\n//     withConstructor(LayoutText)\n//   )(new TreeNode())\n// }\n\n// const createBaseLayoutText =\n//   () =>\n//   (o: LayoutObject<LayoutText>): LayoutText => {\n//     let layoutText = {\n//       ...o,\n//       _isLayoutText: true,\n//       updateSize,\n//       updateLayout\n//     }\n\n//     return layoutText\n//   }\n\n// function updateSize(this: LayoutText) {}\n// function updateLayout(this: LayoutText) {}\n","import { isCanvasTextNode } from '../element/textNode'\nimport { LayoutBlock } from './layoutBlock'\nimport { LayoutInline } from './layoutInline'\nimport { LayoutInlineBlock } from './layoutInlineBlock'\nimport { LayoutText } from './layoutText'\n\nexport function createLayoutObject(element) {\n  if (element.type === 'body') {\n    return new LayoutBlock(element)\n  }\n  if (isCanvasTextNode(element)) {\n    return new LayoutText(element)\n  }\n\n  switch (element.getComputedStyles().display) {\n    case 'block':\n      return new LayoutBlock(element)\n    case 'inline':\n      return new LayoutInline(element)\n    case 'inline-block':\n      return new LayoutInlineBlock(element)\n    default:\n      return new LayoutBlock(element)\n  }\n}\n","import { isString } from '../utils/index'\nimport { ElementStyleType } from '../styleConstant'\nimport { TreeNode } from '../tree-node/index'\nimport { RenderObject, createRenderObject } from '../render/renderObject'\nimport { Engine } from '../engine'\nimport { createCSSDeclaration } from '../css/index'\nimport { BODY_STYLES, EXTEND_STYLE_KEYS } from '../css/constant'\nimport { CanvasTextNode } from './textNode'\nimport { LayoutBlock } from '../layout/layoutBlock'\nimport { LayoutInline } from '../layout/layoutInline'\nimport { LayoutText } from '../layout/layoutText'\nimport { createLayoutObject } from '../layout/index'\n\nexport const DEFAULT_CONTAINER = {\n  styles: {},\n  renderStyles: {\n    width: 0,\n    height: 0,\n    paddingWidth: 0,\n    paddingHeight: 0,\n    paddingTop: 0,\n    paddingBottom: 0,\n    paddingLeft: 0,\n    paddingRight: 0,\n    marginLeft: 0,\n    marginRight: 0,\n    marginTop: 0,\n    marginBottom: 0,\n    borderTopWidth: 0,\n    borderBottomWidth: 0,\n    borderLeftWidth: 0,\n    borderRightWidth: 0,\n    contentWidth: 0,\n    contentHeight: 0,\n    fullBoxWidth: 0,\n    fullBoxHeight: 0,\n    lineCap: 'butt',\n    visible: true\n  },\n  layout: {\n    x: 0,\n    y: 0,\n    contentX: 0,\n    contentY: 0\n  }\n}\n\n// export enum ElementTypes {\n//   root = 'root',\n//   view = 'view',\n//   text = 'text',\n//   img = 'img'\n// }\n\ntype ExtendStyles = {\n  textAlign?: string\n  lineHeight?: number\n  fontSize?: number\n  color?: string\n  fontFamily?: string\n  alignItems?: string\n  alignSelf?: string\n  visible?: boolean\n}\n\nexport type ElementStyles = {\n  display: string\n  width: number\n  height: number\n  borderTopWidth: number\n  borderBottomWidth: number\n  borderLeftWidth: number\n  borderRightWidth: number\n  paddingTop: number\n  paddingBottom: number\n  paddingLeft: number\n  paddingRight: number\n  marginTop: number\n  marginBottom: number\n  marginLeft: number\n  marginRight: number\n  backgroundColor: string\n  color: string\n  fontSize: number\n  fontWeight: string\n  lineHeight: number\n  // contentWidth: number\n  // contentHeight: number\n  // fullBoxWidth: number\n  // fullBoxHeight: number\n  // lineCap: string // butt round square\n  // visible: boolean\n}\n\nexport type ComputedStyles = {\n  display: string\n  width: number\n  height: number\n  borderTopWidth: number\n  borderBottomWidth: number\n  borderLeftWidth: number\n  borderRightWidth: number\n  paddingTop: number\n  paddingBottom: number\n  paddingLeft: number\n  paddingRight: number\n  marginTop: number\n  marginBottom: number\n  marginLeft: number\n  marginRight: number\n  backgroundColor: string\n  color: string\n  fontSize: number\n  fontWeight: string\n  lineHeight: number\n  fontFamily: string\n  // contentWidth: number\n  // contentHeight: number\n  // fullBoxWidth: number\n  // fullBoxHeight: number\n  // lineCap: string // butt round square\n  // visible: boolean\n}\n\nexport type Layout = {\n  x: number\n  y: number\n  contentX?: number\n  contentY?: number\n}\n\n// type DefaultContainer = {\n//   styles: ElementStyleType\n//   renderStyles: RenderStyle\n//   layout: Layout\n// }\n\n// type CanvasElementContainer = CanvasElement | DefaultContainer\n\nexport type ElementOptions = {\n  id?: string\n  style?: ElementStyleType\n  text?: string\n}\n\nexport interface CanvasBodyElement extends CanvasElement {}\n\n// export interface CanvasElement extends TreeNode<CanvasElement> {\n//   __v_isCanvasElement: boolean\n//   type: string\n//   id: string | null\n//   options: ElementOptions\n//   styles: ElementStyles\n//   // children: Array<CanvasElement | CanvasTextNode>\n//   renderObject: RenderObject\n//   debugColor: string | null\n//   initLayoutObject(): void\n//   attach(parent: CanvasElement): void\n//   appendChild(child: CanvasElement): void\n//   computeStyles(): void\n//   hasChildren(): boolean\n//   getRootElement(): CanvasElement\n//   getContainerStyle(styleName: string): ComputedStyles\n//   getContainer(): CanvasElement | null\n//   getLayoutObject(): LayoutObject<LayoutBlock | LayoutInline | LayoutInline | LayoutText> | null\n//   getComputedStyles(): ComputedStyles\n//   setComputedStyles(styleName: string, value: any): void\n//   isVisible(): boolean\n// }\n\nexport type CreateElementAPI = (context: Engine) => CreateElementFn\n\nexport type CreateElementFn = (\n  type: string,\n  options?: ElementOptions,\n  children?: CanvasElement[] | string\n) => CanvasElement\n\nexport const createElementAPI = (context: Engine) => {\n  const createElement = (\n    type: string,\n    options: ElementOptions = {},\n    children?: CanvasElement[] | string\n  ) => new CanvasElement(context, type, options, children)\n\n  return createElement\n}\n\nexport class CanvasElement extends TreeNode<CanvasElement> {\n  #context: Engine\n  type: string\n  id: string | null\n  options: ElementOptions\n  computedStyles: ElementStyles\n  #computedStyles: ComputedStyles\n  // children: Array<CanvasElement | CanvasTextNode>\n  layoutObject: LayoutBlock | LayoutInline | LayoutInline | LayoutText | null\n  renderObject: RenderObject\n  debugColor: string | null\n  get styles(): ElementStyleType {\n    return this.options.style || {}\n  }\n  public get container() {\n    return (<TreeNode<CanvasElement>>this)._parentNode\n  }\n  public get childNodes() {\n    return (<TreeNode<CanvasElement>>this).children\n  }\n  public get isBody() {\n    return this.type === 'body'\n  }\n  constructor(context: Engine, type: string, options: ElementOptions = {}, children?) {\n    super()\n    this.type = type\n    this.id = options.id || null\n    this.options = options\n\n    if (children) {\n      ;(<TreeNode<CanvasElement>>this).children = children\n    }\n\n    this.computedStyles = _createStyles(this)\n    this.#context = context\n\n    if (type === 'body') {\n      // _initRenderObject(this)\n      this.computedStyles.width = context.viewport.width\n      this.computedStyles.height = context.viewport.height\n\n      this.#computedStyles = {\n        ...this.computedStyles,\n        fontFamily: context.renderer.defaultFontFamily\n      }\n      this.initLayoutObject()\n    }\n\n    _createTextNodeIfHasText(this)\n  }\n  attach(parent: CanvasElement) {\n    if (!this.getLayoutObject()) {\n      this.initLayoutObject()\n    }\n    // if (!this.renderObject) {\n    //   _initRenderObject(this)\n    // }\n    // parent.renderObject.appendChild(this.renderObject)\n    parent.layoutObject.appendChild(this.layoutObject)\n    if (this.hasChildren()) {\n      this.childNodes.forEach((child) => {\n        child.attach(this)\n      })\n    }\n  }\n  appendChild(child: CanvasElement) {\n    super.appendChildNode(child)\n\n    // attach to renderTree\n    const rootElm = this.getRootElement()\n    if (rootElm && rootElm.type === 'body') {\n      child.attach(this)\n      ;(<CanvasBodyElement>rootElm).#context.flow(this)\n    }\n  }\n  computeStyles() {\n    if (this.getContainer()) {\n      EXTEND_STYLE_KEYS.forEach((key) => {\n        const value = this.getContainerStyle(key)\n        if (value) this.getComputedStyles()[key] = value\n      })\n\n      Object.freeze(this.getComputedStyles())\n    }\n\n    if (this.hasChildren()) {\n      this.children.forEach((child) => {\n        child.computeStyles()\n      })\n    }\n  }\n  hasChildren() {\n    return this.hasChildNode()\n  }\n\n  getRootElement(): CanvasElement {\n    return this.getRootNode()\n  }\n\n  getContainerStyle(styleName: string): ComputedStyles {\n    const container = this.getContainer()\n\n    if (!container) return\n    if (this.getComputedStyles()[styleName] === 'transparent') {\n      return container.getComputedStyles()[styleName]\n    } else {\n      return container.getContainerStyle(styleName)\n    }\n  }\n\n  getContainer() {\n    return this.parentNode\n  }\n\n  getContext() {\n    return this.#context\n  }\n\n  isVisible() {\n    return true\n    // return (\n    //   this.styles.display > 0 &&\n    //   this.styles.opacity > 0 &&\n    //   this.style.visibility === VISIBILITY.VISIBLE\n    // )\n  }\n  initLayoutObject() {\n    this.layoutObject = createLayoutObject(this)\n  }\n\n  getLayoutObject() {\n    return this.layoutObject\n  }\n\n  getComputedStyles(): ComputedStyles {\n    return this.computedStyles\n  }\n\n  setComputedStyles(propName, value) {\n    this.computedStyles = {\n      ...this.computedStyles,\n      [propName]: value\n    }\n    Object.freeze(this.computeStyles)\n  }\n}\n\nfunction _createTextNodeIfHasText(o) {\n  if (isString(o.children)) {\n    let textNode = new CanvasTextNode(o.children)\n    o.children = [textNode]\n    // _initRenderObject(o)\n    textNode.setParentNode(o)\n    textNode.attach(o)\n  }\n\n  return o\n}\n\nfunction _createStyles(element: CanvasElement): ElementStyles {\n  console.log(' = {}', element.isBody)\n  if (element.isBody) {\n    return createCSSDeclaration(element.type, BODY_STYLES)\n  } else {\n    return createCSSDeclaration(element.type, element.styles)\n  }\n}\n\nexport function _initRenderObject(element: CanvasElement | CanvasTextNode) {\n  return\n  element.renderObject = createRenderObject(element)\n}\n","import { Engine, createEngine } from './engine'\nimport { CanvasRenderer, createRenderer } from './render/index'\nimport { CanvasElement, CreateElementFn, createElementAPI } from './element/element'\nimport { CreateTextNodeFn, createTextNodeAPI } from './element/textNode'\n\nexport interface DoCanvas {\n  body: CanvasElement\n  engine: Engine\n  renderer: CanvasRenderer\n  createElement: CreateElementFn\n  createTextNode: CreateTextNodeFn\n}\n\nexport function createDoCanvas(options) {\n  console.log('createDoCanvas', options)\n  let doc = {} as DoCanvas\n  const renderer = createRenderer(options)\n  const engine = createEngine(renderer, options)\n  const createElement = createElementAPI(engine)\n  const createTextNode = createTextNodeAPI()\n\n  doc = {\n    body: null,\n    engine,\n    renderer,\n    createElement,\n    createTextNode\n  }\n\n  doc.body = createElement('body')\n\n  return doc\n}\n","import { CanvasElement } from './element/element'\nimport { CanvasRenderer } from './render/index'\nimport { RenderObject } from './render/renderObject'\nimport { BFS, PostOrderDFS } from './utils/treeSearch'\n\nexport interface Engine {\n  renderer: CanvasRenderer\n  viewport: { width: number; height: number }\n  rootRenderObject: RenderObject\n  DFSRenderArray: RenderObject[]\n  updateDFSRenderArray(renderObject: RenderObject): void\n  measureBoxSize(elm: CanvasElement): void\n  flow(elm: CanvasElement): void\n  reflow(elm: CanvasElement): void\n  paint(elm: CanvasElement): void\n  repaint(elm: CanvasElement): void\n}\n\nexport function createEngine(renderer, options): Engine {\n  let engine: Engine = {\n    renderer,\n    viewport: {\n      width: options.width,\n      height: options.height\n    },\n    rootRenderObject: null,\n    DFSRenderArray: [],\n    updateDFSRenderArray,\n    measureBoxSize,\n    flow,\n    reflow,\n    paint,\n    repaint\n  }\n\n  function updateDFSRenderArray(renderObject) {\n    engine.DFSRenderArray = PostOrderDFS(renderObject)\n  }\n\n  function measureBoxSize(elm) {\n    engine.updateDFSRenderArray(elm.renderObject)\n    engine.DFSRenderArray.forEach((item) => {\n      item.measureBoxSize()\n    })\n  }\n\n  function flow(elm) {\n    const startTime = Date.now()\n    console.log(BFS(elm.layoutObject))\n    BFS(elm.layoutObject)\n      .reverse()\n      .forEach((item) => item.updateSize && item.updateSize())\n    return\n    console.log(\n      'flow',\n      elm,\n      BFS(elm.renderObject).map((item) => `${item.type} ${item.element.id}`),\n      PostOrderDFS(elm.renderObject).map((item) => `${item.type} ${item.element.id}`)\n    )\n    elm.computeStyles()\n    BFS(elm.renderObject)\n      .reverse()\n      .forEach((item) => item.measureBoxSize())\n    elm.renderObject.flow()\n    console.log(`渲染${BFS(elm).length}个元素 耗时 ${Date.now() - startTime} ms`)\n    elm.getRootElement().type === 'body' && paint(elm)\n  }\n\n  function reflow(elm) {\n    console.log('reflow', elm)\n    elm.computeStyles()\n    elm.renderObject.flow()\n    elm.getRootElement().type === 'body' && repaint(elm)\n  }\n\n  function paint(elm) {\n    console.log('paint', elm)\n    if (!elm) {\n      renderer.paint(engine.rootRenderObject)\n    } else {\n      renderer.paint(elm.renderObject)\n    }\n  }\n\n  function repaint(elm) {\n    console.log('repaint', elm)\n    if (!elm) {\n      renderer.paint(engine.rootRenderObject)\n    } else {\n      renderer.paint(elm.renderObject)\n    }\n  }\n\n  renderer.engine = engine\n\n  return engine\n}\n"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__extends","TypeError","String","__","this","constructor","create","__assign","assign","t","s","i","n","arguments","length","apply","__classPrivateFieldGet","receiver","state","kind","f","has","value","get","__classPrivateFieldSet","set","NOOP","isAuto","num","isArray","BFS","node","traversed","queue","item","children","unshift","shift","push","PostOrderDFS","traverse","curr","forEach","child","CORNER","getBackgroundValueForIndex","values","index","Vector","x","y","type","add","deltaX","deltaY","lerp","a","BezierCurve","start","startControl","endControl","end","subdivide","firstHalf","ab","bc","cd","abbc","bccd","dest","reverse","isBezierCurve","path","isNumberToken","token","isIdentToken","getCurvePoints","r1","r2","position","kappa","Math","sqrt","ox","oy","xm","ym","TOP_LEFT","TOP_RIGHT","BOTTOM_RIGHT","BOTTOM_LEFT","render","elm","paint","renderObject","_this","paintBlock","paintInline","paintText","hasChildNode","mask","paths","ctx","beginPath","moveTo","lineTo","canvas","width","height","formatPath","slice","closePath","_path","point","bezierCurveTo","_formatPath","_paintBackGroundAndBorder","styles","element","getComputedStyles","backgroundPaintingArea","calculateBackgroundCurvedPaintingArea","backgroundClip","curves","save","clip","backgroundColor","fillStyle","fill","restore","getTextStyles","textBaseline","console","log","fontFamily","fontSize","font","concat","defaultFontFamily","color","textLines","lines","line","fillText","layoutBox","top","topLeftBorderBox","topRightBorderBox","bottomRightBorderBox","bottomLeftBorderBox","calculateBorderBoxPath","topLeftContentBox","topRightContentBox","bottomRightContentBox","bottomLeftContentBox","calculateContentBoxPath","topLeftPaddingBox","topRightPaddingBox","bottomRightPaddingBox","bottomLeftPaddingBox","calculatePaddingBoxPath","breakFlag","breakPipe","resetPipeLine","when","cond","hook","isTreeNode","TreeNode","_a","options","_children","defineProperty","val","setParentNode","_parentNode","getRootNode","_getRoot","appendChildNode","Error","prev","_setSiblingNode","previousSibling","prependChildNode","removeChildNode","parentNode","next","nextSibling","_super","RenderObject","getContainer","appendChild","flow","layout","bounds","borderTopLeftRadius","tlh","tlv","_b","borderTopRightRadius","trh","trv","_c","borderBottomRightRadius","brh","brv","_d","borderBottomLeftRadius","blh","blv","factors","maxFactor","max","topWidth","rightHeight","bottomWidth","leftHeight","paddingTop","paddingRight","paddingBottom","paddingLeft","boundCurves","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","topLeftBorderDoubleOuterBox","topRightBorderDoubleOuterBox","bottomRightBorderDoubleOuterBox","bottomLeftBorderDoubleOuterBox","topLeftBorderDoubleInnerBox","topRightBorderDoubleInnerBox","bottomRightBorderDoubleInnerBox","bottomLeftBorderDoubleInnerBox","topLeftBorderStroke","topRightBorderStroke","bottomRightBorderStroke","bottomLeftBorderStroke","left","min","createBoundCurves","isRoot","measureBoxSize","BODY_STYLES","accentColor","additiveSymbols","alignContent","alignItems","alignSelf","alignmentBaseline","all","animation","animationComposition","animationDelay","animationDirection","animationDuration","animationFillMode","animationIterationCount","animationName","animationPlayState","animationTimingFunction","appRegion","appearance","ascentOverride","aspectRatio","backdropFilter","backfaceVisibility","background","backgroundAttachment","backgroundBlendMode","backgroundImage","backgroundOrigin","backgroundPosition","backgroundPositionX","backgroundPositionY","backgroundRepeat","backgroundRepeatX","backgroundRepeatY","backgroundSize","basePalette","baselineShift","baselineSource","blockSize","border","borderBlock","borderBlockColor","borderBlockEnd","borderBlockEndColor","borderBlockEndStyle","borderBlockEndWidth","borderBlockStart","borderBlockStartColor","borderBlockStartStyle","borderBlockStartWidth","borderBlockStyle","borderBlockWidth","borderBottom","borderBottomColor","borderBottomStyle","borderCollapse","borderColor","borderEndEndRadius","borderEndStartRadius","borderImage","borderImageOutset","borderImageRepeat","borderImageSlice","borderImageSource","borderImageWidth","borderInline","borderInlineColor","borderInlineEnd","borderInlineEndColor","borderInlineEndStyle","borderInlineEndWidth","borderInlineStart","borderInlineStartColor","borderInlineStartStyle","borderInlineStartWidth","borderInlineStyle","borderInlineWidth","borderLeft","borderLeftColor","borderLeftStyle","borderRadius","borderRight","borderRightColor","borderRightStyle","borderSpacing","borderStartEndRadius","borderStartStartRadius","borderStyle","borderTop","borderTopColor","borderTopStyle","borderWidth","bottom","boxShadow","boxSizing","breakAfter","breakBefore","breakInside","bufferedRendering","captionSide","caretColor","clear","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorRendering","colorScheme","columnCount","columnFill","columnGap","columnRule","columnRuleColor","columnRuleStyle","columnRuleWidth","columnSpan","columnWidth","columns","contain","containIntrinsicBlockSize","containIntrinsicHeight","containIntrinsicInlineSize","containIntrinsicSize","containIntrinsicWidth","container","containerName","containerType","content","contentVisibility","counterIncrement","counterReset","counterSet","cursor","cx","cy","descentOverride","direction","display","dominantBaseline","emptyCells","fallback","fillOpacity","fillRule","filter","flex","flexBasis","flexDirection","flexFlow","flexGrow","flexShrink","flexWrap","float","floodColor","floodOpacity","fontDisplay","fontFeatureSettings","fontKerning","fontOpticalSizing","fontPalette","fontStretch","fontStyle","fontSynthesis","fontSynthesisSmallCaps","fontSynthesisStyle","fontSynthesisWeight","fontVariant","fontVariantAlternates","fontVariantCaps","fontVariantEastAsian","fontVariantLigatures","fontVariantNumeric","fontVariationSettings","fontWeight","forcedColorAdjust","gap","grid","gridArea","gridAutoColumns","gridAutoFlow","gridAutoRows","gridColumn","gridColumnEnd","gridColumnGap","gridColumnStart","gridGap","gridRow","gridRowEnd","gridRowGap","gridRowStart","gridTemplate","gridTemplateAreas","gridTemplateColumns","gridTemplateRows","hyphenateCharacter","hyphenateLimitChars","hyphens","imageOrientation","imageRendering","inherits","initialLetter","initialValue","inlineSize","inset","insetBlock","insetBlockEnd","insetBlockStart","insetInline","insetInlineEnd","insetInlineStart","isolation","justifyContent","justifyItems","justifySelf","letterSpacing","lightingColor","lineBreak","lineGapOverride","lineHeight","listStyle","listStyleImage","listStylePosition","listStyleType","margin","marginBlock","marginBlockEnd","marginBlockStart","marginBottom","marginInline","marginInlineEnd","marginInlineStart","marginLeft","marginRight","marginTop","marker","markerEnd","markerMid","markerStart","maskType","mathDepth","mathShift","mathStyle","maxBlockSize","maxHeight","maxInlineSize","maxWidth","minBlockSize","minHeight","minInlineSize","minWidth","mixBlendMode","negative","objectFit","objectPosition","objectViewBox","offset","offsetDistance","offsetPath","offsetRotate","opacity","order","orphans","outline","outlineColor","outlineOffset","outlineStyle","outlineWidth","overflow","overflowAnchor","overflowClipMargin","overflowWrap","overflowX","overflowY","overrideColors","overscrollBehavior","overscrollBehaviorBlock","overscrollBehaviorInline","overscrollBehaviorX","overscrollBehaviorY","pad","padding","paddingBlock","paddingBlockEnd","paddingBlockStart","paddingInline","paddingInlineEnd","paddingInlineStart","page","pageBreakAfter","pageBreakBefore","pageBreakInside","pageOrientation","paintOrder","perspective","perspectiveOrigin","placeContent","placeItems","placeSelf","pointerEvents","prefix","quotes","r","range","resize","right","rotate","rowGap","rubyPosition","rx","ry","scale","scrollBehavior","scrollMargin","scrollMarginBlock","scrollMarginBlockEnd","scrollMarginBlockStart","scrollMarginBottom","scrollMarginInline","scrollMarginInlineEnd","scrollMarginInlineStart","scrollMarginLeft","scrollMarginRight","scrollMarginTop","scrollPadding","scrollPaddingBlock","scrollPaddingBlockEnd","scrollPaddingBlockStart","scrollPaddingBottom","scrollPaddingInline","scrollPaddingInlineEnd","scrollPaddingInlineStart","scrollPaddingLeft","scrollPaddingRight","scrollPaddingTop","scrollSnapAlign","scrollSnapStop","scrollSnapType","scrollbarGutter","shapeImageThreshold","shapeMargin","shapeOutside","shapeRendering","size","sizeAdjust","speak","speakAs","src","stopColor","stopOpacity","stroke","strokeDasharray","strokeDashoffset","strokeLinecap","strokeLinejoin","strokeMiterlimit","strokeOpacity","strokeWidth","suffix","symbols","syntax","system","tabSize","tableLayout","textAlign","textAlignLast","textAnchor","textCombineUpright","textDecoration","textDecorationColor","textDecorationLine","textDecorationSkipInk","textDecorationStyle","textDecorationThickness","textEmphasis","textEmphasisColor","textEmphasisPosition","textEmphasisStyle","textIndent","textOrientation","textOverflow","textRendering","textShadow","textSizeAdjust","textTransform","textUnderlineOffset","textUnderlinePosition","touchAction","transform","transformBox","transformOrigin","transformStyle","transition","transitionDelay","transitionDuration","transitionProperty","transitionTimingFunction","translate","unicodeBidi","unicodeRange","userSelect","vectorEffect","verticalAlign","viewTransitionName","visibility","whiteSpace","widows","willChange","wordBreak","wordSpacing","wordWrap","writingMode","zIndex","zoom","cssFloat","cssText","parentRule","DEFAULT_VIEW_STYLES","DEFAULT_TEXT_STYLES","EXTEND_STYLE_KEYS","name","parse","tokens","map","format","borderColorForSide","side","reduce","bit","parseDisplayValue","number","marginForSide","paddingForSide","transformFunction","SUPPORTED_TRANSFORM_FUNCTIONS","matrix","args","arg","matrix3d","a1","b1","a2","b2","a4","b4","auto","createCSSDeclaration","DEFAULT_STYLES","getDefaultStyle","Number","descriptor","style","toString","CanvasTextNode","text","_computedStyles","isBody","attach","parent","createPoint","setX","setY","getCenter","rect","LayoutObject","getStyles","LayoutBoxModelObject","offsetLeft","offsetTop","offsetWidth","offsetHeight","physicalPaddingToLogical","before","after","physicalBorderToLogical","physicalMarginToLogical","lineLeft","LayoutBox","location","setWidth","setHeight","updateSize","_measureSize","fns","_i","pipeLine","_initSize","_calcBodySize","_calcWidthByChild","_calcHeightByChild","o","getContext","viewport","acc","LayoutBlock","updateLayout","mergeInlineChild","LayoutInline","LayoutInlineBlock","LayoutText","createLayoutObject","CanvasElement","context","_CanvasElement_context","_CanvasElement_computedStyles","id","computedStyles","renderer","initLayoutObject","textNode","_createTextNodeIfHasText","getLayoutObject","layoutObject","hasChildren","childNodes","rootElm","getRootElement","computeStyles","key","getContainerStyle","freeze","styleName","isVisible","setComputedStyles","propName","doc","dpr","root","createRenderer","engine","rootRenderObject","DFSRenderArray","updateDFSRenderArray","reflow","repaint","createEngine","createElement","body","createTextNode"],"mappings":"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","x_google_ignoreList":[0]}